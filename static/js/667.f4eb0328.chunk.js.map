{"version":3,"file":"static/js/667.f4eb0328.chunk.js","mappings":"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GAAW,MAiB/B,SAASoB,EAA0BC,EAAqB5X,EAAS6X,EAAYvB,EAASxD,GAElF,IAAI5X,EAAOnE,EAAcmE,KACrBmF,EAAU/B,EAAU+B,QACpBS,EAAOxC,EAAUwC,KAGjByQ,EAAQ,IAAInG,EACZ0M,EAAkBxZ,EAAU1K,EAAQI,GAGxC,GAAK+jB,GAAcH,GAAnB,CAIA,GAAI9M,EAAU8M,GAAsB,CAChC,IAAII,EAAOlN,EAAU8M,GAErB,OADAI,EAAKhY,QAAQA,GACNgY,EAIX,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAIAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAGAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAgHAC,EACAC,GACAC,GAOAC,GAEAC,GAMAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GAGAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GAIAC,GACAC,GACAC,GACAC,GACAC,GAQAC,GAGAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GAGAC,GACAC,GACAC,GACAC,GArOAC,GAAqB,GACrBC,GAAwB,GACxBC,GAAsB,GACtBC,GAAgB,GAChBC,GAA0B,GAG1BC,GAAkB,UAClBC,GAAkB,UAClBC,GAAmB,WACnBC,GAAkB,UAClBC,GAAU,MACVC,GAAY,QACZC,GAAa,SACbC,GAAW,OACXC,GAAe,OACfC,GAAe,OACfC,GAAY,QACZC,GAAa,SACbC,GAAY,QACZjiB,GAAY,GACZkiB,GAAW,OACXC,GAAW,OACXC,GAAa,SACbC,GAAqB,OACrBC,GAAQ,IACRC,GAAQ,IACRC,GAAU,IACVziB,GAAY,IACZ0iB,GAAgB,YAChBC,GAAsB,cACtBC,GAAoB,YACpB1iB,GAAiBmiB,GAAa,OAC9BliB,GAAgBkiB,GAAa,MAC7BQ,GAA0B,uBAC1BC,GAAwB,+BACxBC,GAA0B,sBAC1BC,GAAiB,aACjBC,GAAiB,aACjBC,GAAmB,UACnBC,GAAiB,QACjBC,GAAuB,cACvBC,GAAyB,mDACzBC,GAA6B,0BAG7BC,GAAmB,MACnBC,GAAwBD,GAAmB,OAC3CE,GAAwBF,GAAmB,OAC3CG,GAA+BD,GAAwB,WACvDE,GAAgCF,GAAwB,YACxDG,GAA0CH,GAAwB,IAAMf,GAAgBC,GAAsBrB,GAC9GuC,GAAwCJ,GAAwB,IAAMf,GAAgBE,GAAoBtB,GAC1GwC,GAA2BL,GAAwB,cACnDM,GAAoBN,GAAwB,OAC5CO,GAA+BP,GAAwB,mBACvDQ,GAA0BR,GAAwB,aAClDS,GAAyBT,GAAwB,YAEjDU,IADAD,GAAyBT,GAAwB,aACE,KACnDW,GAA0BF,GAAyB,KACnDG,GAA4Bd,GAAmB,WAC/Ce,GAAiCD,GAA4B,SAC7DE,GAA2BhB,GAAmB,UAC9CiB,GAA4BjB,GAAmB,WAC/CkB,GAA8CD,GAA4B,+BAC1EE,GAA6CF,GAA4B,8BACzEG,GAA2BpB,GAAmB,UAC9CqB,GAAkCrB,GAAmB,kBACrDsB,GAA+BtB,GAAmB,eAClDuB,GAAoCvB,GAAmB,qBACvDwB,GAAkCxB,GAAmB,kBACrDyB,GAAsCzB,GAAmB,uBACzD0B,GAA2CD,GAAsC,SACjFE,GAAwB3B,GAAmB,eAC3C4B,GAAsB5B,GAAmBb,GACzC0C,GAA2BD,GAAsB,SACjDE,GAA8BD,GAA2B,OACzDE,GAA4BH,GAAsB,UAClDI,GAA+BD,GAA4B,OAC3DE,GAA8BL,GAAsB,YACpDM,GAAgCN,GAAsB,IAAMhD,GAAWb,GACvEoE,GAA4BP,GAAsB,UAClDQ,GAAkCD,GAA4B,UAC9DE,GAAmCD,GAAkC,QACrEE,GAAmCF,GAAkChD,GACrEmD,GAAmCH,GAAkC/C,GACrEmD,GAAgCZ,GAAsBxC,GACtDqD,GAA8Bb,GAAsBvC,GACpDqD,GAAqB1C,GAAmB,WACxC2C,GAAsB3C,GAAmB,aACzC4C,GAA4B,CAC5B1B,GACAC,GACAW,GACAE,GACAC,GACAC,GACAE,GACAC,GACAC,GACAC,GACAG,IAAoBrjB,KAAK5C,IAGzBomB,GAAuB,GAGvBC,GAA2B,CAACjxB,EAAQK,IAQpC6wB,GAAc,GACdC,GAA4B,4BAI5BC,GAAwB,GAExBC,GAAoB,GACpBC,GAAyB,OACzBC,GAAoB,GAwEpBC,GAAmB,GAQnBC,GAAiC,CAAC,OAAQ,OAAQ,QAClDC,GAA6B,CAAC1xB,EAAQE,EAAGF,EAAQC,EAAGD,EAAQL,EAAG,QAAQ0E,OAAO4sB,IAG9EU,GAAiB,GA6nIrB,OAn9BAhU,EAAMiU,MAAQ,WACV3L,GAAY,GAgBhBtI,EAAMoE,OAAS,SAAU8P,GAIrB,IAAIC,EACAC,EAEAC,EACAC,EACAC,EARJ,IAAI/M,EA+CJ,OA1Ce7d,EAAKuqB,IAAUtyB,EAAMI,EAM5BkyB,IAAU9E,IACV+E,EAAeK,KACfJ,EAAeK,MACfJ,EAAeF,GAAgBC,IAE3BhQ,GAAO,CACHsQ,oBAAqBN,EACrBO,gBAAiBpN,EAAe7lB,EAAY+mB,MAI/CyL,IAAU7E,GACXlC,IACAmH,EAAUrH,GAA8BF,GAAsB6H,eAC9DL,EAAarH,GAAiCF,GAAyB4H,gBAGvEN,EAAUtU,EAAMoE,OAAOgL,IAGZ,SAAV8E,GACL9P,GAAO,CACHyQ,kBAAkB,EAClBH,qBAAqB,KAK7BR,EAAQ5L,GAAa4L,EACrB5L,GAAY,EACPtI,EAAMoE,OAAOiL,MAAa6E,GAC3B9P,GAAO,CAAE0Q,OAAQZ,KAGzBa,KAEOV,GAAgBC,GAAWC,GAStCvU,EAAMvR,QAAU,SAAUumB,EAAYrlB,GAClC,IACIslB,EADAC,EAAS,GAIb,GAAInoB,EAAUkC,cAAc+lB,KAAgBjoB,EAAU8B,cAAcmmB,GAAa,CAC7E,GAAIrrB,EAAKqrB,IAAepzB,EAAMI,EAS1B,OAAOwmB,GARP,KAAIliB,UAAU9B,OAAS,GAKnB,OAAO2wB,GAAiB3M,GAAiBwM,GAJzCI,GAAiBF,EAAQF,EAAYrlB,GACrCslB,EAAaI,GAAWH,QAShCD,EAAaI,GAAWL,GAGvBjoB,EAAUkC,cAAcgmB,IACzB7Q,GAAO,CAAEuQ,gBAAiBM,KAOlCjV,EAAMsV,QAAU,WACZ,IAAI9N,EAAJ,CAcA,IAAK,IAAI+N,KAVThU,EAAenM,OAAO4K,GAGtBwV,KAGAC,GAAoBtM,IACpBsM,GAAoBvM,IAGAqK,GAChBvT,EAAM0V,UAAUH,GAGpB,KAAOvB,GAAe3xB,EAAQG,GAAK,GAC/BwxB,GAAe2B,KAAf3B,GAGJ4B,IAA0B,GAGtBpM,IACApU,GAAOoU,IACPD,IACAnU,GAAOmU,IACPzB,GACA1S,GAAO8T,IAGX2M,IAAmB,GACnBC,IAAwB,GACxBC,IAAkB,GAGlB,IAAK,IAAIxzB,EAAI,EAAGA,EAAIqxB,GAAkBvxB,EAAQG,GAAID,IAC9CwK,EAAU6mB,GAAkBrxB,IAAI+R,IAAIqf,GAAwBqC,IAChEpC,GAAoBlyB,EAEpB8lB,GAAa,EACbc,GAAY,EAGZ/O,EAAU8M,EAAqB,GAC/B4P,GAAiB,iBA6ErBjW,EAAMkW,OAAS,SAAUC,EAAa7kB,EAAUC,EAAQC,GACpD,GAAyB,IAArBlL,UAAU9B,QAAgB2xB,IAAgBz0B,EAAW,CACrD,IAAI00B,EAAQjI,GACRkI,EAAQjI,GACRkI,EAAkBhK,IAAsBjE,GAAUzB,EAAmBrkB,EACrEg0B,EAAkBjK,IAAsBjE,GAAUzB,EAAmB1kB,EACrEs0B,EAAUJ,EAAMK,eAChBC,EAAeN,EAAMO,oBACrBC,EAAaR,EAAMS,WAMvB,OALAH,EAAeJ,EAAkB,EAAII,EAAeA,EACpDF,EAAUF,EAAkBM,EAAaJ,EAAUA,EAEnDI,GAAcL,GAAmB,EAAI,EAE9B,CACH3d,SAAU,CACNlT,EALR8wB,GAAWD,GAAmB,EAAI,EAM1B3tB,EAAGytB,EAAMI,gBAEbK,MAAO,CACHpxB,EAAGgxB,EACH9tB,EAAGytB,EAAMM,qBAEb3jB,IAAK,CACDtN,EAAGkxB,EACHhuB,EAAGytB,EAAMQ,YAEbE,aAAc,CACVrxB,EAAG0wB,EAAMY,cACTpuB,EAAGytB,EAAMW,eAEbC,aAAc,CACVvxB,EAAG0wB,EAAMc,cACTtuB,EAAGytB,EAAMa,eAEbC,kBAAmB,CACfzxB,EAAG0wB,EAAMgB,mBACTxuB,EAAGytB,EAAMe,oBAEbC,YAAa,CACT3xB,EAAG0wB,EAAMkB,aACT1uB,EAAGytB,EAAMiB,cAEbC,oBAAqB,CACjB7xB,EAAG0wB,EAAMoB,qBACT5uB,EAAGytB,EAAMmB,sBAEbC,MAAOpP,EACPqP,gBAAiBpL,IAIzBtM,EAAMoE,OAAOiL,IAEb,IAMI9sB,EAGAo1B,EACAC,EACAC,EASAC,EACAC,EACAC,EACAC,EACAC,EAxBAld,EAAesR,GACf6L,EAAwB,CAAC3I,GAAOV,GAAU,KAC1CsJ,EAAwB,CAAC3I,GAAOd,GAAS,KACzC0J,EAAuB,CAAC,KAAM,KAAM,KAAM,MAC1CC,EAAmB3uB,EAAK2H,IAAa1P,EAAMC,EAC3C02B,EAAmBD,EAAmBhnB,EAASE,SAAWA,EAE1DgnB,EAAc,GACd3mB,EAAgB,GAIhB4mB,EAAS,MACTC,EAAW,QACXC,EAAY,SACZC,EAAa,UACbC,EAAY,SACZC,EAAW,QACXC,EAAc,WACdC,EAAY32B,EAAQG,EAMpBy2B,EAA+B,CAACzJ,GAAOC,GAAO,KAAM,MACpDyJ,EAAgC,CAACR,EAAUD,EAAQE,EAAWC,GAC9DO,EAAiC,CAACN,EAAWC,EAAUC,GACvDK,EAA0BjD,EAAY9zB,EAAQY,KAAK,MACnDo2B,EAAkBD,EAA0BjD,EAAY9lB,GAAK8lB,EAC7DmD,MAA0BD,aAA2BtsB,GAAa9C,IAASovB,aAA2BpvB,EACtGsvB,IAA+BD,IAAkC9S,GAAc6S,GAC/EG,GAAuB,WACnB7B,GACA8B,IAA6B,GAC7B7B,GACA6B,IAA6B,IAEjCC,GAAwB/vB,EAAK4uB,IAAqB32B,EAAME,EAAIJ,EAAY,WACxE83B,KACAjB,KAEJ,SAASoB,GAAyBC,EAAWC,GACzC,IAAKt3B,EAAI,EAAGA,EAAIs3B,EAAcb,GAAYz2B,IACtC,GAAIq3B,IAAcC,EAAct3B,GAC5B,OAAO,EAEf,OAAO,EAEX,SAASu3B,GAAaC,EAAK5D,GACvB,IAAI6D,EAAkBD,EAAM5B,EAAwBC,EAGpD,GAFAjC,EAAcxsB,EAAKwsB,IAAgBv0B,EAAMI,GAAK2H,EAAKwsB,IAAgBv0B,EAAMM,EAAI,CAACi0B,EAAaA,GAAeA,EAEtG3wB,EAAcgE,IAAI2sB,GAClB,OAAO4D,EAAM5D,EAAY,GAAKA,EAAY,GACzC,GAAIxsB,EAAKwsB,IAAgBv0B,EAAMC,EAGhC,IAAKU,EAAI,EAAGA,EAAIy3B,EAAgBhB,GAAYz2B,IACxC,GAAIy3B,EAAgBz3B,KAAM4zB,EACtB,OAAOA,EAAY6D,EAAgBz3B,IAGnD,SAAS03B,GAAeF,EAAKG,GACzB,IACIC,EACAC,EAKA5iB,EAKA6iB,EAZAC,EAAW3wB,EAAKuwB,IAAct4B,EAAMI,EAGpCu4B,EAAaR,EAAM5L,GAAwBC,GAC3CoM,EAAaD,EAAW9D,eACxBgE,EAAYF,EAAW1D,WACvB6D,EAAO,MAEPC,EAAWtS,GAAU0R,EACrBa,EAAqBD,GAAY/T,EAAmB1kB,IAAM8Y,EAC1D6f,EAAa,UACbC,EAAWC,KA2Bf,GAzBIT,GAEIJ,EAAUlB,GAAa,IACvBqB,EAAmBH,EAAUc,OAAO,EAAG,GACnClsB,EAAQurB,EAAkBhC,IAAyB,IACnD8B,EAAWE,IAKnBH,GADAA,EAAYC,EAAWD,EAAUc,OAAO,GAAKd,GAE5CW,GAAY,OAAQ,GACpBA,GAAY,KAAM,GAClBA,GAAY,QAASD,EAAqB,IAAM1tB,IAAaqiB,IAC7DsL,GAAY,MAAOD,EAAqB,IAAM1tB,IAAaqiB,IAC3DsL,GAAY,MAAO3tB,IACnB2tB,GAAY,KAAMH,EAAQD,GAAaE,GAAY/T,EAAmB1kB,GAAK,EAAI,GAAK,KACpF24B,GAAY,MAAOH,EAAOrM,GAAc7jB,GACxCqwB,GAAY,MAAOH,EAAOrM,GAActM,GACzCqY,EAASa,GAAoBC,MAAMhB,GAAae,GAAoBH,EAASZ,IAAY,GAAMiB,UAAYjB,IAG3GE,EAASF,EAGTE,IAAW14B,IAAcw5B,MAAMd,IAAWzwB,EAAKywB,IAAWx4B,EAAMM,EAAG,CACnE,IAAIk5B,EAAoBpgB,GAAgB2f,EACpCU,EAAqBb,GAAcY,GAAqBxU,EAAmB1kB,GAAK,EAAI,GACpFo5B,EAASF,GAAqBxU,EAAmBrkB,EACjDg5B,EAASH,GAAqBxU,EAAmB1kB,EAErD,OADAm5B,EAAqBC,EAAUb,EAAYY,EAAsBA,EACzDlB,GACJ,IAAK,KACD3iB,EAAa6jB,EAAqBjB,EAClC,MACJ,IAAK,KACD5iB,EAAa6jB,EAAqBjB,EAClC,MACJ,IAAK,KACD5iB,EAAa6jB,EAAqBjB,EAClC,MACJ,IAAK,KACD5iB,EAAa6jB,EAAqBjB,EAClC,MACJ,QACI5iB,EAAa4iB,EAGrB5iB,EAAa8jB,EAASb,EAAYjjB,EAAaA,EAC/CA,GAAc+jB,GAAU,EAAI,EAC5B/jB,EAAamjB,GAAY/T,EAAmB1kB,EAAI6H,EAAKoc,IAAI,EAAGpc,EAAKiJ,IAAIynB,EAAWjjB,IAAezN,EAAKiJ,IAAI,EAAGjJ,EAAKoc,IAAIsU,EAAWjjB,IAEnI,OAAOA,IAAegjB,EAAa94B,EAAY8V,EAEnD,SAASgkB,GAAgB7rB,EAAO8rB,EAAmBC,EAAc7B,GAC7D,IAEI8B,EACAC,EAHAC,EAAgB,CAACH,EAAcA,GAC/BI,EAAYnyB,EAAKgG,GAKrB,GAAImsB,GAAaL,EACb9rB,EAAQ,CAACA,EAAOA,QAEf,GAAImsB,GAAal6B,EAAMG,GAExB,IADA45B,EAAiBhsB,EAAMqpB,IACF,GAAK2C,EAAiB,EACvChsB,EAAQksB,OAIR,IAFuB,IAAnBF,IACAhsB,EAAM,GAAK+rB,GACVn5B,EAAI,EAAGA,EAAIo5B,EAAgBp5B,IAE5B,GADAq5B,EAAejsB,EAAMpN,GACjBoH,EAAKiyB,IAAiBH,IAAsB9B,GAAyBiC,EAAc/B,GAAgB,CACnGlqB,EAAQksB,EACR,YAMZlsB,EADKmsB,GAAal6B,EAAMC,EAChB,CAAC8N,EAAM6f,KAAUkM,EAAc/rB,EAAM8f,KAAUiM,GAE/CG,EACZ,MAAO,CAAEn2B,EAAGiK,EAAM,GAAI/G,EAAG+G,EAAM,IAEnC,SAASosB,GAAeC,GACpB,IACIpC,EACAqC,EAFAh4B,EAAS,GAGTi4B,EAAkB,CAACvN,GAASC,GAAWC,GAAYC,IACvD,IAAKvsB,EAAI,EAAGA,EAAIy5B,EAA8BhD,IACtCz2B,IAAM25B,EAAgBlD,GAD4Bz2B,IAGtDq3B,EAAYoC,EAA8Bz5B,IAC1C05B,EAAgBtyB,EAAKiwB,KACAh4B,EAAMK,EACvBgC,EAAOiO,KAAK0nB,EAAYqB,GAAoB/C,EAAa/lB,IAAIqc,GAAkB0N,EAAgB35B,KAAO,GAEtG0B,EAAOiO,KAAK+pB,GAAiBr6B,EAAMM,EAAI03B,EAAY,GAE3D,OAAO31B,EAGX,GAAIq1B,IAA2BC,GAA8B,CAEzD,IAMI4C,GANAC,GAAShD,EAA0BjD,EAAYiG,OAAS,EACxDC,GAAOjD,EAA0BjD,EAAYkG,KAAO,EACpDnG,GAASkD,EAA0BjD,EAAYD,OAAS,EACxDoG,GAAQlD,EAA0BjD,EAAYmG,MAAQ,EACtDC,GAAgB,CAAC,EAAG,EAAG,EAAG,GAC1BC,GAAa7yB,EAAKyyB,IAItB,IAFAlE,EAAeoB,GAA0BD,EAAkBtsB,EAAUssB,IAEpDL,GAAa,EAAG,CAGzBoD,GADAI,IAAc56B,EAAMM,GAAKs6B,IAAc56B,EAAMK,EACpC85B,GAAe,CAACK,GAAQA,GAAQA,GAAQA,KAC5CI,IAAc56B,EAAMG,EAEJ,KADrBo6B,GAAeC,GAAOpD,IAET+C,GAAe,CAACK,GAAO,GAAIA,GAAO,GAAIA,GAAO,GAAIA,GAAO,KAC5DD,IAAgB,EACZJ,GAAeK,IAEfG,GAERC,IAAc56B,EAAMC,EAChBk6B,GAAe,CAACK,GAAOzN,IAAUyN,GAAOxN,IAAYwN,GAAOvN,IAAauN,GAAOtN,MAE/EyN,GAGbzE,EAAe6B,GAAyB0C,GAAMpD,GAAgCoD,GAAO,KACrFtE,EAAiByD,GAAgBtF,GAAQt0B,EAAMI,EAAG62B,EAAWM,GAC7DnB,EAAgBwD,GAAgBc,GAAO16B,EAAMI,EAAG02B,EAAUQ,GAC1DjB,EAAiBmE,GAEjB,IAAIK,GAAiB,CACjBj6B,EAAG2rB,GAAsBsI,eACzB/rB,EAAG0jB,GAAoBqI,gBAGvBiG,GAAiBtT,GAAgB9Q,SAGjCqkB,GAAgBzE,EAAa5f,SAC7BskB,GAAc,CACdl3B,EAAGqyB,EAAeryB,GAAKozB,GAAYhB,GAAgBrI,GACnD7mB,EAAGmvB,EAAenvB,GAAKkwB,GAAYhB,GAAgBtI,IAEvDmN,GAAchO,KAAYsJ,EAAe,GACzC0E,GAAc7N,KAAamJ,EAAe,GAC1C,IAAI4E,GAA2B,CAC3Bn3B,EAAGqE,EAAKyZ,MAAMmZ,GAAc7N,IAAY4N,GAAe5N,IAAY2N,GAAej6B,GAClFoG,EAAGmB,EAAKyZ,MAAMmZ,GAAchO,IAAW+N,GAAe/N,IAAW8N,GAAe/xB,IAYpF,GAVI2d,IACKzB,EAAmB1kB,GAAM0kB,EAAmBrkB,IAC7Cs6B,GAAyBn3B,EAAIqE,EAAKyZ,MAAMkZ,GAAe5N,IAAY6N,GAAc7N,IAAY2N,GAAej6B,IAC5GokB,EAAmB1kB,GAAK8Y,IACxB6hB,GAAyBn3B,IAAM,GAC/BkhB,EAAmBrkB,GAAKyY,IACxB6hB,GAAyBn3B,EAAIqE,EAAKyZ,MAAMkZ,GAAe5N,IAAY6N,GAAc7N,KAAaX,GAAsB0I,WAAa4F,GAAej6B,MAIpJw1B,EAActyB,GAAKgzB,GAAYV,EAAcpvB,GAAK8vB,GAAYX,EAAeryB,GAAKqzB,GAAehB,EAAenvB,GAAKmwB,GAAe1Q,EAAQ,CAC5I,IAAIyU,GAAe5E,EAAa,GAC5B6E,GAAiB5V,EAAoB2V,GAAaz6B,EAAQa,OAAS,CACnE85B,MAAOF,GAAaz6B,EAAQS,IAC5Bm6B,OAAQH,GAAaz6B,EAAQM,KAE7Bu6B,GAAc,CACd1yB,EAAGuyB,GAAe9N,IAAagJ,EAAe,GAAKA,EAAe,GAClElW,EAAGgb,GAAe7N,IAAc+I,EAAe,GAAKA,EAAe,IAEnEkF,GAAgB,SAAUpD,GAC1B,IAAIqD,EAAOC,GAAiBtD,GACxBuD,EAAKF,EAAKG,KACVC,EAAKJ,EAAKK,UACVC,EAAKN,EAAKO,KACVC,EAAa5F,EAAc0F,KAAQ3D,GAAM1R,EAASqQ,EAAoBD,GACtEoF,EAAgB7F,EAAc0F,IAAO/E,EACrCmF,EAAiB9F,EAAc0F,IAAO9E,EACtCmF,EAAchG,EAAe2F,IAAO5E,EACpCkF,EAAiBjG,EAAe2F,IAAO3E,EACvCkF,EAAS5P,GAAciP,GACvBY,EAAWxB,GAAec,GAC1BW,EAASjB,GAAYI,GACrBc,EAAWzB,GAAca,GACzBa,EAASR,EAAgB,EAAI,EAC7BS,EAAsBF,EAAYD,EAAS,EAC3CI,EAAuBL,EAAYD,EAAS,EAC5CO,EACAL,GAAUF,GACPG,GAAYF,GACZE,EAAWD,GAAUD,EAAWD,EAEnCF,EACAnB,GAAYc,IAAM,EACZd,GAAYc,MACdI,GAAkBE,KAClBpB,GAAYc,KAAMM,GAAiBQ,EACnCZ,EAAaO,EAASF,EAASK,EAAsBC,EAAuBD,EAAsBC,GAEtG1B,GAAyBa,IAAOE,GAAcC,GAAkBI,EAASI,EAAWF,EAASE,IAAYtE,GAAO1R,GAAUrN,GAAgB,EAAI,GAAK,IAG3JmiB,IAAc,GACdA,IAAc,GAGdP,GAAYh0B,UACLi0B,GAAyBj0B,EAChCg0B,GAAYl3B,UACLm3B,GAAyBn3B,EAEpCywB,EAAc0G,IAItBrE,EAAYrrB,IAAkB8sB,IAAe,EAAMH,IAAa,EAAM3D,IACtEqC,EAAYprB,IAAiB6sB,IAAe,EAAOH,IAAa,EAAO3D,IACvEwB,EAAea,EAAYrrB,MAAoBzL,EAC/Ck2B,EAAcY,EAAYprB,MAAmB1L,GAExCi2B,GAAgBC,KAAiBtmB,EAAW,GAAKgnB,GAC9CA,GACAhnB,EAASE,SAAWkoB,GACpBrQ,GAAiBjY,QAAQonB,EAAalnB,KAGtCumB,EAAmB,CACfvmB,SAAUA,EACVE,SAAUkoB,IAEVl0B,EAAcgE,IAAI+H,IAAWxE,EAAU8B,cAAc0C,IACrDM,EAAc1E,IAAkBoE,EAAO,IAAMA,EAAO7L,EACpDmM,EAAczE,IAAiBmE,EAAO,IAAMA,EAAO3I,EACnDivB,EAAiBhmB,cAAgBA,GAGjCgmB,EAAiBtmB,OAASA,EAE9B8X,GAAiBjY,QAAQonB,EAAaX,KAItCF,GACAtO,GAAiBlc,IAAgBqrB,EAAYrrB,KAC7CyqB,GACAvO,GAAiBjc,IAAeorB,EAAYprB,KAChDosB,OAQRxZ,EAAMye,WAAa,SAAUC,EAAQC,EAAQC,GAEzC,OADAvV,GAAiBtW,KAAK2rB,EAAQC,EAAQC,GAC/B5e,GAQXA,EAAM6e,YAAc,SAAUC,GAC1B,IAAIl1B,EAAM,CACNtB,OAAQ6hB,GACR4U,KAAM3U,GACN4U,QAASzU,GACT0U,SAAUzU,GACV0U,QAASzU,GACT0U,oBAAqB,CACjBC,UAAWzV,GAA4B,GACvC0V,MAAOzV,GAAiC,GACxC0V,OAAQzV,GAAkC,IAE9C0V,kBAAmB,CACfH,UAAWtV,GAA0B,GACrCuV,MAAOtV,GAA+B,GACtCuV,OAAQtV,GAAgC,IAE5CwV,gBAAiB9V,GAAwB,IAE7C,OAAO/f,EAAKm1B,IAAgBl9B,EAAMI,EAAImzB,GAAiBvrB,EAAKk1B,GAAel1B,GAQ/EoW,EAAMyf,SAAW,SAAUC,GACvB,SAASC,EAAQ/1B,GACb,IAAKmD,EAAU8B,cAAcjF,GACzB,OAAOA,EACX,IAAIg2B,EAAWC,GAAW,GAAIj2B,GAC1Bk2B,EAAqB,SAAU/tB,EAAMC,GACjC4tB,EAASv9B,EAAQY,KAAK8O,KACtB6tB,EAAS5tB,GAAM4tB,EAAS7tB,UACjB6tB,EAAS7tB,KAMxB,OAHA+tB,EAAmB,IAAK7Q,IACxB6Q,EAAmB,IAAK5Q,WACjB0Q,EAASt9B,EACTs9B,EAEX,IAAIh2B,EAAM,CACNm2B,YAAaJ,EAAQnY,GACrBwY,WAAYL,EAAQrX,GACpBpN,WAAYykB,GAASxS,IACrB8S,UAAWN,EAAQ5U,IACnBmV,WAAYP,EAAQ3U,IACpBgU,QAASW,EAAQzU,IACjBiV,eAAgBR,EAAQhU,IACxByU,aAAcT,EAAQ7U,IACtBuV,YAAaV,EAAQ9U,IACrByV,kBAAmBX,EAAQhV,IAC3B4V,aAAcZ,EAAQtR,IACtBmS,SAAUb,EAAQjV,IAClB+V,cAAed,EAAQhY,IAE3B,OAAOhe,EAAK+1B,IAAkB99B,EAAMI,EAAImzB,GAAiBvrB,EAAK81B,GAAiB91B,GAQnFoW,EAAM0gB,IAAM,SAAUnL,GAClB,IAAItxB,EACA08B,EAAiBnN,GAA0BvuB,MAAM,KACjD1C,EAAI,EACR,GAAIoH,EAAK4rB,IAAY3zB,EAAMI,GACvB,GAAIuxB,GAAYlxB,EAAQY,KAAKsyB,GAEzB,IADAtxB,EAAS47B,GAAW,GAAItM,GAAYgC,IAC7BhzB,EAAIo+B,EAAen8B,OAAQjC,WACvB0B,EAAO08B,EAAep+B,SAKrC,IAAKA,KADL0B,EAAS,GACCsvB,GACNtvB,EAAO1B,GAAKs9B,GAAW,GAAI7f,EAAM0gB,IAAIn+B,IAE7C,OAAO0B,GASX+b,EAAM4gB,OAAS,SAAUrL,EAASsL,GAC9B,IACInnB,EACAonB,EACAC,EACAC,EAJAC,EAAyBpnB,EAAQqnB,UAAU3L,GAK3C4L,GAAoB,EACxB,GAAIF,EAAwB,CACxB,GAAK1N,GAAYlxB,EAAQY,KAAKsyB,GAuB1B,OAAOvV,EAAM0gB,IAAInL,GAjBjB,IALA7b,EAAWunB,EAAuBG,iBAAiB/6B,KAAK2Z,EACpD6f,GAAW,GAAIoB,EAAuBlhB,gBACtChT,EACAvH,MAGAu7B,EAAmBrnB,EAAS2nB,SACxB13B,EAAKo3B,IAAqBn/B,EAAME,IAChCk/B,EAAiBD,EAAiBz/B,GAClC6/B,EAAoBx3B,EAAKq3B,IAAmBp/B,EAAMK,EAAI++B,EAAiBG,GAEvEA,GAMA,OALA5N,GAAYgC,GAAW7b,EACvBonB,EAAgBpnB,EAAS4nB,MACrB33B,EAAKm3B,IAAkBl/B,EAAME,GAC7Bg/B,EAAcD,GAEX7gB,EAAM0gB,IAAInL,QAQ7BjW,QAAQC,KAAK,8BAAiCgW,EAAU,yBAQhEvV,EAAM0V,UAAY,SAAUH,GACxB,IACIgM,EADA7nB,EAAW6Z,GAAYgC,GAE3B,QAAI7b,WACO6Z,GAAYgC,GAEnBgM,EAAkB7nB,EAAS8nB,QACvB73B,EAAK43B,IAAoB3/B,EAAME,GAC/By/B,KAEG,IAyMX1nB,EAAQ4nB,MAAMC,GAAUrb,EAAqB5X,EAAS6X,KACtD/M,EAAU8M,EAAqBrG,GAG5BA,EA5lIP,SAAS2hB,GAA6BC,EAASC,EAAYC,EAAU1sB,EAAQ2sB,GACzE,IAAIC,EAAYx8B,EAAcgE,IAAIq4B,IAAer8B,EAAcgE,IAAIs4B,GAC/DG,EAAS7sB,EAAS,sBAAwB,mBAC1C8sB,EAAQ9sB,EAAS,MAAQ,KACzB+sB,GAASH,GAAoBH,EAAW58B,MAAMgI,IAC9C1K,EAAI,EAEJ6/B,EAAwBr1B,EAAU8B,cAAckzB,GAChDM,EAAWjb,IAA0Bgb,EAAyBL,EAAiBO,SAAYP,KAAsB,EACjHQ,EAAUH,IAA0BL,EAAiBS,WAAY,GACjEC,EAAcrb,EAAwB,CACtCib,QAASA,EACTE,QAASA,GACTA,EAEJ,GAAIP,EACA,KAAOz/B,EAAIs/B,EAAWx/B,EAAQG,GAAID,IAC9Bo/B,GAA6BC,EAASC,EAAWt/B,GAAIu/B,EAASv/B,GAAI6S,EAAQ2sB,QAG9E,KAAOx/B,EAAI4/B,EAAO9/B,EAAQG,GAAID,IACvB6kB,EACCwa,EAAQ,GAAGK,GAAQE,EAAO5/B,GAAIu/B,EAAUW,GAGxCb,EAAQM,GAAOC,EAAO5/B,GAAIu/B,GAO1C,SAASY,GAAwBd,EAASC,EAAYC,EAAUO,GAC5DV,GAA6BC,EAASC,EAAYC,GAAU,EAAOO,GACnErO,GAAe9hB,KAAK1M,EAAcO,KAAK47B,GAA8B,EAAGC,EAASC,EAAYC,GAAU,EAAMO,IAUjH,SAAS5M,GAAoBkN,EAAeC,GACxC,GAAID,EAAe,CACf,IAAIE,EAAiBr9B,EAAcsB,KAC/Bg8B,EAAyB,yEACzBC,EAAgB,aAChBC,EAAc,QACdxzB,EAAW,WACXmzB,EAAcv1B,IAAe41B,GAAa71B,IAAgBkb,EAASzB,EAAmB1kB,GAAK8gC,EAAcpc,EAAmBrkB,EAAI,EAAIygC,EAAcA,GAClJJ,KAGJ,GAAIA,EAA0B,CAC1B,GAAIvb,IACIua,EAAUe,EAAcxrB,SAAS,YAAYnC,OAAOiuB,GAAYjR,KAAkC3b,WAAW,IAC1Fka,IAA8B,IAAIsS,EAAerzB,IAC/D0zB,QAAQtB,QAGjB,GAAI9a,EAAe,IAAMD,EAAwB,CAC7C8b,EAAc1tB,QACVguB,GAAYjR,GACRiR,GAAY,CAAE3gC,EAAG2vB,GAAqCkR,IAAK,OACvDF,GAAYhR,GACRgR,GAAY/Q,KAEhB+Q,GAAYhR,GACRgR,GAAY,CAAE3gC,EAAG4vB,GAA0CkR,MAAO,kCAMlF,IAMIC,EACAC,EACAC,EACAC,EATAC,EAAkBd,EAAc,GAAGI,GAAe,GAAGA,GAAe,GACpEW,EAAgB32B,EAAU02B,EAAgBV,GAAe,IACzDY,EAAgB52B,EAAU02B,EAAgBV,GAAe,IACzDa,EAAqB72B,EAAU42B,EAAc,GAAGZ,GAAe,IAC/Dc,EAAaJ,EAAgBphC,EAAQS,IACrCghC,EAAcL,EAAgBphC,EAAQM,IAKtCohC,EAAS,EACTvjB,EAAsBuE,EAAQvE,oBAC9BwjB,EAAQ,WAaRL,EAAcx2B,IAAgB61B,GAAa51B,IAAe41B,GAC1DU,EAAcv2B,IAAgB61B,GAAa51B,IAAe41B,IAE1DiB,EAAY,WACZX,EAAQ,EACHD,IAGLQ,EAAaN,EACbO,EAAcN,EACdh0B,MAEAkN,EAAW,SAAUlV,GAiBrB,OAhBA+7B,EAAYE,EAAgBphC,EAAQS,IACpC0gC,EAAaC,EAAgBphC,EAAQM,IACrC0gC,EAAUE,GAAaM,GAAcL,GAAcM,EAE/Ct8B,GAAS67B,IAAYC,GACrB99B,EAAcyB,KAAdzB,CAAoB89B,GACpBA,EAAQ99B,EAAcuB,KAAdvB,CAAoBy+B,IAEtBz8B,GACNy8B,IAEJD,IACIx8B,IACAhC,EAAcmC,KAAKH,GACnBhC,EAAc+B,KAAKC,KAEhB,GAEP08B,EAAiB,GACjBC,EAAqB,GAEzBC,GAAsBD,EAAoBj3B,GAAW,GAC9CsT,EAAoB5X,EAAI,GAAKm7B,EAChCvjB,EAAoB9a,GAAKq+B,EACzBvjB,EAAoB5X,GAAKm7B,IACtBvjB,EAAoB9a,EAAI,GAAKq+B,IAGpCh3B,EAAU02B,GAAiBtxB,IAAIgyB,GAC/BR,EAAc5vB,GAAGub,GAAY5S,GAC7BgnB,EAAc3vB,GAAGub,GAAY5S,GAC7BimB,EAAc5uB,GAAG+uB,GAAwB,WACrCpmB,GAAS,MAGbwnB,EAAejV,IAAa+T,EAC5BkB,EAAehV,IAAc8T,EAC7BY,EAAmBzxB,IAAI+xB,GAEvBF,QAEC,CACD,IAAI3vB,EAAc6V,GAAuB7V,YACrCgwB,EAAOvd,IAAiBplB,EAC5B,GAAI2S,EACAsuB,EAAc1tB,QAAQguB,GAAYjR,KAClCsS,GAAU3B,EAAejT,GAAUsC,IAAiC,GAAG3d,YAAY,WAAY7E,OAE9F,CACD,IAAI5F,EAAMsgB,GAAuB3lB,cAAc3C,EAAMC,GACrD+H,EAAIuO,aAAa9V,EAAQK,GAAI,MAC7BkH,EAAIuO,aAAa9V,EAAQC,EAAG0vB,IAC5BpoB,EAAI26B,OAAS,WACT,IAAIC,EAAMjjC,KAAKkjC,gBAAgBC,YAC/BF,EAAIrwB,iBAAiB,SAAU3E,GAC/Bg1B,EAAI/iC,SAASmE,gBAAgBw9B,MAAMtrB,QAAU,QAEjDlO,EAAID,KAAO,YACP06B,GACA1B,EAAc1tB,QAAQrL,GAC1BA,EAAIoU,KAAO,cACNqmB,GACD1B,EAAc1tB,QAAQrL,GAC1B+4B,EAAc5uB,GAAG+uB,EAAwBtzB,IAKrD,GAAImzB,EAAc,KAAOrY,GAA4B,CACjD,IAAIqa,EAAmB,WACnB,IAAIxB,EAAMla,GAAa9W,IAAI,aACvBA,EAAM,GACNyyB,EAAkB,EAClB3gC,GAAS,EAkBb,OAjBIk/B,IAAQ7X,KACI,QAAR6X,GACAhxB,EAAI2c,IAAY,EAChB3c,EAAIyc,IAAaQ,GACjBwV,EAAkB5B,IAGlB7wB,EAAI2c,IAAYM,GAChBjd,EAAIyc,IAAa,EACjBgW,EAAkBhe,EAAmB1kB,GAAK8gC,EAAcpc,EAAmBrkB,EAAI,EAAIygC,GAGvF7Z,GAAqBtV,WAAWmF,GAAG,GAAG7G,IAAIA,GAC1CgX,GAAqBhc,IAAgBy3B,GAAiBx3B,IAAe41B,GACrE1X,GAA6B6X,EAC7Bl/B,GAAS,GAENA,GAEX0gC,IACAjC,GAAwBC,EAAerT,IAAY,SAAU9nB,GAKzD,OAJIm9B,KACAvgB,KACJ5e,EAAcmC,KAAKH,GACnBhC,EAAc+B,KAAKC,IACZ,WAMf,GAAI6f,EAAwB,CACxB,IAAIua,EACAiD,GADAjD,EAAUe,EAActsB,WAAW,IACPka,IAC5BsU,IACAA,EAAkBC,oBACXlD,EAAQrR,UAInBnb,GAAOutB,EAAc9uB,SAAS6b,GAAUsC,IAAiChZ,GAAG,KAkD5F,SAAS+rB,KACL,GAAIzd,EAA0B,CAC1B,IAGI0d,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAl+B,EACAm+B,EACAC,EAZAC,EAA6B,GAC7BC,EAAmBlgC,EAAcqB,KACjC8+B,EAAoBngC,EAAc4B,MAyDtC8lB,GAAmC,SAAU0Y,GACzC,IAAIC,GAAW,EAkCf,OA/BIte,IAAiBe,IACjB/Y,EAAKq2B,GAAW,WAGZ,QADAC,EAAWC,GADAvkC,UAKXskC,IACAz+B,EAAM5B,EAAc4B,MACpBm+B,EAAYva,IAAoBD,GAChCya,EAAS,WACAhe,IACDme,EAAoBv+B,EAGhBqgB,GACAse,KAEAR,EACAnhB,KAEApE,EAAMoE,OAAOgL,MAGzBjoB,aAAam+B,GACTG,GAA8B,GAAKr+B,EAAMu+B,EAAoBF,IAA+BF,EAC5FC,IAEAF,EAAiBt+B,WAAWw+B,EAAQC,KAGzCI,GAGX9Y,GAAwB,IAAI2Y,EAnF5BzY,GAAgC,SAAU2Y,GAEtC,IAEII,EAFAH,GAAW,EACXI,GAAgB,EAEhBC,EAAe,GAsCnB,OApCI3e,IAAiBe,IACjB/Y,EAAKq2B,GAAW,WAEZZ,GADAgB,EAAWzkC,MACe+G,OAC1B28B,EAAmBe,EAASG,cAC5BjB,EAAkBD,IAAqB5iC,EAAQC,EAC/C6iC,EAAiBa,EAASI,SAC1BhB,EAAcJ,EAAeluB,UAEzB8Q,GAAcsd,IAAoBe,GAE9Bd,EAAejuB,QAAQyZ,KAAiC,GAAKyU,EAAYluB,QAAQyZ,IAAgC,IACjH0U,EAAqBgB,IAA0B,GAC/Cjc,GAAmBtT,UAAYsuB,EAAYngC,MAAMgI,IAAWvG,OAAOy+B,EAAelgC,MAAMgI,IAAWq5B,QAAO,SAAUtiC,GAChH,OAAOA,EAAK4L,MAAMy1B,OAClBx1B,KAAK5C,IACT44B,EAAWI,GAAgB,GAI9BJ,IACDA,EAAWX,EACLqB,GAAsBpB,EAAgBC,GACtCH,IAAqB5iC,EAAQL,GACzBmjC,IAAmBH,EAAe3iC,EAAQL,GAAGmD,SAI3D+gC,EAAah0B,KAAK+yB,MAGtBuB,GAA8BN,GAE1BL,GACA7lB,EAAMoE,OAAO6hB,GAAiB7W,KAE/ByW,IAyCX7Y,GAA2B,IAAI0Y,EAAiBxY,KAOxD,SAASuZ,KACDnf,IAA6B6F,KAC7BJ,GAAsBmW,QAAQ9Y,GAAoB,CAC9Csc,YAAY,EACZC,mBAAmB,EACnBC,gBAAiB7S,KAGrB/G,GAAyBkW,QAAQzb,EAAc0C,GAAuBM,GAAuB,CACzFic,YAAY,EACZC,mBAAmB,EACnBE,SAAUpf,EACVqf,WAAYrf,EACZsf,eAAgBtf,EAChBmf,gBAAiBnf,EAAcqM,GAAiCC,KAGpE5G,IAA8B,GAOtC,SAASqI,KACDlO,GAA4B6F,KAC5BJ,GAAsB+X,aACtB9X,GAAyB8X,aAEzB3X,IAA8B,GAYtC,SAAS6Z,KACL,IAAK1e,EAAW,CACZ,IAAI2e,EACAzG,EAAW,CACXh2B,EAAG8f,GAA2BjoB,EAAQW,IACtC+e,EAAGuI,GAA2BjoB,EAAQQ,KAG1CokC,EAAUC,GAAW1G,EAAUxU,IAC/BA,GAAsCwU,EAClCyG,GACA7iB,GAAO,CAAEyQ,kBAAkB,KAOvC,SAASsS,KACDxZ,IACAyZ,IAA0B,GAMlC,SAASC,KACD1Z,KAA6B5E,GAAalS,SAASqc,KACnDkU,IAA0B,GAMlC,SAASE,KACD5Z,KACA0Z,IAA0B,GAC1BjgC,aAAammB,IACbA,GAAmCtmB,YAAW,WACtC0mB,KAA4BlG,GAC5B4f,IAA0B,KAC/B,MAQX,SAASG,GAAsB//B,GAE3B,OADAhC,EAAcmC,KAAKH,IACZ,EAMX,SAASwuB,GAAqBxuB,GACzC,IAAKggB,EAAY,CAChB,IAAIlf,EAASd,EAAMc,OACfk/B,EAAMz6B,EAAUvF,EAAMc,QACtB0I,EAAQjE,EAAU+B,QAAQxG,EAAQsrB,IAClC5iB,GAAS,GACZ4iB,GAAkBziB,OAAOH,EAAO,GAGjCy2B,IAAiB,SAAUllC,EAAGmlC,GACzBF,EAAIpuB,GAAGsuB,IACVtjB,GAAO,CAAEsQ,qBAAqB,QAUtB,SAASkB,GAA0BN,GAC1BA,GACDM,IAA0B,GAE9B+L,GAA6B1Y,GACzB+G,GAAwB/qB,MAAMgI,IAAW,GACzCq6B,IACE5Z,IAA2B4H,GAAU,GAC3CqM,GAA6B1Y,GACzB,CAACgH,GAAgBC,IACjB,CAACiX,GAAkBE,KACjB1Z,IAA4B2H,GAAU,GAGvC/N,GAAiB+N,GAClBrM,GAAazU,IAAI,YAAa2yB,IAUtC,SAASQ,KACL,IAAIC,EAAc,GAQlB,OAPIlgB,GAAW6B,KACXqe,EAAYp9B,EAAIywB,GAAoB1R,GAAuBpX,IAAI4c,GAAeE,KAC9E2Y,EAAY7lB,EAAIkZ,GAAoB1R,GAAuBpX,IAAI4c,GAAeG,KAC9E0Y,EAAYtlC,EAAI4kC,GAAWU,EAAa9a,IACxC8a,EAAY9lC,GAAI,GAEpBgrB,GAAoB8a,IACXA,EAAYtlC,EASzB,SAASikC,GAAsBsB,EAAeC,GAC1C,IAMIvlC,EACAwlC,EAPAC,SAAqBF,GAAiBlmC,EAAMI,EAAI8lC,EAAc7iC,MAAMgI,IAAa,GAEjFg7B,EAAOC,UADaL,GAAiBjmC,EAAMI,EAAI6lC,EAAc5iC,MAAMgI,IAAa,GACzC+6B,GAGvCG,EAAMr5B,EAAQqkB,GAAqB8U,GAOvC,GAHIE,GAAO,GACPF,EAAK92B,OAAOg3B,EAAK,GAEjBF,EAAK5lC,EAAQG,GAAK,EAElB,IADAulC,EAAQ1B,IAA0B,GAAM,GACnC9jC,EAAI,EAAGA,EAAI0lC,EAAKzjC,OAAQjC,IACzB,IAAK0lC,EAAK1lC,GAAGqN,MAAMm4B,GACf,OAAO,EAInB,OAAO,EAQX,SAASjC,GAAkBE,GACvB,IAAIG,EAAgBH,EAASG,cACzBnB,EAAiBgB,EAAS19B,OAC1B8/B,EAAepC,EAASr8B,KACxB0+B,EAAa,UAEjB,GAAIrD,IAAmBva,GACnB,OAAyB,OAAlB0b,EACX,GAAqB,eAAjBiC,IAAkCjC,IAAkB9jC,EAAQC,GAAK6jC,IAAkB9jC,EAAQL,KAAOylB,EAAa,CAE/G,GAAI0e,IAAkB9jC,EAAQC,GAAKyK,EAAUi4B,GAAgBnuB,SAAS6Z,IAClE,OAAO6V,GAAsBP,EAASI,SAAUpB,EAAeluB,WAGnE,UAAWkuB,EAAeqD,IAAezmC,EAAME,EAC3C,OAAO,EACX,GAA8E,OAA1EkjC,EAAeqD,GAAY3Y,GAAUsC,KACyB,OAA9DgT,EAAeqD,GAAY3Y,GAAU0C,KAC+B,OAApE4S,EAAeqD,GAAY3Y,GAAUiD,IACrC,OAAO,EAEf,OAAO,EAOX,SAAS8B,KACL,GAAInM,EACA,OAAO,EAEX,IAIIggB,EACAC,EACAtB,EACAuB,EAPAC,EAAwBC,KACxBC,EAAsBlhB,GAAesD,KAAoB0B,GAA6BzD,GAAerY,MAAMnM,OAAS,EACpHokC,GAAUzb,IAA+BpC,KAAoBtD,EAC7DtV,EAAM,GA2BV,OArBIy2B,IACAN,EAAQhf,GAAgBnX,IAAIgd,IAC5Bhd,EAAIgd,IAAa9G,EAASuG,GAAYE,GACtC3c,EAAI8c,IAAaG,GACjB9F,GAAgBnX,IAAIA,IAExBq2B,EAA2B,CACvBh+B,EAAGi+B,EAAsBpmC,EAAQW,IAAM2lC,EACvC5mB,EAAG0mB,EAAsBpmC,EAAQQ,IAAM8lC,GAEvCC,IACAz2B,EAAIgd,IAAamZ,EACjBn2B,EAAI8c,IAAaM,GACjBjG,GAAgBnX,IAAIA,IAGxBo2B,EAAeZ,KACfV,EAAUC,GAAWsB,EAA0Bzc,IAE/CA,GAA+Cyc,EAExCvB,GAAWsB,EAOtB,SAAS/T,KACL,IAAIlM,IAAa6E,GAAjB,CAGA,IAAIpd,EACA84B,EACAC,EACAC,EAAe,GACfC,EAAS,CACT,CACIC,MAAOhgB,GACPigB,OAAQnV,GAA2BrtB,OAAO,aAE9C,CACIuiC,MAAOxhB,EAAcuB,GAAiBtnB,EACtCwnC,OAAQpV,KAsBhB,OAlBAvkB,EAAKy5B,GAAQ,SAAUh4B,EAAOm4B,IAC1Bp5B,EAAOo5B,EAAMF,QAET15B,EAAK45B,EAAMD,QAAQ,SAAUl4B,EAAOgH,GAChC6wB,EAA0B,MAAnB7wB,EAAKtU,OAAO,GAAaqM,EAAKqJ,GAAGpB,GAAQjI,EAAKiI,KAAKA,GAC1D8wB,EAAQjV,GAAiB7b,GAErBkvB,GAAW2B,EAAMC,IACjBC,EAAa72B,KAAK8F,GAGtB6b,GAAiB7b,GAAQ6wB,QAKrCrC,GAA8BuC,GAEvBA,EAAa1mC,EAAQG,GAAK,GAQrC,SAAS4mC,GAA2BC,GAChC,IAAK9hB,EACD,OAAO,EACX,IAAI5Z,EAAW,YACXC,EAAa,cACb07B,EAAY,aACZC,EAAkB,CAClBta,GACAF,GAAeE,GACfD,GAAeC,GACfT,GAAkBM,GAClBN,GAAkBI,GAClBE,GACAF,GACA,cACA,eACAjhB,EACAC,EACA07B,GAEAE,EAA4B,CAC5B/a,GAAmBK,GACnBL,GAAmBG,GACnBF,GAAkBI,GAAWG,GAC7BP,GAAkBE,GAAYK,IAE9Bwa,EAAkB,CAClBva,GACAH,GAAeG,GACfF,GAAeE,GACfV,GAAkBG,GAClBH,GAAkBK,GAClBF,GACAE,GACA,cACAlhB,EACAC,EACA07B,GAEAI,EAA4B,CAC5Bjb,GAAmBE,GACnBF,GAAmBI,GACnBH,GAAkBC,GAAUM,GAC5BP,GAAkBG,GAAaI,IAE/B0a,EAAQ,IACRC,EAAS,MACTC,EAASne,GAAuBhmB,IAAMikC,GAASje,GAAuBhmB,IAAMkkC,EAE5EE,GAAiB,EACjBC,EAAoB,SAAUzgC,EAAKtF,GACnC,IAAK,IAAIzB,EAAI,EAAGA,EAAI+G,EAAIjH,EAAQG,GAAID,IAChC,GAAI+G,EAAI/G,KAAOyB,EACX,OAAO,EAEf,OAAO,GAaX,OApBa0nB,GAAuB9iB,IAAM+gC,GAASje,GAAuB9iB,IAAMghC,MAW5EE,EAAiBC,EAAkBN,EAAiBJ,KAC5BxhB,IACpBiiB,EAAiBC,EAAkBL,EAA2BL,KAElEQ,IAAWC,KACXA,EAAiBC,EAAkBR,EAAiBF,KAC5BxhB,IACpBiiB,EAAiBC,EAAkBP,EAA2BH,KAE/DS,EAWX,SAAStD,GAA8BwD,GAEnCz6B,EADAy6B,EAAQA,GAAS1W,IACL,SAAUtiB,EAAOgH,GACzB,GAAIxS,EAAc4D,IAAI4O,EAAMsb,KAA6B,EAAG,CACxD,IAAI2W,EAAajhB,GAAehR,KAAKA,GACjCrO,EAAKsgC,IAAeroC,EAAMI,EAC1BqnB,GAAiBrR,KAAKA,EAAMiyB,GAG5B5gB,GAAiBjR,WAAWJ,OAS5C,SAAS+tB,KACL,IAAKzd,EAAW,CACZ,IAKI4hB,EACAlN,EACAmN,EACAlN,EARAmN,GAAe3d,GACf4d,EAAWhc,GAAc7jB,EACzB8/B,EAAYjc,GAActM,EAC1B5P,EAAM,GACNo4B,EAAYxf,IAAmBqf,EAyCnC,OAlCAj4B,EAAI4c,GAAeE,IAAa/hB,GAChCiF,EAAI4c,GAAeG,IAAchiB,GAGjCiF,EAAI8c,IAAaG,GACjBpG,GAAe7W,IAAIA,GAGnB+3B,EAAY/f,GAAqB9nB,EAAQS,IACzCk6B,EAAQuN,EAAYxgC,EAAKiJ,IAAIk3B,EAAW/f,GAAqB9nB,EAAQW,IAAM,GAAK,EAIhFmP,EAAI8c,IAAalE,GAAkBqE,GAAqBG,GACxDpd,EAAI4c,GAAeE,IAAaM,GAGhCpd,EAAI+c,IAAcE,GAClBpG,GAAe7W,IAAIA,GAGnBg4B,EAAahgB,GAAqB9nB,EAAQM,IAC1Cs6B,EAASlzB,EAAKiJ,IAAIm3B,EAAYhgB,GAAqB9nB,EAAQQ,IAAM,GAGjEsP,EAAI8c,IAAa+N,EACjB7qB,EAAI+c,IAAc+N,EAClBxT,GAAsBtX,IAAIA,GAG1BA,EAAI4c,GAAeE,IAAaob,EAChCl4B,EAAI4c,GAAeG,IAAcob,EACjCthB,GAAe7W,IAAIA,GAEZ,CACHq4B,eAAgBN,EAChBO,gBAAiBN,EACjBO,cAAe1N,EACf2N,eAAgB1N,IAgB5B,SAAS7Y,GAAOwmB,GACZzjC,aAAawhB,IACbiiB,EAAcA,GAAe,GAC7BnX,GAAsBoB,kBAAoB+V,EAAY/V,iBACtDpB,GAAsBiB,qBAAuBkW,EAAYlW,oBACzDjB,GAAsBqB,QAAU8V,EAAY9V,OAE5C,IAMI+V,EANAzjC,EAAM5B,EAAc4B,MACpB0jC,IAAoBrX,GAAsBoB,iBAC1CkW,IAAuBtX,GAAsBiB,oBAC7CR,IAAUT,GAAsBqB,OAChCkW,EAAiBJ,EAAYjW,gBAC7BsW,EAAUvX,GAAoB,GAAKnM,IAAiBC,IAAe0M,IAAU8W,GAAmB5jC,EAAMshB,GAAmBgL,KAAuB1I,KAAqBD,GAWzK,GARIkgB,IACAtiB,GAA0B3hB,WAAWod,GAAQsP,OAO7ClM,GAAcyjB,GAAY3iB,IAAc0iB,GAAoBzjB,IAAiB2M,IAAU2W,EAAkB5hB,GAAa7P,GAAG,aAAgD,WAAhC6P,GAAa9W,IAAI,YAA9J,CAGAuW,GAAkBthB,EAClBqsB,GAAwB,IAGpB1M,GAA6BL,EAA2BhhB,GAAKghB,EAA2B9d,EAOxFqe,EAAuB4Y,GAAW,GAAI9a,EAAQvE,sBAL9CyG,EAAqBvhB,EAAI,EACzBuhB,EAAqBre,EAAI,GAW7B0lB,GAA0B,CACtB5oB,EAAuE,GAAnEuhB,EAAqBvhB,GAAKghB,EAA2BhhB,EAAI,EAAI,IACjEkD,EAAuE,GAAnEqe,EAAqBre,GAAK8d,EAA2B9d,EAAI,EAAI,KAGrEoiC,EAAiBA,GAAkB,GAInC,IAAIE,EAAsB,WACtB,OAAOhE,GAAWzgC,MAAMlF,KAAM,GAAGqC,MAAMyC,KAAKC,WAAWI,OAAO,CAACwtB,MAI/DsG,EAAa,CACb90B,EAAG2jB,GAAiBlc,MACpBvE,EAAGygB,GAAiBjc,OAGpB+9B,EAAmC1iB,GAAwBhN,WAC3D2vB,EAAiC3iB,GAAwBxM,SAGzDovB,EAAuBF,EAAiCzvB,WACxD4vB,EAA8BJ,EAAoBG,EAAsBpf,IAGxEsf,EAAqBJ,EAAiCxvB,SACtD6vB,EAA4BN,EAAoBK,EAAoBrf,IAGpEuf,EAA2BN,EAAiCrvB,eAC5D4vB,EAAkCR,EAAoBO,EAA0Btf,IAGhFwf,EAA0BR,EAAiCtvB,cAC3D+vB,EAAiCV,EAAoBS,EAAyBvf,IAG9EtV,EAAY2R,GAAwB3R,UACpC+0B,EAAmBX,EAAoBp0B,EAAWyV,IAGlD1R,EAAS4N,GAAwB5N,OACjCixB,EAAgBZ,EAAoBrwB,EAAQwR,MAAkB3E,EAG9DzM,GAAkBwN,GAAwBxN,gBAC1C8wB,GAAyBb,EAAoBjwB,GAAiBsQ,IAG9DxQ,GAAa0N,GAAwB1N,WACrCixB,GAAoBd,EAAoBnwB,GAAYyQ,IAGpD1Q,GAAkB2N,GAAwB3N,kBAAoB4M,EAC9DukB,GAAyBf,EAAoBpwB,GAAiBgR,IAG9DogB,GAA+BzjB,GAAwBpN,yBAAyBC,qBAChF6wB,GAAsCjB,EAAoBgB,GAA8BtgB,IAGxF1Q,GAAauN,GAAwBvN,WACrCkxB,GAAoBlB,EAAoBhwB,GAAY2Q,IAGpDrQ,GAAmBiN,GAAwBjN,iBAC3C6wB,GAA0BnB,EAAoB1vB,GAAkBkQ,GAAwBwI,GAGxFoY,GAAmBlB,EAA+BlvB,SAClDqwB,GAA0BrB,EAAoBre,GAAwByf,IAGtEE,GAAoBpB,EAA+BjvB,UACnDswB,GAA2BvB,EAAoBte,GAAyB4f,IA8D5E,GA3DAhf,GAAkD,MAAvB+d,EAC3B9d,GAAmD,MAAvB8d,EAC5B7d,GAAiD,MAAvB6d,EAC1B5d,GAAkD,MAAvB4d,EAG3Bhe,GAA2B4d,EAAiCvvB,cAG5D4Q,GAAgBD,GAGhBuB,GAAyB,MAAXjT,EACdkT,GAAyB,MAAXlT,EACdmT,GAA+B,MAAXnT,EACpBoT,GAA6B,MAAXpT,EAGlByR,GAAqB7D,GAAwBzN,aAG7CkxB,GAA+BA,IAAiCxlB,EAA2BhhB,GAAKghB,EAA2B9d,EAG3HqjB,GAA6Bof,EAC7Bnf,GAA2Bqf,EAC3Bpf,GAAiCsf,EACjCrf,GAAgCuf,EAChCpf,GAAkBzV,EAClBuV,GAAexR,EACf0Q,GAAwBtQ,GACxBuQ,GAAmBzQ,GACnB+Q,GAAwBhR,GACxB8Q,GAAqCsgB,GACrCrgB,GAAmB3Q,GACnBwQ,GAAyBmU,GAAW,GAAIrkB,IACxCqR,GAAyByf,GACzB1f,GAA0B4f,GAC1B3hB,GAAoBA,IAAqB,CAAEnlB,GAAG,EAAOkD,GAAG,GAGpDijC,IACAj0B,GAAYqR,GAAcuD,GAAgBvf,GAAYkmB,IACtDhc,GAAS8R,GAAcnS,IAAcpV,GAA2B,OAAdoV,GAAsBA,EAAUtS,OAAS,EAAIsS,EAAYqc,KAI3GiZ,MACmB,IAAflxB,IAAuC,OAAfA,IAAuB2L,GAC/C2O,KACAjU,EAAe5J,IAAIqI,KAGnBuB,EAAenM,OAAO4K,GACtBymB,OAKJwF,GACA,GAAInxB,GAQA,GAPI0O,GACAA,GAAoBzR,QAGpByR,GAAsBzc,EAAUk2B,GAAYnR,KAC5C1I,GAAgBlU,OAAOsU,KAEvB1B,EACAoB,GAAyBnR,WAExB,CACDmR,GAA2Bnc,EAAUk2B,GAAYlR,KACjD1H,GAAiCnB,GAAyB,GAE1DM,GAAoBtU,OAAOgU,IAC3B,IAAIwjB,GAAU,CAAEliC,GAAI,EAAGuX,GAAI,GAC3B0T,GAAoBvM,IAA0B,WAC1C,IAAIyjB,EAAU,CACVniC,EAAG6f,GAA+BhoB,EAAQS,IAC1Cif,EAAGsI,GAA+BhoB,EAAQM,KAE1CukC,GAAWyF,EAASD,MAChBnlB,GAAiByD,IAAoB2hB,EAAQ5qB,EAAI,GAAOgJ,IAAmB4hB,EAAQniC,EAAI,GAGlF+c,IAAkByD,IAAkC,IAAd2hB,EAAQ5qB,IAAcgJ,IAAiC,IAAd4hB,EAAQniC,IAF5F4Z,KAMRsoB,GAAUC,KAEd7kB,GAAyB,EAGR,OAAbd,GACAkC,GAAyB/W,IAAI+c,GAAYlI,EAAW,qBAIxDc,GACAoB,GAAyBrR,OACzB2R,IACAA,GAAoB3R,OAK5Bqc,IACA/K,GAAqBjQ,KAAK,KAAKvE,QAAQ2a,IACnCxH,GACAoB,GAAyBhQ,KAAK,KAAKvE,QAAQ2a,KAInDub,EAAkBA,IAAoBnpC,EAAYunB,GAAa7P,GAAG,WAAayxB,EAG/E,IAeI+B,GAfAC,KAAuBplB,GAA8C,QAAhCuB,GAAehR,KAAK,QACzD80B,GAA8B5B,EAAoB2B,GAAsBpgB,IAGxEsgB,GAAe9jB,GAAa9W,IAAI,aAChC66B,GAAsB9B,EAAoB6B,GAAc1hB,IAGxD4hB,GAAYhkB,GAAa9W,IAAI,cAC7B+6B,GAAmBhC,EAAoB+B,GAAWhiB,IAGlD+T,GAAUmO,GAA0B1e,IAKxC,IACIme,GAAgC9kB,EAAyBuC,GAA+BhoB,EAAQa,OAAS,KAC3G,MAAOwe,IACL,OAIJmG,EAA8B,eAAdolB,GAChB,IAAIG,IAFJ/kB,EAA0B,QAAjB0kB,IAEgBje,GAAWF,GAChCye,GAAahlB,EAASuG,GAAYE,GAGlCwe,IAA2B,EAC3BC,MAA8BzlB,GAA2D,SAAhCmB,GAAa9W,IAAIgd,MAAwI,IAAzFplB,EAAKyZ,MAAMopB,GAA8BY,MAAQZ,GAA8Bj0B,UAAkBsC,IAAmBmP,GAAmB/nB,EAAQU,IAAMglB,EAAa,GAC/R,GAAIjN,KAAoByyB,GAA4B,CAChD,IAAIE,GAAmBrjB,GAAmB/nB,EAAQS,IAC9C4qC,GAA0BlkB,GAAoBrX,IAAI8c,IACtDzF,GAAoBrX,IAAI8c,GAAWG,IAEnC,IAAIue,GAAkBvjB,GAAmB/nB,EAAQS,IACjD0mB,GAAoBrX,IAAI8c,GAAWye,KACnCJ,GAA2BG,KAAqBE,MAE5CnkB,GAAoBrX,IAAI8c,GAAWwe,GAAmB,GACtDE,GAAkBvjB,GAAmB/nB,EAAQS,IAC7C0mB,GAAoBrX,IAAI8c,GAAWye,IACnCJ,GAA2BG,KAAqBE,IAGxD,IAAI1N,IAAasN,IAA8BD,KAA6BxyB,KAAoB+vB,EAC5F+C,GAAmB1C,EAAoBjL,GAAWlV,IAClD8iB,IAAgB5N,IAAalV,GAG7BmV,MAAapY,IAA0BhN,IAAoB+vB,IAA4G,IAAzF9gC,EAAKyZ,MAAMopB,GAA8BkB,OAASlB,GAA8Bl0B,KAC9Jq1B,GAAoB7C,EAAoBhL,GAAYlV,IACpDgjB,IAAiB9N,IAAclV,GAM/BijB,GAASd,GAA0Bze,GAAiB,IAAMO,KAFzCgR,IAAapY,IAAkBA,KAC/BqY,IAAcrY,IAAkBA,IAIjDuU,GAAS+Q,GAA0B3e,IAGnC0f,GAAoB,GACpBC,GAAwB,GAGxBC,GAAc,WAEd,MAAO,CACH5jC,EAAG4f,GAAmB/nB,EAAQU,IAC9Bgf,EAAGqI,GAAmB/nB,EAAQO,MAGlCyrC,GAAkB,WAIlB,MAAO,CACH7jC,EAAG+f,GAAsBloB,EAAQS,IAAMiH,EAAKiJ,IAAI,EAAGyX,GAAsBpoB,EAAQU,IAAM0nB,GAAsBpoB,EAAQW,KACrH+e,EAAGwI,GAAsBloB,EAAQM,IAAMoH,EAAKiJ,IAAI,EAAGyX,GAAsBpoB,EAAQO,IAAM6nB,GAAsBpoB,EAAQQ,OAKzHyrC,GAAmBvmB,EAAYiX,GAAQx8B,EAAIw8B,GAAQuP,EACnDC,GAAmBxmB,EAAYgX,GAAQt0B,EAAIs0B,GAAQ/8B,EA8BvD,GA7BAqsC,IAAoBrzB,GAAkB,EAAI,EAC1CuzB,IAAoBvzB,GAAkB,EAAI,EAC1C+jB,GAAQ18B,EAAI4oC,EAAoBlM,GAAS9T,IAGzCjD,EAAWgmB,GAAOzrC,EAAIyrC,GAAOM,EAC7BrmB,EAAW+lB,GAAOvjC,EAAIujC,GAAOhsC,EAC7BgsC,GAAO3rC,EAAI4oC,EAAoB+C,GAAQ9iB,IAGvChD,EAAWiU,GAAO55B,EAAI45B,GAAOmS,EAC7BnmB,EAAWgU,GAAO1xB,EAAI0xB,GAAOn6B,EAC7Bm6B,GAAO95B,EAAI4oC,EAAoB9O,GAAQhR,IAGvCqB,GAA6BogB,GAC7BxhB,GAAqB0hB,GACrB9hB,GAAqBgiB,GACrBliB,GAAkBkV,GAClBjV,GAAmBkV,GACnBhV,GAAmB8T,GACnB7T,GAAkB8iB,GAClB7iB,GAAkBgR,GAGd4Q,IAAuBllB,GACvBoB,GAAyB/W,IAAIgd,GAAWke,IAGxCrO,GAAQ18B,GAAK0qC,IAAuBjB,IAA0B6B,IAAoBG,IAAqBb,IAAoBjB,GAAwB,CACnJ,IAAIwC,GAAoB,GACpBC,GAAc,GACdC,GAAgB,CAAC3P,GAAQt0B,EAAGs0B,GAAQuP,EAAGvP,GAAQ/8B,EAAG+8B,GAAQx8B,GAE9D4hC,GAAsB+J,GAAuB3f,GAAiB,EAAEwQ,GAAQt0B,GAAIs0B,GAAQuP,GAAIvP,GAAQ/8B,GAAI+8B,GAAQx8B,IACxGyY,IACAmpB,GAAsBqK,GAAmBvhC,GAAWyhC,IACpDvK,GAAsB3c,EAAcinB,GAAcR,GAAmBzf,MAGrE2V,GAAsBqK,GAAmBvhC,IACzCk3B,GAAsB3c,EAAcinB,GAAcR,GAAmBzf,GAAkBkgB,KAG3FvlB,GAAgBjX,IAAIs8B,IACpBzlB,GAAe7W,IAAIu8B,IAIvBrgB,GAAgBggB,KAGhB,IAAIO,KAAennB,GAAcse,KAC7B8I,GAAsBpnB,GAAeyjB,EAAoB0D,GAAcjiB,IACvEmiB,GAAsBrnB,GAAemnB,GAAe,CACpDpkC,EAAG8hC,GAAmBsC,GAAalE,cAAgBkE,GAAapE,eAChEzoB,EAAGyqB,GAAoBoC,GAAajE,eAAiBiE,GAAanE,iBAClE,GA6CJ,GA5CA9d,GAAqBiiB,GAGjB1O,KAAe6N,IAAqBhC,IAA0BmB,IAAoBlO,GAAQ18B,GAAK2rC,GAAO3rC,GACtG4rC,GAAkBhf,IAAcE,IAE3B2e,IAAqBhC,MAC1BmC,GAAkBhf,IAAcK,IAEhC0Q,KAAc2N,IAAoB7B,IAA0BmB,IAAoBlO,GAAQ18B,GAAK2rC,GAAO3rC,GAAK0qC,KACzGkB,GAAkBjf,IAAaG,GAC/B+e,GAAsBnf,GAAeC,IAAaM,KAE7Cqe,IAAoB7B,MACzBmC,GAAkBjf,IAAaM,GAC/B2e,GAAkB/e,IAAajiB,GAC/BihC,GAAsBnf,GAAeC,IAAa/hB,IAElD+yB,IAEAkO,GAAsBlf,IAAaG,GAEnC8e,GAAkBjf,IAAa9rB,EAAQuB,kBAAkBuqB,GAAW,0BAA4BG,GAChG8e,GAAkB/e,IAAake,IAG/Bc,GAAsBlf,IAAa/hB,GAInCihC,GAAsBjf,IAFtBgR,GAEoC4O,GAAoB/sB,GAAK0I,GAAsBpoB,EAAQO,IAGvDsK,GAEpC4N,IACA0O,GAAoBrX,IAAIg8B,IAC5B7kB,GAAgBnX,IAAI+7B,IAGpBA,GAAoB,GACpBC,GAAwB,GAGpBrD,GAAmBC,GAAsB8D,IAAuB7B,IAAuBE,IAAoBnB,IAA0B6B,IAAoB3N,IAAa8N,IAAqB7N,IAAciM,IAAuCE,IAA2BL,IAAqBF,GAAiBR,GAA+BE,GAA6BI,GAAkCF,GAAmCa,IAA2BE,IAA4BK,GAA6B,CACtgB,IAAI7sB,GAAc,WACd8uB,GAAe9uB,GAAc,KAC7B+uB,GAAe/uB,GAAc,KAC7BC,GAAY,SACZ+uB,GAAa,UAIjB,IAAKloB,EAAyB,CAC1B,IAAImoB,GAA0B,GAC1BC,GAAYtkB,GAAkBjiB,GAAKkiB,GAAmBskB,KAAOlD,GAAgCxlB,EAA2B9d,EAAIygB,GAAiBlX,IAAIi7B,KAAcnmB,EAAqBre,EAAK,EACzLymC,GAAiBxkB,GAAkBnlB,GAAKolB,GAAmBwkB,KAAOpD,GAAgCxlB,EAA2BhhB,EAAI2jB,GAAiBlX,IAAI0c,KAAe5H,EAAqBvhB,EAAK,EACnM0+B,GAAsB8K,GAAyBhiC,IAC/Cmc,GAAiBlX,IAAI+8B,IAIzB,IAAIzG,GAAwBC,KAExB6G,GAAc,CAEd/kC,EAAGskC,GAAoBtkC,GAAKi+B,GAAsBpmC,EAAQU,IAC1Dgf,EAAG+sB,GAAoB/sB,GAAK0mB,GAAsBpmC,EAAQO,KAE1Dkf,GAAa,CACbtX,EAAGi+B,GAAsBpmC,EAAQW,IACjC+e,EAAG0mB,GAAsBpmC,EAAQQ,KAIhCkkB,IACDmoB,GAAwBrgB,IAAcmf,GAAgB9gC,GAAYmiC,GAClEH,GAAwB9B,IAAaS,GAAe3gC,GAAYiiC,GAChE9lB,GAAiBlX,IAAI+8B,KAEzB7gB,GAAgBggB,KAGhB,IAAI7N,GAAW4N,KACXoB,GAAuB,CACvBhlC,EAAGg2B,GAASh2B,EAAI2d,EAAWF,GAAYJ,EAAe,EAAIE,GAC1DhG,EAAGye,GAASze,EAAIqG,EAAWF,GAAYL,EAAe,EAAIG,IAE1DynB,GAAkB,CAGlBjlC,EAAGT,EAAKiJ,KAAKitB,GAAYsP,GAAY/kC,EAAIsX,GAAWtX,GAAK8jC,GAAkBkB,GAAqBhlC,GAChGuX,EAAGhY,EAAKiJ,KAAKktB,GAAaqP,GAAYxtB,EAAID,GAAWC,GAAKysB,GAAkBgB,GAAqBztB,IAMrG,GAJA0tB,GAAgBntC,EAAI4oC,EAAoBuE,GAAiBhkB,IACzDA,GAAwBgkB,GAGpB30B,GAAiB,EAEb20B,GAAgBntC,GAAM49B,IAAcD,MACpCkO,GAAsBlf,IAAawgB,GAAgBjlC,EACnD2jC,GAAsBjf,IAAcugB,GAAgB1tB,EAG/C0F,IACD8nB,GAAc,CAEV/kC,EAAGi+B,GAAsBpmC,EAAQU,IACjCgf,EAAG0mB,GAAsBpmC,EAAQO,OAI7C,IAAI8sC,GAAmB,GACnBC,GAAmC,SAAUC,GAC7C,IAAIC,EAAgBxS,GAAiBuS,GACjCtS,EAAKuS,EAActS,KACnBuS,EAAQD,EAAcE,cACtBC,EAAWJ,EAAa3P,GAAYC,GACpC+P,EAAaL,EAAa3nB,EAAWC,EACrCgoB,EAAcN,EAAa7nB,EAAYC,EACvCmoB,EAAaP,EAAaznB,EAAWC,EACrCmY,EAAelS,GAAciP,GAAM2S,EAAaE,GAActoB,EAAe,EAAIqoB,KAGhFF,IAAcA,GAAY/B,GAAO3rC,KAClC6rC,GAAsB2B,GAASN,GAAqBlS,GAAM,KAG1D0S,GAAaT,GAAYjS,GAAMiD,IAAkBqP,GAAcnoB,GAAeolB,KAC1EplB,IACAioB,GAAiBI,GAAS7U,GAAoBxR,GAAsBtX,IAAI29B,IAAU,GACtF3B,GAAsB2B,IAAU,GAIhCP,GAAYjS,GAAM,IAClB6Q,GAAsB2B,GAAS/lC,EAAKiJ,IAAI,EAAGm7B,GAAsB2B,MAEzEH,IAAiC,GACjCA,IAAiC,GAE7BloB,GACAgC,GAAsBtX,IAAIu9B,IAC9BlmB,GAAoBrX,IAAIg8B,IAExBlO,KACAiO,GAAkBjf,IAAaM,KAC/B0Q,IAAcpY,GAAiBsF,KAC/B+gB,GAAkB/e,IAAa,QAGnC7F,GAAgBnX,IAAI+7B,IACpBA,GAAoB,GAGpB,IAAI5N,GAAoB,CACpB91B,EAAGi+B,GAAsBpmC,EAAQW,IACjC+e,EAAG0mB,GAAsBpmC,EAAQQ,KAErCy9B,GAAkBh+B,EAAIyoC,EAAqBG,EAAoB5K,GAAmB3V,IAClFA,GAA0B2V,GAG1BjS,GAAgBggB,KAGhBvD,EAAkBI,EADlB1K,GAAW4N,KACqC1jB,IAChDA,GAAiB8V,GAEjB,IAAI4P,GAA4B3oB,IAAoC,IAApB4G,GAAc7jB,GAA+B,IAApB6jB,GAActM,GACnFsuB,GAAyB1kB,GACzB2kB,GAAuB,GACvBC,GAAuB,GACvBC,GAAsB,GACtBrQ,GAAiB,GACjBE,GAAc,GACdD,GAAe,GACfqQ,GAAY,GACZC,GAAenmB,GAAsBloB,EAAQa,OAC7CytC,GAAuB,SAAUf,GACjC,IAAIC,EAAgBxS,GAAiBuS,GAEjCgB,EADwBvT,IAAkBuS,GACdjS,KAC5BD,EAAKmS,EAAclS,KACnBL,EAAKuS,EAActS,KACnBsT,EAAchB,EAAcE,cAC5Be,EAAYxhB,GAAaugB,EAAckB,UAAY,MACnDC,EAA2BN,GAAaG,GAAe9mC,EAAKc,IAAI6lC,GAAaG,GAAexiB,GAAciP,IAAO,EACjH2T,EAAgCZ,IAA0BA,GAAuB3S,GAAM,GAA2C,IAAtClT,GAAuBsmB,GACvHR,GAAqB5S,GAA+B,QAAzBliB,GAAiBkiB,GAC5C6S,GAAqB7S,GAA+B,QAAzBliB,GAAiBkiB,GAC5C8S,GAAoB9S,GAA+B,MAAzBliB,GAAiBkiB,GAC3CyC,GAAezC,GAAM3zB,EAAKiJ,IAAI,EAAGjJ,EAAKyZ,MAAoD,KAA7C8c,GAAkBhD,GAAMjP,GAAciP,KAAc,KACjG6C,GAAezC,IAAQ0S,IAA8Ba,GAAiCD,EAA2B,GAAKA,EAA2B,EAAM,EAAI,EAC3J3Q,GAAY3C,GAAMyC,GAAezC,GAAM,EAKvC0C,GAAa1C,GAAM4S,GAAqB5S,IAAO6S,GAAqB7S,GAAO2C,GAAYuQ,KAASN,GAAqBM,KAASL,GAAqBK,GAAQvQ,GAAY3C,GACvK0C,GAAa1C,EAAK,OAAO0C,GAAa1C,KAAO8S,GAAoB9S,IAAO4S,GAAqB5S,IAE7F+S,GAAU/S,GAAM2C,GAAY3C,IAAO0C,GAAa1C,EAAK,MAazD,GAXAiT,IAAqB,GACrBA,IAAqB,GAErBxQ,GAAe79B,EAAI4oC,EAAoB/K,GAAgBxU,IACvDA,GAAuBwU,GACvBE,GAAY/9B,EAAI4oC,EAAoB7K,GAAaxV,IACjDA,GAAoBwV,GACpBD,GAAa99B,EAAI4oC,EAAoB9K,GAActV,IACnDA,GAAqBsV,GAGjB1Z,EAA2BhhB,GAAKghB,EAA2B9d,EAAG,CAC9D,IAIIsoC,GAJAC,GAAe,uBACfC,GAA2B,GAC3BC,GAAiB,GACjBC,GAAiBpd,GAGjBmM,GAAY36B,GAAK26B,GAAYz3B,KAC7ByoC,GAAe7mC,EAAIkc,EAA2B9d,GAAKy3B,GAAYz3B,EAAI03B,GAAkB91B,EAAImc,EAA2B/d,EAAIsE,GACxHmkC,GAAetvB,EAAI2E,EAA2BhhB,GAAK26B,GAAY36B,EAAI46B,GAAkBve,EAAI4E,EAA2BjhB,EAAIwH,GACxHokC,GAAiBpG,EAAoBmG,GAAgBzmB,IACrDA,GAA2BymB,KAG3BhR,GAAY/9B,GAAK89B,GAAa99B,GAAKg+B,GAAkBh+B,GAAK0qC,IAAuBY,IAAoBG,IAAqB9N,IAAaC,IAAciM,MACrJ+B,GAAkB1f,GAAkB6e,IAAca,GAAkBxf,GAAkB2e,IAAcngC,GACpGgkC,GAAuB,SAAUtB,GAC7B,IAAIC,EAAgBxS,GAAiBuS,GACjC2B,EAAwBlU,IAAkBuS,GAC1ClS,EAAKmS,EAAclS,KACnB6T,EAAe5B,EAAa/gB,GAAaue,GACzCqE,EAAmB7B,EAAa1P,GAAaD,GAE7CvZ,EAA2BgX,IAAO2C,GAAY3C,IAAO0C,GAAa1C,EAAK,MACvEwQ,GAAkB1f,GAAkBgjB,GAAgBC,EAAoBvF,GAA+Bh/B,GAAYyZ,EAA2B+W,GAAOxwB,GACrJghC,GAAkBxf,GAAkB8iB,GAAkB5B,GAAc6B,GAA6BvF,GAAkFh/B,GAAjDyZ,EAA2B+W,GAAMyT,KAGnKE,GAAeE,EAAsBhU,MACjC2Q,GAAkB1f,GAAkBgjB,GACpCtD,GAAkBxf,GAAkB8iB,GAAgBtkC,GACxDokC,IAAiB,IAIrBvqB,EACA2qB,GAAeroB,GAAkBqI,IAA8Cwa,KAG/EgF,IAAqB,GACrBA,IAAqB,KAGzBhF,KACAmF,GAAe7mC,EAAI6mC,GAAetvB,EAAI7U,GACtCokC,IAAiB,GAEjBA,KAAmBvqB,IACnBqqB,GAAyBniB,IAAamR,GAAax3B,EAAIyoC,GAAe7mC,EAAI0C,GAC1EkkC,GAAyBliB,IAAckR,GAAa16B,EAAI2rC,GAAetvB,EAAI7U,GAEtEqc,KACDA,GAAyBxc,EAAUk2B,GAAYpR,KAC/CxI,GAAiBpU,QAAQsU,KAE7BA,GAAuBpX,IAAIi/B,KAE/B9nB,GAAgBnX,IAAI+7B,IAGxB,IAEIyD,GAFAC,GAAqB,GAGzB,GAFInD,GAAoB,IAEpB3D,GAAmBzK,GAAY/9B,GAAK89B,GAAa99B,GAAKg+B,GAAkBh+B,GAAK+pC,IAA2Ba,IAAoBf,IAAuCa,IAAuBhB,IAAqB+B,MAC/M6D,GAAmBvE,IAAcngC,IACjCykC,GAAiB,SAAU/B,GACvB,IAAIC,EAAgBxS,GAAiBuS,GACjC2B,EAAwBlU,IAAkBuS,GAC1ClS,EAAKmS,EAAclS,KACnBkU,EAAKhC,EAAciC,KACnBN,EAAe5B,EAAa/gB,GAAaue,GAEzCpJ,EAAQ,WACR4N,GAAmBJ,GAAgBtkC,GACnCghB,GAAmBqjB,EAAsBhU,MAAQ,GAEjD8C,GAAY3C,IAAO0C,GAAa1C,EAAK,MACrCkU,GAAmB3xB,GAAc4xB,GAAMviB,GACnC4c,IAAgCnlB,EAChCid,KAGA4N,GAAmBJ,KAAkB9qB,EAA2BgX,GAAM/W,EAA2B+W,GAAMzW,EAAqByW,IAC5HxP,GAAmBqjB,EAAsBhU,MAAQ7W,EAA2BgX,GAAM/W,EAA2B4qB,EAAsB5T,MAAQ,KAG/IiU,GAAmB3xB,GAAc4xB,GAAM3kC,GACvC82B,QAGO,GACf2N,IAAe,IAOV5qB,IACGsH,GAActM,EAAIuM,GAAwB5oB,GAAK2oB,GAAc7jB,EAAI8jB,GAAwB1lB,KACxFy3B,GAAY36B,GAAK06B,GAAa16B,IAAMghB,EAA2BhhB,GAAO26B,GAAYz3B,GAAKw3B,GAAax3B,IAAM8d,EAA2B9d,IAC1IgpC,GAAmBnjB,GAAmBE,IAAWL,GAAwB5oB,EACzEksC,GAAmBpjB,GAAkBG,KAAYL,GAAwB5oB,EAEzEksC,GAAmBnjB,GAAmB4e,IAAc/e,GAAwB1lB,EAC5EgpC,GAAmBpjB,GAAkB6e,KAAe/e,GAAwB1lB,GAG5EgpC,GAAmBnjB,GAAmBE,IAClCijB,GAAmBpjB,GAAkBG,IACrCijB,GAAmBnjB,GAAmB4e,IACtCuE,GAAmBpjB,GAAkB6e,IAAcngC,GAE3D0kC,GAAmBnjB,GAAmB2e,IAClCwE,GAAmBpjB,GAAkB4e,IAAalgC,GAGjDmzB,GAAY36B,GAAK06B,GAAa16B,GAAO26B,GAAYz3B,GAAKw3B,GAAax3B,GAAMwnC,GAEtE3oB,GAAe2oB,KACf3B,GAAkBM,IACdN,GAAkBO,IAAgB9uB,MAIrCnF,IAAew1B,GAAqB7qC,GAAK4qC,GAAqB5qC,GAAK6qC,GAAqB3nC,GAAK0nC,GAAqB1nC,KAE/G6e,IACAgnB,GAAkBM,IACdN,GAAkBO,IAAgB9hC,IAE1C0kC,GAAmB7C,IACf6C,GAAmB5C,IAAgBC,IAI/C7lB,GAAgBjX,IAAIs8B,IACpBplB,GAAiBlX,IAAIy/B,IACrBA,GAAqB,IAGhBvR,GAAY/9B,GAAK4qC,IAAoBU,IAAoBG,OAAwBrnB,EAA2BhhB,IAAKghB,EAA2B9d,IAAI,CACjJ,IAAImpC,GAAetnB,GAAsBpoB,EAAQL,GAEjD+vC,GAAaC,gBAAkB,WAC/BD,GAAaj6B,QAAU,SAChB2S,GAAsBpoB,EAAQM,IACrCovC,GAAaj6B,QAAU5K,GACvB6kC,GAAaC,gBAAkB9kC,GAevC,GADAghC,GAAoB,GAChBlB,IAAuBY,IAAoBG,GAC3C,GAAI1lB,GAAU4X,GAAW,CACrB,IAAIgS,GAAW3oB,GAAgBnX,IAAIgd,IAC/B+iB,GAAsBnoC,EAAKyZ,MAAM8F,GAAgBnX,IAAIgd,GAAWjiB,IAAWiF,IAAI2c,GAAU5hB,IAAW0L,WAAWD,MACnH2Q,GAAgBnX,IAAIgd,GAAW8iB,IAG3BC,KAFmBnoC,EAAKyZ,MAAM8F,GAAgB1Q,WAAWD,QAGzDu1B,GAAkBpf,IAAYojB,SAGlChE,GAAkBpf,IAAY5hB,GAMtC,GAHAoc,GAAgBnX,IAAI+7B,IAGhBzmB,GAAesjB,EAAoB,CACnC,IAAIoH,GAAeC,KACnB,GAAID,GAAc,CACd,IAAIE,GAAsB3lB,KAAuBhrB,GAAmBywC,GAAaG,QAAU5lB,GAAmB4lB,MAC1GC,GAAYJ,GAAaK,WACzBC,GAAYN,GAAaO,cACzBC,GAAYR,GAAaS,WACzBC,GAAUV,GAAaG,MACvBQ,GAAUX,GAAaY,SAGvBC,GAFYb,GAAac,iBACbd,GAAae,YACyB9lB,GAClD+lB,GAAuB,CACvBztC,EAAKmnC,IAAyB4F,KAAcK,IAAWP,KAAcI,IAAwC,EAA1BhnB,GAAqBjmB,EACxGkD,GAAIikC,GAAuBmG,IAAwBX,IAAwBhC,IAA0B7V,EAAW5xB,IAAMynC,GAAuBznC,GAAeoqC,IAAwBX,KAAwBE,KAAcM,IAAWlnB,GAAqB/iB,GAAK,GAEnQ4xB,EAAW90B,EAAIytC,GAAqBztC,GAAK,EAAK2iB,GAAUiE,IAAsB1F,EAAmBrkB,EAAI,EAAI4wC,GAAqBztC,EAAK80B,EAAW90B,EAC9I80B,EAAW5xB,EAAIuqC,GAAqBvqC,GAAK,EAAIuqC,GAAqBvqC,EAAI4xB,EAAW5xB,EAErF8jB,GAAqBylB,GAErB9pB,GAAUzB,EAAmBrkB,GAAKmkB,EAA2B9d,GAAKy3B,GAAY36B,GAAK4mB,KACnFkO,EAAW90B,GAAKwoB,GAAmB1jB,GAAK,GACxCy1B,IACAhX,GAAa9b,IAAgB,GAC7B+yB,IACAjX,GAAa7b,IAAe,GAChCic,GAAiBlc,IAAgBqtB,EAAW90B,GAAG0H,IAAeotB,EAAW5xB,GAGzE,IAAIwqC,GAAuD,MAAzB/H,EAC9BgI,GAAsD,MAAzBhI,EAC7BiI,GAAoD,MAAzBjI,EAC3BkI,GAA8B,SAAUC,EAAOC,GAC/CA,EAAQA,IAAU/xC,EAAY8xC,EAAQC,EACtCC,IAA2B,EAAMF,EAAO/C,GAAU/qC,GAClDguC,IAA2B,EAAOD,EAAOhD,GAAU7nC,IAIvD8oC,GAAezoB,GAAckI,GAAwBiP,GAAa16B,GAAK06B,GAAax3B,GACpF8oC,GAAezoB,GAAcmI,GAAyBgP,GAAa16B,GACnEgsC,GAAezoB,GAAcoI,GAAyB+O,GAAax3B,GAG/DokC,KAAwBtlB,GACxBgqB,GAAezoB,GAAc+H,GAAmB3I,GAIhDX,GACAvQ,GAAS8R,GAAcgI,IACvB6a,IACA4F,GAAezoB,GAAcgI,GAA8BnD,IAC3D4jB,GAAehoB,GAAyBkJ,IAAkC9E,IAC1E4jB,GAAehoB,GAAyBmJ,GAAkC9E,IAC1E2jB,GAAehoB,GAAyBoJ,GAAkC9E,IAC1E0jB,GAAehoB,GAAyBqJ,GAAkC9E,MAI1Eqd,GAA+Be,IAA2BjM,GAAa99B,GAAK+9B,GAAY/9B,GAAK6pC,MACzFD,GACIC,KACAv0B,GAAYqR,GAAciI,IACtBgb,IACAqH,IAA4B,IAI/BD,GACLC,GAA4B9C,GAAU/qC,EAAG+qC,GAAU7nC,GAE9CwqC,GACLG,IAA4B,GAEvBF,IACLE,IAA4B,KAKhC/H,GAA6BW,MAC7BvW,IAA2BjI,KAA6BD,IACxD0Z,GAA0B5Z,IAA2BA,MAIrDsd,GAAmB3K,GAAe79B,GAAKyrC,IAAqBH,IAAoB9B,GAAiBoB,IAAoBnB,IAA0BI,IAAuCa,MACtL2G,IAA6B,GAC7Bla,IAA6B,GAC7Bka,IAA6B,GAC7Bla,IAA6B,IAI7BiS,GACAkI,IAA6B,EAAMnI,GACnCG,GACAgI,IAA6B,EAAOjI,GAGxC1V,GAAiB,qBAAsB,CACnCwB,MAAOpP,EACP8a,IAAK4J,IACNC,IACH/W,GAAiB,oBAAqB,CAClC+G,MAAOtS,GAAelgB,EACtByyB,OAAQvS,GAAe3I,GACxB+oB,GACH7U,GAAiB,uBAAwB,CACrC+G,MAAOrS,GAAwBngB,EAC/ByyB,OAAQtS,GAAwB5I,GACjCgpB,GACH9U,GAAiB,oBAAqB,CAClCvwB,EAAG26B,GAAY36B,EACfkD,EAAGy3B,GAAYz3B,EACfirC,YAAazT,GAAakP,GAC1BwE,YAAa1T,GAAagP,GAC1B2E,QAAS3T,GAAa16B,GAAK06B,GAAax3B,GACzCy3B,GAAY/9B,GAAK89B,GAAa99B,GACjC2zB,GAAiB,0BAA2B,CACxCvwB,EAAGy6B,GAAez6B,EAClBkD,EAAGu3B,GAAev3B,GACnBu3B,GAAe79B,GAIlBolB,GAAWoF,KAAsBjC,GAAkBvoB,GAAKwqB,GAAkBxqB,KAErEwqB,GAAkBhrB,GACnB6lC,KACAjhB,EAA2B9d,GAAKiiB,GAAkBnlB,GAClD4jB,GAAgBnX,IAAI4c,GAAeE,GAAWnC,GAAkBtiB,EAAImc,EAA2B/d,GAC/F8d,EAA2BhhB,GAAKmlB,GAAkBjiB,GAClD0gB,GAAgBnX,IAAI4c,GAAeG,GAAYpC,GAAkB/K,EAAI4E,EAA2BjhB,GACpGonB,GAAkBxqB,GAAI,GAGtBilB,GAAgByjB,EAAe5vB,cAC/B2Z,KAMJkB,GAAiB,YAAa,CAAE+d,OAAQ9f,KAM5C,SAASa,KACAtN,GACDggB,IAAiB,SAAUllC,EAAGmlC,GAC1Bpe,GAAgBpQ,KAAKwuB,GAAsBn4B,MAAK,SAAUhN,EAAG8N,GAErD7K,EAAc4D,IAAIiH,EAAIujB,IAAqB,IAC3CA,GAAkB1hB,KAAK7B,GACvBtD,EAAUsD,GACLiE,IAAIqf,GAAwBqC,IAC5BjiB,GAAG4f,GAAwBqC,WAcpD,SAASX,GAAWL,GAChB,IAAIif,EAAgBh6B,EAAgBuD,UAAUwX,EAAY/a,EAAgBsD,WAAW,EAAMiL,IAK3F,OAHAA,GAAkBqX,GAAW,GAAIrX,GAAiByrB,EAAcv0B,UAChE+I,GAA0BoX,GAAW,GAAIpX,GAAyBwrB,EAAct0B,WAEzEs0B,EAAct0B,UAczB,SAASoW,GAAkBT,GACvB,IAAI4e,EAAY,SACZC,EAA8B,0BAC9BC,EAA+B9iB,GAA4BrkB,GAAYklB,GACvEkiB,EAAgB5sB,EAAcxa,GAAYklB,GAAwBjlB,GAClEonC,EAAa7rB,GAAwBxM,SAASG,eAC9Cm4B,EAAgB,GAChBC,EAAoB,WACpB,IAAIC,EAAuBnf,EAAUtM,GAAiBC,GACtD1Z,EAAKglC,GAAe,SAAUrlC,EAAKS,GAC3BhG,EAAKgG,IAAU/N,EAAMI,IACjBkN,GAAO7M,EAAQC,EACfmyC,EAAqBt9B,SAASxH,GAE9B8kC,EAAqBz8B,KAAK9I,EAAKS,QAI3C+kC,EAAwB,CACxBhkB,GACAC,GACAC,GACAK,GACAD,GACAH,GACAC,GACAC,GACAG,GACAC,GACAC,GACAC,GACA8B,GACA7B,GACAa,GACA5F,IAAiB1c,KAAK5C,IACtB0nC,EAAiB,GAGrB1rB,GAAeA,KAAiBxB,EAAeG,EAAaoB,GAAekrB,KAAaA,KAAaA,KAAaA,KAAennC,EAAUk2B,GAAYrS,KAAmC5H,IAC1LM,GAAkBA,IAAmBsrB,GAA2BhjB,GAA2ByiB,GAC3FhrB,GAAmBA,IAAoBurB,GAA2BnjB,GAA4B4iB,GAC9FjrB,GAAkBA,IAAmBwrB,GAA2BpjB,GAA2B6iB,GAC3FlrB,GAAuBA,IAAwByrB,GAA2BT,GAC1E1qB,GAAwBA,KAA0BhC,EAAcmtB,GAA2BrjB,IAAkC7vB,GAGzHkmB,GACAzQ,GAAS8R,GAAc0H,IAIvB2E,GACA1d,GAAYqR,GAAcyrB,GAG9BJ,EAAa3qC,EAAK2qC,IAAe1yC,EAAMI,EAAIsyC,EAAWrvC,MAAMgI,IAAaqnC,EACrE9uC,EAAcgE,IAAI8qC,IAAe7sB,GACjClY,EAAK+kC,GAAY,SAAU/xC,EAAG4B,GACtBwF,EAAKxF,IAAMvC,EAAMI,IACjBuyC,EAAcpwC,GAAKmxB,EAAUrM,GAAajR,KAAK7T,GAAK6kB,GAAehR,KAAK7T,OAK/EmxB,GAmDG1N,GAAcL,GAEd4B,GAAqBtV,WAAWuB,SAGhC7F,EAAK,CAAC6Z,GAAiBC,GAAkBC,GAAiBG,KAAwB,SAAUlnB,EAAGilC,GACvFA,GACA5vB,GAAY4vB,EAAIpvB,WAAW/V,EAAQL,GAAIoxB,OAK/Cjc,GAAS8R,GAAcxB,EAAcmJ,GAAgCF,MAIrEtb,GAAO+T,IAGPG,GAAgBjT,WACXf,SACAA,SACAA,SAEDmS,IACAuB,GAAe1T,SACfF,GAAO6T,IACP7T,GAAOqU,IACP+qB,MAIJ/sB,GACAuB,GAAe5Q,WAAW/V,EAAQL,GAElC0lB,GACA9P,GAAYkR,GAAc2H,MAtF1BhJ,IACKgB,GAAwB3N,kBACzB65B,EAAe1lB,IAAajG,GAAe7W,IAAI8c,IAC/C0lB,EAAezlB,IAAclG,GAAe7W,IAAI+c,KAG/CtH,GACDoB,GAAe7R,SAASgb,IAAuB7b,KAAK2S,IAGxDA,GAAeD,GAAekrB,KAAa/hC,IAAIwiC,IAG9C/sB,IAEDzQ,GAAS6R,GAAgBvB,EAAc2sB,EAA+B1jB,IAGtEzH,GAAa7S,UAAUkT,IAClBlT,UAAUiT,IACVjT,UAAUgT,IACVnU,QAAQkU,IAGbG,GAAkBgb,GAAUrb,GAAcyG,GAAUkC,IACpDvI,GAAmBib,GAAUrb,GAAcyG,GAAU+B,IACrDrI,GAAkBkb,GAAUrb,GAAcyG,GAAU8B,IAEhD/J,IACA6B,GAAgBrU,QAAQwU,IACxB+qB,MAIJztB,GACA5P,GAASkS,GAAkBqI,IAC3BhL,EAA2BhhB,GAAKghB,EAA2B9d,GAC3DuO,GAASkS,GAAkBsI,IAC3BjK,GACAvQ,GAAS2R,GAAc2H,IAE3BnG,GAA6BnB,GAAqB,GAClDiB,GAAqBnB,GAAa,GAClCsB,GAAwBnB,GAAgB,GACxCoB,GAAyBnB,GAAiB,GAC1CoB,GAAwBnB,GAAgB,GAExCkd,MA+CR,SAASqO,KACL,IAOIC,EACAC,EARAC,EAAoC,CACpC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAClD,GAAI,GACJ,GAAI,GAAI,GAAI,GACZ,GAAI,GAAI,GAAI,GAAI,GAAI,KAEpBC,EAA8B,GAG9BC,EAAkB,IAClBC,EAAW,QAEf,SAASC,EAAeC,GACpBtP,KACA/lB,EAAMoE,OAAOgL,IACTimB,GAAmBxuB,GACnByuB,cAAcR,GAEtB,SAASS,EAAiB/tC,GAKtB,OAJAwhB,GAAe7b,IAAgByZ,EAAmBrkB,GAAK+pB,GAAqB,QAAU,GACtFtD,GAAe5b,IAAe,GAC9B5H,EAAcmC,KAAKH,GACnBhC,EAAc+B,KAAKC,IACZ,EAEX,SAASguC,EAAehuC,GACpBR,YAAW,WACFwgB,GACD4tB,MACL,IAEP,SAASK,IACLroB,IAAoB,EACpBjW,GAAS8R,GAAcksB,GAE3B,SAASO,IACLtoB,IAAoB,EACpB6nB,EAA8B,GAC9Br9B,GAAYqR,GAAcksB,GAC1BC,GAAe,GAEnB,SAASO,EAAkBnuC,GACvB,IAAIouC,EAAUpuC,EAAMouC,QAEhB9mC,EAAQ8mC,EAASZ,GAAqC,IACjDC,EAA4B5yC,EAAQG,KACrC4yC,IACAN,EAA2Be,YAAYT,EAAgB,IAAO,KAE9DtmC,EAAQ8mC,EAASX,GAA+B,GAChDA,EAA4B/iC,KAAK0jC,IAG7C,SAASE,EAAgBtuC,GACrB,IAAIouC,EAAUpuC,EAAMouC,QAChB5kC,EAAQlC,EAAQ8mC,EAASX,GAEzBnmC,EAAQ8mC,EAASZ,GAAqC,IAClDhkC,GAAS,GACTikC,EAA4B9jC,OAAOH,EAAO,GACzCikC,EAA4B5yC,EAAQG,IACrC4yC,GAAe,IAG3B,SAASW,EAAuBvuC,IACH,IAArBqkB,IAGAud,IADJ5hC,EAAQA,EAAMa,eAAiBb,GACM6hC,eACjCrpB,EAAMoE,OAAOgL,IAErB,SAAS4mB,EAAiBxuC,GACjB8gB,IACGysB,IAAwBrzC,EACxByF,aAAa4tC,KAETtnB,IAA6BC,KAC7B0Z,IAA0B,GAEzB6O,MACD9+B,GAAS8R,GAAciI,IAE3B+E,GAAiB,gBAAiBzuB,IAMjCqmB,KACD4L,IAA6B,GAC7BA,IAA6B,IAEjCxD,GAAiB,WAAYzuB,GAE7ButC,EAAsB/tC,YAAW,WACxBwgB,IAEDrgB,aAAa4tC,GACbA,EAAsBrzC,GAElB+rB,IAA6BC,KAC7B0Z,IAA0B,GAEzB6O,MACDr+B,GAAYqR,GAAciI,IAE9B+E,GAAiB,eAAgBzuB,MAEtC0tC,IAKPztB,GACIX,EAAe,IAAMD,EACrB6b,GAAwB1Z,GAAgB,QAASosB,GAGjD1S,GAAwB1Z,GACpB,CAACmH,GAAkBC,IACnB,CAACulB,EAAmBG,IAG5BpT,GAAwB1Z,GACpB,CAACsG,GAAY,OAAQ6lB,EAAUA,EAAW,OAC1C,CAACI,EAAkBC,EAAgBC,EAAiBC,KAGxDhT,GAAwBpZ,GAAiBgH,GAAwBylB,GAErErT,GAAwBrZ,GAAkBiG,GAAY0mB,GAAkB,GAU5E,SAASngB,GAAmBP,GACxB,IAgCI4gB,EACAC,EAjCAC,EAA+B,SAAUC,GACzC,IACIjX,EAAYwV,GAA2BxiB,GAAsBnlB,IADxCopC,EAAerjB,GAAgCC,KACyB,GAC7FoM,EAAQuV,GAA2BviB,GAA0B+M,GAC7DE,EAASsV,GAA2BriB,GAA2B6M,GAOnE,OALKxX,GAAe0N,IAChB8J,EAAUpqB,OAAOqqB,GACjBA,EAAMrqB,OAAOsqB,IAGV,CACHgX,WAAYlX,EACZmX,OAAQlX,EACRmX,QAASlX,IAGjB,SAASmX,EAAkBJ,GACvB,IAAIxG,EAAgBxS,GAAiBgZ,GACjCjX,EAAYyQ,EAAcyG,WAC1BjX,EAAQwQ,EAAc0G,OACtBjX,EAASuQ,EAAc2G,QAEvB5uB,GAAcL,EACdhY,EAAK,CAAC6vB,EAAWC,EAAOC,IAAS,SAAU/8B,EAAGilC,GAC1C5vB,GAAY4vB,EAAIpvB,WAAW/V,EAAQL,GAAIoxB,OAI3Che,GAAOgqB,GAAagX,EAA6BC,GAAcC,YAMlEhhB,GAiBDmhB,GAAkB,GAClBA,MAjBAP,EAAqBE,GAA6B,GAClDD,EAAmBC,IAEnBzsB,GAA8BusB,EAAmBI,WACjD1sB,GAAmCssB,EAAmBK,OACtD1sB,GAAoCqsB,EAAmBM,QACvD1sB,GAA4BqsB,EAAiBG,WAC7CvsB,GAAiCosB,EAAiBI,OAClDvsB,GAAkCmsB,EAAiBK,QAE9C5uB,IACDwB,GAAgBjU,MAAM2U,IACtBV,GAAgBjU,MAAMwU,MAalC,SAAS+sB,GAAqBL,GAC1B,IAWIM,EACAC,EACAC,EACAC,EAdAjH,EAAgBxS,GAAiBgZ,GACjCU,EAAoBlH,EAAcmH,MAClCC,EAAehtB,GAAqBvR,MAAQuR,GAC5CyT,EAAKmS,EAAclS,KACnBkU,EAAKhC,EAAciC,KACnB5b,EAAS5G,GAAaugB,EAAckB,UACpCmG,EAAY,SACZC,EAAgB,aAChBC,EAAgB,QAChBC,EAAuB,EACvBC,EAAuC,CAAC,GAAI,IAMhD,SAASC,EAAmB/vC,GACxB,OAAOsf,GAAgBmwB,EAAezvC,EAAM,SAAWqqC,GAAMrsC,EAAcuC,KAAKP,GAAOk2B,GAE3F,SAAS8Z,EAA4BxzC,GACjC,OAAOykB,GAAwBhN,WAAWzX,GAE9C,SAASyzC,IACLJ,EAAuB,GAE3B,SAASK,IACLL,EAAuB,EAE3B,SAASM,EAA0BnwC,GAC/BhC,EAAc+B,KAAKC,GAEvB,SAASowC,EAAgBpwC,GACjBsH,EAAQtH,EAAMouC,QAAS0B,IAAyC,GAChEG,IAER,SAASI,EAAcrwC,GACfsH,EAAQtH,EAAMouC,QAAS0B,IAAyC,GAChEI,IAER,SAASI,EAAyBtwC,GAC9B,IACIuwC,GADgBvwC,EAAMa,eAAiBb,GACVkB,UAAYhH,EAC7C,QAAO4mB,GAAad,GAAcyuB,OAAuC7pB,IAAkC2rB,IAAiBP,EAA4B,mBAAyD,IAA9BhyC,EAAcyD,KAAKzB,IAAgBuwC,GAE1N,SAASC,EAAiBxwC,GACtB,GAAIswC,EAAyBtwC,GAAQ,CACjC,IAAI6vB,EAAc0f,EAAkBzf,aAChCL,EAAe8f,EAAkB7f,cAIjC+gB,EAHclB,EAAkBlgB,aACnB0gB,EAAmB/vC,GAASqvC,GAAmBC,GAC1Bzf,EAAcJ,IAEpDghB,EAAcC,SAASD,GAAeA,EAAc,EAChD5vB,GAAUguB,IAAiBzvB,EAAmBrkB,IAC9C01C,IAAgB,GAEpB5uB,GAAiB6M,GAAQnsB,EAAKyZ,MAAMozB,EAAkBqB,IAElDpqB,IACA4L,GAA6B4c,EAAcO,EAAkBqB,GAE5D7wB,GACD5hB,EAAcmC,KAAKH,QAGvB2wC,EAAqB3wC,GAE7B,SAAS2wC,EAAqB3wC,GAiC1B,GAhCAA,EAAQA,GAASA,EAAMa,cAEvBs5B,GAA6B9Y,GACzB,CAACmH,GAAyBD,GAAuBI,GAAkBC,GAAgBC,IACnF,CAAC2nB,EAAkBG,EAAsBP,EAAiBC,EAAetQ,KACzE,GACJ/hC,EAAcuB,KAAdvB,EAAoB,WAChBm8B,GAA6B9Y,GAAkBuuB,EAAeO,GAA2B,EAAM,CAAEnV,UAAU,OAI3G3U,IACA4L,GAA6B4c,GAAc,GAE/CxoB,IAAoC,EACpCjW,GAAYmR,GAAcmK,IAC1Btb,GAAYi4B,EAAc2G,QAASU,GACnCt/B,GAAYi4B,EAAc0G,OAAQW,GAClCt/B,GAAYi4B,EAAcyG,WAAYY,GAEtCN,EAAkBl1C,EAClBm1C,EAAkBn1C,EAClBo1C,EAAyB,EAEzBY,IAEIf,IAAiBj1C,IACjBse,EAAMye,aACNt3B,aAAawvC,GACbA,EAAej1C,GAGf8F,EAAO,CACP,IAAI+Q,EAAO6R,GAAmB/nB,EAAQa,OAChBsE,EAAM4wC,SAAW7/B,EAAKI,MAAQnR,EAAM4wC,SAAW7/B,EAAKi1B,OAAShmC,EAAM6wC,SAAW9/B,EAAKG,KAAOlR,EAAM6wC,SAAW9/B,EAAKu1B,QAIlIzG,MAEA5Z,IAA6BC,KAC7B0Z,IAA0B,IAGtC,SAASkR,EAAuB9wC,GACxBswC,EAAyBtwC,IACzB+wC,EAA6B/wC,GAErC,SAAS+wC,EAA6B/wC,GAClCovC,EAAkBvtB,GAAiB6M,KACnC0gB,EAAkB1b,MAAM0b,GAAmB,EAAIA,GAC3CvuB,GAAUguB,IAAiBzvB,EAAmB1kB,IAAMmmB,KACpDuuB,EAAkBA,EAAkB,EAAI,EAAIA,GAEhDE,EAAyB0B,KAA8B9a,GACvDmZ,EAAkBU,EAAmB/vC,GAErCqmB,IAAqC2pB,EAA4BL,GACjEhgC,GAAS4R,GAAcmK,IACvB/b,GAAS04B,EAAc2G,QAASU,GAChC//B,GAAS04B,EAAcyG,WAAYY,GAEnCvV,GAA6B9Y,GACzB,CAACmH,GAAyBD,GAAuBM,IACjD,CAAC2nB,EAAkBG,EAAsB5Q,KAC7C/hC,EAAcuB,KAAdvB,EAAoB,WAChBm8B,GAA6B9Y,GAAkBuuB,EAAeO,GAA2B,EAAO,CAAEnV,UAAU,QAI5G1b,GAAiBa,GACjBniB,EAAcmC,KAAKH,GACvBhC,EAAc+B,KAAKC,GAEvB,SAASixC,EAAsBjxC,GAC3B,GAAIswC,EAAyBtwC,GAAQ,CACjC,IAUIkxC,EAVAC,EAAwB9I,EAAcmH,MAAM9f,cAAgBltB,KAAKwZ,MAAMzZ,EAAKoc,IAAI,EAAGkI,GAAcwhB,EAActS,MAAQ5S,GAAwBklB,EAActS,OAASsS,EAAcmH,MAAM1f,cAC1LshB,EAAiB7uC,EAAKyZ,MAAM6K,GAAcwhB,EAActS,MAAQob,GAChEE,EAAqB,IAAMF,EAC3BG,EAA4B,IAAMH,EAClCI,EAAclJ,EAAc0G,OAAOj+B,SAASu3B,EAAcpS,WAC1Dub,EAAUxxC,EAAMwxC,QAChBC,EAAgBzxC,EAAM0xC,SACtBC,EAA0BF,GAAiBD,EAC3CI,GAAmB,EACnB7nC,EAAS,SAGT8nC,EAAwB,SAAUC,GAC9BzrB,IACA4L,GAA6B4c,EAAciD,IAE/CC,EAA8B,WAC9BF,IACAd,EAA6B/wC,IAE7BgyC,EAAe,SAAfA,IACA,IAAKhyB,EAAY,CACb,IAAIiyB,GAAe5C,EAAkBkC,GAAejC,EAChD/f,EAAeggB,EAAkB/f,cACjCK,EAAc0f,EAAkBzf,aAChCL,EAAe8f,EAAkB7f,cACjCwiB,EAAc3C,EAAkBlgB,WAChC2D,EAAauc,EAAkBtgB,eAC/BkjB,EAAiBd,EAAqBxB,EACtCuC,EAAeR,EAAmBrvC,EAAKiJ,IAAI8lC,EAA2Ba,GAAkBA,EACxFE,EAAwBH,IAAgBD,EAAexiB,EAAe,IAAOI,EAAcJ,IAC3F6iB,EAAczxB,GAAUguB,KAAmBzvB,EAAmBrkB,IAAMqkB,EAAmB1kB,GAAMoqB,IAC7FytB,EAA0BD,EAAc/iB,EAAe0iB,EAAc1iB,EAAe0iB,EACpFO,EAAY,GACZC,EAAe,CACf1oC,OAAQA,EACRK,KAAM,SAAUxK,GACRymB,KACAxE,GAAiB6M,GAAQ9uB,GACzBqyB,GAA6B4c,EAAcjvC,MAIvDyyC,EAAwB3B,SAAS2B,GAAyBA,EAAwB,EAClFA,EAAwBxxB,GAAUguB,IAAiBzvB,EAAmBrkB,EAAKm3C,EAAcG,EAAyBA,EAI9GZ,GACA5vB,GAAiB6M,GAAQ2jB,GACrBV,GAGAU,EAAwBxwB,GAAiB6M,KAEzC7M,GAAiB6M,GAAQsE,GAEzBqf,EAAwBC,GAAelzB,EAAmBrkB,EAAKm3C,EAAcG,EAAyBA,EACtGA,EAAwBC,GAAelzB,EAAmB1kB,GAAK23C,EAAwBA,EAEvFG,EAAUtc,GAAMmc,EAChB75B,EAAMkW,OAAO8jB,EAAWna,GAAWoa,EAAc,CAC7C3oC,SAAU,IACVE,SAAU+nC,MAIdA,MAGJb,EAAiBU,EAAmBW,EAA0BrB,GAC1CoB,EACbpB,EAAiB3hB,EAAeE,GAAgBwiB,EAAc1iB,GAAgB0iB,EAC9Ef,EAAiB3hB,GAAgB0iB,EAAc1iB,EAAeE,GAAgBwiB,IAGjFtyC,aAAawvC,GACb32B,EAAMye,aACNkY,EAAej1C,EACf23C,GAAsB,KAGtB1C,EAAe3vC,WAAWwyC,EAAcI,GAExCI,EAAUtc,IAAOgb,EAAiB,KAAO,MAAQE,EACjD54B,EAAMkW,OAAO8jB,EAAWna,GAAWoa,EAAc,CAC7C3oC,SAAUqoC,MAGlBP,GAAmB,KAI3BJ,GACAvB,IAEJX,EAAyB0B,KAA8B9a,GACvDmZ,EAAkBrxC,EAAcuC,KAAKP,GAAOk2B,GAE5C7P,IAAqC2pB,EAA4BL,GACjEhgC,GAAS4R,GAAcmK,IACvB/b,GAAS04B,EAAc0G,OAAQW,GAC/B//B,GAAS04B,EAAcyG,WAAYY,GAEnCvV,GAA6B9Y,GACzB,CAACkH,GAAuBI,GAAkBC,GAAgBC,IAC1D,CAAC8nB,EAAsBP,EAAiBC,EAAetQ,KAE3DiS,IACAh0C,EAAcmC,KAAKH,GACnBhC,EAAc+B,KAAKC,IAG3B,SAAS0yC,EAAuB1yC,GAE5BomB,IAA2B,GACvBH,IAA6BC,KAC7B0Z,IAA0B,GAElC,SAAS+S,EAAuB3yC,GAC5BomB,IAA2B,GACvBH,IAA6BC,KAC7B0Z,IAA0B,GAElC,SAASgT,EAA0B5yC,GAC/BhC,EAAc+B,KAAKC,GAGvBk7B,GAAwBmN,EAAc2G,QAClC1mB,GACAwoB,GACJ5V,GAAwBmN,EAAc0G,OAClC,CAACzmB,GAAyBG,GAAgBC,IAC1C,CAACuoB,EAAuByB,EAAwBC,IACpDzX,GAAwBmN,EAAcyG,WAClCxmB,GACAsqB,GAEAlzB,GACAwb,GAAwBmN,EAAcyG,WAAYhmB,IAAwB,SAAU9oB,GAC5EA,EAAMc,SAAWunC,EAAcyG,WAAW,KAE9C3C,GAA6B0C,GAC7B5c,GAA6B4c,OAWzC,SAAS3C,GAA2B2C,EAAcgE,EAAgB5J,GAC9D,IACI6J,EAAmBjE,EAAe1sB,GAA8BG,GAEpE4nB,GAAezoB,GAHgBotB,EAAexlB,GAA0CC,IAGhCupB,GACxD3I,GAAe4I,EAAkB7nB,IAA8Bge,GAQnE,SAASrJ,GAA0BiT,EAAgBE,GAE/C,GADApzC,aAAakmB,IACTgtB,EAEAziC,GAAY+R,GAA6B+I,IAEzC9a,GAAYkS,GAA2B4I,QAEtC,CACD,IAAI8nB,EACAtD,EAAY,SACZr/B,EAAO,WACF+V,IAA6BpG,MAC9BgzB,EAAY3wB,GAAkChT,SAASqgC,IAAcltB,GAAgCnT,SAASqgC,MAC3FzpB,IAA6BC,IAA2BC,KACvExW,GAASwS,GAA6B+I,KACrC8nB,IAAc/sB,IAA6BC,IAA2BC,KACvExW,GAAS2S,GAA2B4I,MAG5CnF,GAA2B,IAAmB,IAAdgtB,EAChCltB,GAA+BrmB,WAAW6Q,EAAM0V,IAEhD1V,KAQZ,SAAS87B,GAA6B0C,GAClC,IAAIoE,EAAY,GACZ5K,EAAgBxS,GAAiBgZ,GACjCU,EAAoBlH,EAAcmH,MAClC0D,EAAQ,IAERC,EAAc5wC,EAAKoc,IAAI,EAAGkI,GAAcwhB,EAActS,MAAQ5S,GAAwBklB,EAActS,OACxGkd,EAAU5K,EAAcE,eAAkBhmC,EAAK6wC,MAAoB,IAAdD,EAAoBD,GAASA,EAAS,IAEtFzE,MACDpG,EAAc2G,QAAQrkC,IAAIsoC,GAG9B1D,EAAkB7f,cAAgB2Y,EAAc2G,QAAQ,GAAG,SAAW3G,EAAcgL,eACpF9D,EAAkB3f,mBAAqBujB,EAQ3C,SAASlhB,GAA6B4c,EAAcyE,GAChD,IAgBIC,EACAC,EAjBA1B,EAAa3vC,EAAKmxC,IAAuBl5C,EAAMK,EAC/Cg5C,EAAqB,IACrBC,EAAoB7yB,GAAUguB,EAC9BxG,EAAgBxS,GAAiBgZ,GACjCU,EAAoBlH,EAAcmH,MAClCmE,EAAoB,aACpBC,EAAej4C,EAAQY,aAAa,aACpCs3C,EAAgBl4C,EAAQY,aAAa,cACrCu3C,EAAejF,EAAehtB,GAAiBlc,MAAoBkc,GAAiBjc,MACpFmuC,EAAgBT,IAAuBp5C,GAAa43C,EAAagC,EAAeR,EAGhF7jB,EAAe8f,EAAkB7f,cACjCG,EAAcwY,EAAc0G,OAAO,GAAG,SAAW1G,EAAcgL,eAC/DW,EAAkBnkB,EAAcJ,EAChCwjB,EAAY,GAOZhgB,GAAajQ,GAAuB8E,GAAaugB,EAAcgL,eAAiBrwB,GAAuB,SAAWqlB,EAAcgL,iBAAmBj0B,EAAmB1kB,GAAKg5C,GAAqB,EAAI,GACpMO,EAAiB,SAAU/nC,GAC3B,OAAOwnB,MAAMxnB,EAAO+mB,GAAa,EAAI1wB,EAAKiJ,IAAI,EAAGjJ,EAAKoc,IAAI,EAAGzS,EAAO+mB,KAEpEihB,EAAkB,SAAUC,GAC5B,IAAIrjC,EAASkjC,EAAkBG,EAI/B,OAHArjC,EAAS4iB,MAAM5iB,GAAU,EAAIA,EAC7BA,EAAU4iC,IAAsBt0B,EAAmBrkB,EAAM80B,EAAcJ,EAAe3e,EAAUA,EAChGA,EAASvO,EAAKiJ,IAAI,EAAGsF,IAGrBqjC,EAAcF,EAAeH,GAE7BvkB,EAAe2kB,EADQD,EAAeF,IAEtChkB,EAAsBmkB,EAAgBC,GAE1C5E,EAAkBlgB,WAAa4D,EAC/Bsc,EAAkBtgB,eAAiB6kB,EACnCvE,EAAkBpgB,oBAAsBglB,EAEpCx0B,GACA4zB,EAAkBG,IAAsB7jB,EAAcJ,EAAeF,GAAgBA,EAErFikB,EAAiB3E,EAAe8E,EAAoBJ,EAAkB,SAAWI,EAAoB,MAAQJ,EAAkB,MAE/HN,EAAUW,GAAgBJ,EAGtB9zB,IACAuzB,EAAUY,GAAiB/B,GAAcvvC,EAAKc,IAAIksB,EAAeggB,EAAkB/f,eAAiB,EAAI4kB,GAAuB/L,EAAc2G,SAAW,MAAQ4E,EAAenuC,GAAYguC,GAAqB,KAAQ/tC,KAG5NutC,EAAU5K,EAAcpS,WAAa1G,EAIpCkf,OACDpG,EAAc2G,QAAQrkC,IAAIsoC,GAGtBtzB,GAAqBD,GAAsBoyB,GAC3CzJ,EAAc2G,QAAQhiC,IAAI8b,IAAwB,WACzC9I,GACDqoB,EAAc2G,QAAQrkC,IAAIkpC,EAAenuC,QAKzD6pC,EAAkB/f,cAAgBD,EAClCggB,EAAkBvf,qBAAuBD,EACzCwf,EAAkBzf,aAAeD,EAQrC,SAASuc,GAA6BiI,EAASlsC,GAC3C,IAAI61B,EAAS71B,EAAQ,cAAgB,WAEjCmsC,EAAWD,EAAU9xB,GAAiCC,GACtDlT,EAAY+kC,EAAUvpB,GAA8BE,IAFzCqpB,EAAUjyB,GAAmCC,IAInD2b,GAAQ1uB,GACjBglC,EAAStW,GAAQ1uB,GAQrB,SAASumB,GAAiBgZ,GACtB,MAAO,CACHtG,cAAesG,EAAepnB,GAAYC,GAC1C2rB,cAAexE,EAAe,QAAU,SACxC5Y,UAAW4Y,EAAevnB,GAAWH,GACrCoiB,UAAWsF,EAAe,OAAS,MACnC1Y,KAAM0Y,EAAe7mB,GAAQC,GAC7BqiB,KAAMuE,EAAe,IAAM,IAC3B9Y,KAAM8Y,EAAe,IAAM,IAC3B0F,KAAM1F,EAAe,IAAM,IAC3BE,OAAQF,EAAezsB,GAAmCG,GAC1DysB,QAASH,EAAexsB,GAAoCG,GAC5DssB,WAAYD,EAAe1sB,GAA8BG,GACzDktB,MAAOX,EAAeloB,GAAwBC,IAWtD,SAAS0H,GAAwBR,GAC7B5L,GAA0BA,IAA2BkrB,GAA2BjiB,IAA2B,GAEtG2C,EAMG1N,GAAcL,EACd3P,GAAY8R,GAAwBtR,WAAW/V,EAAQL,GAAIoxB,IAG3Dhe,GAAOsU,IATN9B,GACDqB,GAAajU,OAAO0U,IAgBhC,SAASsyB,KACL,IAIIC,EAJAhF,EAAehtB,GAAqBvR,MAAQuR,GAC5CiyB,EAAoB,GACpBC,EAAgB,GAChBrF,EAAyB,GAG7B,SAASkB,EAAiBxwC,GACtB,GAAIswC,EAAyBtwC,GAAQ,CACjC,IAAI40C,EAAaC,EAAe70C,GAC5BmtC,EAAiB,IACjB3mB,IAAqBD,MACrB4mB,EAAe1lB,IAAcktB,EAAc3xC,GAAK4xC,EAAW12C,EAAIw2C,EAAkBx2C,GAAKoxC,EAAuBpxC,IAC7GuoB,IAAmBF,MACnB4mB,EAAezlB,IAAeitB,EAAcp6B,GAAKq6B,EAAWxzC,EAAIszC,EAAkBtzC,GAAKkuC,EAAuBluC,GAClHqgB,GAAa9W,IAAIwiC,GACjBnvC,EAAc+B,KAAKC,QAGnB2wC,EAAqB3wC,GAG7B,SAAS2wC,EAAqB3wC,GAC1B,IAAI80C,EAAiB90C,IAAU9F,EAE/BigC,GAA6B9Y,GACzB,CAACwH,GAAsBL,GAAyBD,IAChD,CAACwX,GAAuByQ,EAAkBG,IAC1C,GAEJvgC,GAAYmR,GAAcmK,IACtBxJ,GAAwB6yB,gBACxB7yB,GAAwB6yB,iBAExBD,IACIL,GACAxV,KACJzmB,EAAMoE,OAAOgL,KAEjB6sB,GAA4B,EAEhC,SAASnE,EAAyBtwC,GAC9B,IACIuwC,GADgBvwC,EAAMa,eAAiBb,GACVkB,UAAYhH,EAC7C,OAAO4mB,IAAad,IAAmD,IAA9BhiB,EAAcyD,KAAKzB,IAAgBuwC,GAEhF,SAASsE,EAAe70C,GACpB,OAAOsf,GAAgBmwB,EAAe,CAAEvxC,EAAG8B,EAAMg1C,QAAS5zC,EAAGpB,EAAMi1C,SAAYj3C,EAAcuC,KAAKP,GAGtGk7B,GAAwBhZ,GAAyBoG,IAAyB,SAAUtoB,GAC5EswC,EAAyBtwC,KAAWsmB,KAChCX,KACA8uB,GAA4B,EAC5BzmB,MAGJ0mB,EAAoBG,EAAe70C,GAEnC20C,EAAc3xC,EAAI4f,GAAmB/nB,EAAQS,KAAQ+kB,EAA2B,EAAZE,GACpEo0B,EAAcp6B,EAAIqI,GAAmB/nB,EAAQM,KAAQklB,EAA2B,EAAZG,GACpE8uB,EAAyB0B,KAEzB7W,GAA6B9Y,GACzB,CAACwH,GAAsBL,GAAyBD,IAChD,CAACwX,GAAuByQ,EAAkBG,IAE9ChhC,GAAS4R,GAAcmK,IACnBxJ,GAAwBgzB,YACxBhzB,GAAwBgzB,aAE5Bl3C,EAAcmC,KAAKH,GACnBhC,EAAc+B,KAAKC,OAc/B,SAASyuB,GAAiBjyB,EAAM24C,EAAMC,GAClC,IAAkB,IAAdA,EAEJ,GAAIr1B,EAAc,CACd,IAEImZ,EAFAlxB,EAAWiZ,GAAwBpM,UAAUrY,GAC7C64C,EAAkB74C,EAGe,OAAjC64C,EAAgB7hB,OAAO,EAAG,KAC1B6hB,EAAkBA,EAAgB7hB,OAAO,EAAG,GAAGz1B,cAAgBs3C,EAAgB7hB,OAAO,IAEtFrxB,EAAK6F,IAAa5N,EAAME,GACxB0N,EAASnJ,KAAK2Z,EAAO28B,GAEzBptC,EAAKgkB,IAAa,WAEV5pB,GADJ+2B,EAAMn/B,MACOwS,KAAOnS,EAAME,GACtB4+B,EAAI3sB,GAAG8oC,EAAiBF,WAG1Bn1B,GACN6L,GAAqBnhB,KAAK,CAAEhQ,EAAG8B,EAAMjC,EAAG46C,IAUhD,SAASvY,GAAsB0Y,EAAiBC,EAAQn4C,GAEpDA,EAASA,GAAU,CAACsI,GAAWA,GAAWA,GAAWA,IAErD4vC,GAHAC,EAASA,GAAU7vC,IAGMyhB,IAAW/pB,EAAO,GAC3Ck4C,EAAgBC,EAASnuB,IAAahqB,EAAO,GAC7Ck4C,EAAgBC,EAASluB,IAAcjqB,EAAO,GAC9Ck4C,EAAgBC,EAASjuB,IAAYlqB,EAAO,GAWhD,SAASuoC,GAA0B4P,EAAQl4C,EAAQm4C,EAAOC,GAGtD,OAFAp4C,EAASA,GAAUqI,GACnB6vC,EAASA,GAAU7vC,GACZ,CACHxC,EAAGuyC,EAAQ,EAAIhiB,GAAoBhS,GAAa9W,IAAI4qC,EAASpuB,GAAU9pB,IACvE0pC,EAAGyO,EAAQ,EAAI/hB,GAAoBhS,GAAa9W,IAAI4qC,EAASnuB,GAAY/pB,IACzE5C,EAAGg7C,EAAQ,EAAIhiB,GAAoBhS,GAAa9W,IAAI4qC,EAASluB,GAAahqB,IAC1ErC,EAAGw6C,EAAQ,EAAI/hB,GAAoBhS,GAAa9W,IAAI4qC,EAASjuB,GAAWjqB,KAShF,SAAS+2C,GAAuBha,GAC5B,IAAIsb,EAAgB/5C,EAAQY,aAAa,cACrCo5C,EAAiBvb,EAAQzvB,IAAI+qC,GACjC,GAAIC,EACA,OAAOA,EAqBX,IApBA,IAKIC,EACAC,EAEA7+B,EARA8+B,EAAe,qCACfC,EAAa,IAAIC,OAAOF,GACxBG,EAAiB,IAAID,OAAO,KAAOF,EAAe,OAClDI,EAAa,0CAA0Cz4C,MAAM,KAC7DhB,EAAS,GAGT1B,EAAI,EAEJo7C,EAAuB,SAAUl6C,GAEjC,GADA25C,EAAY,IACP35C,EAAImM,MAAM6tC,GACX,OAAOh6C,EACX,KAAOA,EAAImM,MAAM2tC,IACbH,EAAUlrC,KAAKsrC,OAAOI,IACtBn6C,EAAMA,EAAIgB,QAAQ84C,EAAYrwC,IAGlC,OAAOkwC,GAEJ76C,EAAIm7C,EAAWr7C,EAAQG,GAAID,IAE9B,IADA86C,EAAaM,EAAqB/b,EAAQzvB,IAAI+qC,EAAgB,IAAMQ,EAAWn7C,KAC1Eic,EAAI,EAAGA,EAAI6+B,EAAWh7C,EAAQG,GAAIgc,IACnCva,EAAOua,IAAMva,EAAOua,GAAKva,EAAOua,GAAKvR,GAAYC,IAAamwC,EAAW7+B,GAEjF,OAAOva,EAAO4L,KAAK,MAQvB,SAASw2B,GAA0BwX,EAAyBC,GACxD,IAAIv7C,EACA0C,EACA84C,EACAC,EAAgB,SAAU5mC,EAAS6mC,GAEnC,GADAF,EAAW,GACPE,UAAoB7mC,GAAWxV,EAAMI,EAErC,IADAiD,EAAQmS,EAAQnS,MAAMgI,IACjB1K,EAAI,EAAGA,EAAI0C,EAAM5C,EAAQG,GAAID,IAC9Bw7C,GAAY,IAAM94C,EAAM1C,GAAK,IAGrC,OAAOw7C,GAGX,OAAO,IAAIP,OACP,KAAO9sB,GAAwB,cAC/BstB,EAAczxB,GAAiBsxB,GAC/BG,EAAcxxB,GAAesxB,GAAyB,KAO9D,SAAStF,KACL,IAAIjgC,EAAOgS,GAAsBloB,EAAQa,OACzC,MAAO,CACHwC,EAAGyhB,GAAoB,GAAKpd,EAAKyZ,MAAMjL,EAAKykB,OAASzS,GAAsBloB,EAAQS,MAAY,EAC/F8F,EAAGue,GAAoB,GAAKpd,EAAKyZ,MAAMjL,EAAK0kB,QAAU1S,GAAsBloB,EAAQM,MAAY,GASxG,SAAS6jB,GAAc3kB,GACnB,IAAIq8C,EAAmB,gBACnBC,EAAiB,cACjB3Z,EAAM3iC,GAAKA,EAAEq8C,IAAqBr8C,EAAEq8C,GAAkBE,cAA0B98C,EACpF,cACWkjC,EAAI2Z,IAAmBv8C,EAAMC,EAAIA,aAAa2iC,EAAI2Z,GACrDt8C,UAAYA,GAAKD,EAAMC,GAAW,OAANA,GAA6B,IAAfA,EAAE4O,iBAAyB5O,EAAEw8C,UAAYz8C,EAAMI,EAUrG,SAASkmC,GAAoBoW,EAAIC,GAC7B,IAEIh8C,EACAi8C,EAHAz8C,EAAI,GACJkmC,EAAO,GAGX,IAAK1lC,EAAI,EAAGA,EAAI+7C,EAAG95C,OAAQjC,IACvBR,EAAEu8C,EAAG/7C,KAAM,EACf,IAAKA,EAAI,EAAGA,EAAIg8C,EAAG/5C,OAAQjC,IACnBR,EAAEw8C,EAAGh8C,WACER,EAAEw8C,EAAGh8C,IAEZR,EAAEw8C,EAAGh8C,KAAM,EAEnB,IAAKi8C,KAAKz8C,EACNkmC,EAAK/1B,KAAKssC,GACd,OAAOvW,EAQX,SAAShN,GAAoBtrB,EAAO8uC,GAChC,IAAIC,EAAMD,EAAUxrC,WAAWtD,GAAS0R,SAAS1R,EAAO,IACxD,OAAOurB,MAAMwjB,GAAO,EAAIA,EAO5B,SAAStM,KAEL,IAAIuM,EAAyBx0B,GAAqBy0B,eAClD,GAAID,IAA2Bj9C,EAA/B,CAGA,IASIm9C,EACAt8C,EAVAu8C,EAAgB91B,GAAerY,MAC/BouC,EAAiBD,EAAcz8C,EAAQG,GACvCw8C,EAAmBF,EAAc75C,MAAM,MACvCg6C,EAAkBD,EAAiB38C,EAAQG,GAC3C08C,EAAgCJ,EAAc9jB,OAAO,EAAG2jB,GAAwB15C,MAAM,MACtF0tC,EAAY,EACZwM,EAAkB,EAClB5M,EAAY2M,EAA8B78C,EAAQG,GAClDiwC,EAAYyM,EAA8BA,EAA8B78C,EAAQG,GAAK,GAAGH,EAAQG,GAKpG,IAAKD,EAAI,EAAGA,EAAIy8C,EAAiB38C,EAAQG,GAAID,KACzCs8C,EAAUG,EAAiBz8C,GAAGF,EAAQG,IACxB28C,IACVxM,EAAYpwC,EAAI,EAChB48C,EAAkBN,GAI1B,MAAO,CACHrM,WAAYD,EACZG,cAAeD,EACfH,MAAO2M,EACPlM,SAAUoM,EACVvM,WAAYD,EACZM,gBAAiB0L,EACjBzL,WAAY6L,IAQpB,SAAS9I,KACL,OAAQrqB,IAAuClF,EAA2BhhB,GAAKghB,EAA2B9d,EAO9G,SAAS8/B,KACL,OAAOjhB,EAAcgC,GAAsB,GAAKgB,GASpD,SAASwY,GAAYmc,EAAgBlgB,GACjC,MAAO,SAAWkgB,EAAiBz1C,EAAKy1C,IAAmBx9C,EAAMI,EAC7D,UAAYo9C,EAAiB,IAC5B,WACG,IAAIlwC,EACA86B,EAAQ98B,GACZ,GAAIH,EAAU8B,cAAcuwC,GACxB,IAAKlwC,KAAOkwC,EACRpV,IAAkB,MAAR96B,EAAc,QAAUA,GAAO,KAAOkwC,EAAelwC,GAAO,KAE9E,OAAO86B,EAPV,GASD98B,IACA,KACCgyB,GAAWhyB,IACZ,SAUR,SAAS0nC,GAA2B99B,EAAWuoC,GAC3C,IAAIC,EAAe31C,EAAK01C,IAA+Bz9C,EAAMK,EACzDs9C,EAAeD,EAAer2B,GAAgBo2B,GAA8Bp2B,GAEhF,OAAQrB,IAAe23B,EAAal9C,EAAQG,GACtC,KACAolB,EACI23B,EAAaD,EAAe,WAAa,QAAQ5vB,GAAU5Y,EAAUrS,QAAQ,MAAOirB,KAAU1W,GAAG,GACjGjM,EAAUk2B,GAAYnsB,IASpC,SAASqe,GAAiBvrB,EAAK41C,GAI3B,IAHA,IAEI7uC,EAFA8uC,EAASD,EAAKv6C,MAAMyqB,IACpBntB,EAAI,EAEDA,EAAIk9C,EAAOj7C,OAAQjC,IAAK,CAC3B,IAAKqH,EAAIvH,EAAQY,KAAKw8C,EAAOl9C,IACzB,OACJoO,EAAM/G,EAAI61C,EAAOl9C,IACbA,EAAIk9C,EAAOj7C,QAAUmF,EAAKgH,IAAQ/O,EAAMC,IACxC+H,EAAM+G,GAEd,OAAOA,EASX,SAASykB,GAAiBxrB,EAAK41C,EAAM7uC,GAMjC,IALA,IAAI8uC,EAASD,EAAKv6C,MAAMyqB,IACpBgwB,EAAeD,EAAOj7C,OACtBjC,EAAI,EACJo9C,EAAY,GACZC,EAAgBD,EACbp9C,EAAIm9C,EAAcn9C,IACrBo9C,EAAYA,EAAUF,EAAOl9C,IAAMA,EAAI,EAAIm9C,EAAe,GAAK/uC,EACnE5D,EAAUsB,OAAOzE,EAAKg2C,GAAe,GAOzC,SAASnY,GAAiBjC,GACtB,IAAIpqB,EAAeqN,GAAwBrN,aAC3CA,EAAezR,EAAKyR,IAAiBxZ,EAAMI,EAAIoZ,EAAanW,MAAMgI,IAAamO,EAE3E5V,EAAcgE,IAAI4R,KAAkBoM,GACpCjY,EAAK6L,EAAcoqB,GAc3B,SAAS0B,GAAW2Y,EAAS/W,EAAO5U,GAChC,GAAIA,EACA,OAAOA,EACX,GAAIvqB,EAAKk2C,IAAYj+C,EAAMC,GAAK8H,EAAKm/B,IAAUlnC,EAAMC,EAcjD,OAAOg+C,IAAY/W,EAbnB,IAAK,IAAIhkC,KAAQ+6C,EACb,GAAa,MAAT/6C,EAAc,CACd,IAAI+6C,EAAQx9C,EAAQY,KAAK6B,KAASgkC,EAAMzmC,EAAQY,KAAK6B,GAKjD,OAAO,EAJP,GAAIoiC,GAAW2Y,EAAQ/6C,GAAOgkC,EAAMhkC,IAChC,OAAO,EAW3B,OAAO,EASX,SAAS+6B,KACL,OAAO9yB,EAAUsB,OAAO5H,MAAMlF,KAAM,EAAC,GAAMmF,OAAO,GAAG9C,MAAMyC,KAAKC,aAMpE,SAAS6Q,GAAS9G,EAAI+G,GAClB,OAAOmP,EAAgBpP,SAAS9Q,KAAKgK,EAAI+G,GAM7C,SAASQ,GAAYvH,EAAI+G,GACrB,OAAOmP,EAAgB3O,YAAYvR,KAAKgK,EAAI+G,GAMhD,SAASs6B,GAAerhC,EAAI+G,EAAS0oC,GACjC,OAAOA,EAAQ3oC,GAAS9G,EAAI+G,GAAWQ,GAAYvH,EAAI+G,GAM3D,SAAShC,GAAO/E,GACZ,OAAOkW,EAAgBnR,OAAO/O,KAAKgK,GASvC,SAASi0B,GAAUj0B,EAAIL,GACnB,OAAOuW,EAAgBrN,KAAK7S,KAAKgK,EAAIL,GAAUgJ,GAAG,GA4xBtD,SAAS0oB,GAAUiB,EAAel0B,EAAS6X,GA+FvC,IAAIy5B,EACAC,EAGJ,OAlGAz3B,EAAkBxD,EAAQhF,eAC1BgH,EAA0BhC,EAAQtD,uBAClCwF,EAAuB4Y,GAAW,GAAI9a,EAAQvE,qBAC9CkG,EAA6BmZ,GAAW,GAAI9a,EAAQrE,2BACpDiG,EAA6BkZ,GAAW,GAAI9a,EAAQpD,2BACpDiF,EAAqBiZ,GAAW,GAAI9a,EAAQ9C,mBAG5CoT,GAAWwK,GAAW,GAAItX,EAAiB9Z,IAE3CuY,EAAWjC,EAAQnD,QACnBkF,EAAe/B,EAAQpE,KACvBkG,EAAyB9B,EAAQvD,sBACjC0F,EAAqBnC,EAAQzC,kBAC7B6E,EAAoBpC,EAAQ1C,iBAC5B+E,EAAwBrC,EAAQxC,qBAChC8E,EAAyBtC,EAAQpC,sBACjC2E,EAA2BvC,EAAQnC,wBACZmC,EAAQlD,oBAC/BgH,GAAmB9b,EAAU41B,EAAcn6B,eAC3C0hB,GAAyBrB,GAAiB,GAC1CD,GAAiB7b,EAAUmd,GAAuBwa,aAAexa,GAAuBk0B,cACxFn0B,GAAuBrB,GAAe,GACtCE,GAAewb,GAAUzb,GAAkB,QAC3CE,GAAeub,GAAUxb,GAAc,QACvCE,GAAiBjc,EAAU41B,GAC3BxY,GAAuBnB,GAAe,GACtCvB,EAAcuB,GAAe5P,GAAG,YAChCsO,EAAUsB,GAAe5P,GAAG,QAC5BuO,EAAiBuC,KAA2BzoB,EA6D5CmmB,EAAaH,EACPuB,GAAenS,SAASya,KAA8BtI,GAAezT,SAASsB,SAAS+a,IACvF5I,GAAenS,SAAS6Z,KAA0B1H,GAAenV,SAAS6b,GAAU8B,IAA0BnvB,EAAQG,GAMxHkkB,EAA2BhhB,GAAKghB,EAA2B9d,IAAM6f,GAAwBpN,yBAAyBE,YAClHgM,GAAe,EACf0O,GAAiB,6BACbrO,IACAmO,IAAkB,GAClBF,IAAmB,GACnBC,IAAwB,IAG5BvO,GAAe,EACfC,GAAa,EACbc,GAAY,EAELtI,IAGP0H,KACAq4B,EAAiB,IACFv9C,EAAIuH,EAAKiJ,IAAIgW,GAAe7b,MAAmB2b,GAAa3b,MAAmByb,GAAezb,OAC7G4yC,EAAer1C,EAAIX,EAAKiJ,IAAIgW,GAAe5b,MAAkB0b,GAAa1b,MAAkBwb,GAAexb,OAE3G4yC,EAA6B,WACzB32B,GAAiBjR,WAAW/V,EAAQK,IACpCi/B,GAA6BtY,GAAkByG,GAAyBkwB,GAA4B,GAAM,KAKlHjqB,KACAF,KACAC,KAGA+e,KACA6B,IAAqB,GACrBA,IAAqB,GACrBsF,KAGAjX,KAGAtP,GAAoBtM,GAAsB6d,IAEtCtf,IAEA2B,GAAiBlc,IAAgB4yC,EAAev9C,GAAG4K,IAAe2yC,EAAer1C,GAG7EjJ,EAASw+C,eAAiBtd,GAAiBnY,GAAuB01B,QAElE72B,GAAiBrR,KAAK3V,EAAQK,GAAI,MAClC8nB,GAAuB01B,QAMvBve,GAA6BtY,GAAkByG,GAAyBkwB,GAA4B,GAAO,KAKnHhgC,EAAMoE,OAAOgL,IAGb7H,GAAe,EACf0O,GAAiB,iBAGjB1mB,EAAK8jB,IAAsB,SAAUriB,EAAOrB,GAASsmB,GAAiBtmB,EAAMzN,EAAGyN,EAAM5N,MACrFsxB,GAAuB,GAGnB1pB,EAAK2c,IAAe1kB,EAAMI,IAC1BskB,EAAa,CAACA,IACd9gB,EAAcgE,IAAI8c,GAClB/W,EAAK+W,GAAY,SAAUtV,EAAOrB,GAASqQ,EAAM4gB,OAAOjxB,MACnD5C,EAAU8B,cAAcyX,IAC7B/W,EAAK+W,GAAY,SAAUpX,EAAKS,GAASqQ,EAAM4gB,OAAO1xB,EAAKS,MAG/D3I,YAAW,WACHkgB,IAAuBM,GACvBrQ,GAAS8R,GAAc8H,MAC5B,KAEI/Q,IAwIf,OAvHAnG,EAAUvY,EAAOK,GAAc,SAAUw+C,EAAsB1xC,EAAS6X,GACpE,GAA6B,IAAzBhgB,UAAUjE,EAAQG,GAClB,OAAOjB,KAEX,IAEIklB,EACAxiB,EAHAqF,EAAM,GACN82C,EAAiBrzC,EAAU8B,cAAcJ,GAK7C,OAAK0xC,GAULA,EAAuBA,EAAqB99C,EAAQG,IAAMd,EAAYy+C,EAAuB,CAACA,EAAqB,IAAMA,GACzHvgC,IAEIugC,EAAqB99C,EAAQG,GAAK,IAC9B49C,EACArzC,EAAUwC,KAAK4wC,GAAsB,SAAU59C,EAAG4B,IAC9CsiB,EAAOtiB,KACMzC,GACT4H,EAAI4I,KAAKkU,EAA0BK,EAAMhY,EAAS6X,EAAYxM,EAAiBC,OAIvFhN,EAAUwC,KAAK4wC,GAAsB,SAAU59C,EAAG4B,GAC9CsiB,EAAOlN,EAAUpV,IACA,MAAZsK,GAAmBoL,EAAQ4nB,MAAMhb,IAAWjhB,EAAcmE,KAAK8E,IAAY7M,EAAME,GAAK2M,EAAQtK,EAAGsiB,IAE7FhY,IAAY/M,IADjB4H,EAAI4I,KAAKuU,MAKrBxiB,EAA4B,IAAnBqF,EAAIjH,EAAQG,GAAW8G,EAAI,GAAKA,GAEtCrF,GA/BIm8C,IAAmB3xC,EAAUxK,EAASqF,GAsCrDuQ,EAAQkL,QAAU,WACdnF,IACA,IAAImF,EAAUhY,EAAUsB,QAAO,EAAM,GAAIyL,GAEzC,cADOiL,EAAO,KACPA,GAOXlL,EAAQkG,eAAiB,SAAUsgC,GAC/BzgC,IACA,IAAI0gC,EAAqBxmC,EAAgBiG,eACzC,GAAIsgC,IAAsB3+C,EACtB,OAAOqL,EAAUsB,QAAO,EAAM,GAAIiyC,GAGtCxmC,EAAgBiG,eAAiBhT,EAAUsB,QAAO,EAAM,GAAIiyC,EAAoBrmC,EAAgBuD,UAAU6iC,EAAmBpmC,EAAgBsD,WAAW,EAAM+iC,GAAoB5gC,WAQtL7F,EAAQ4nB,MAAQ,SAAU8e,GACtB,OAAOA,aAAsB1mC,IAAY0mC,EAAW9gB,WAAWM,WAanElmB,EAAQqnB,UAAY,SAAUsf,EAAetf,EAAWnhB,GACpD,IAAI0gC,EAAoBj7C,EAAcmE,KAAK62C,IAAkB5+C,EAAMI,EAC/D2X,EAASrT,UAAUjE,EAAQG,GAC3BD,EAAI,EACR,GAAIoX,EAAS,IAAM8mC,EAEf,OAAO1zC,EAAUsB,QAAO,EAAM,CAAE7J,OAAQwV,EAAmB3X,EAAQG,IAAMwX,GAExE,GAAIymC,EACL,GAAIj7C,EAAcmE,KAAKu3B,IAAct/B,EAAME,EAEvCkY,EAAmB9H,KAAK,CACpBlO,KAAMw8C,EACNpf,iBAAkBF,EAClBnhB,eAAgBA,SAIpB,KAAOxd,EAAIyX,EAAmB3X,EAAQG,GAAID,IACtC,GAAIyX,EAAmBzX,GAAGyB,OAASw8C,EAAe,CAC9C,KAAI7mC,EAAS,GAGT,OAAO5M,EAAUsB,QAAO,EAAM,GAAI2L,EAAmBzX,IAFrDyX,EAAmB7I,OAAO5O,EAAG,KAS9CsX,EAnjKG,GAukKd,OAjBI5P,GAAUA,EAAOy2C,KAOjBz2C,EAAOy2C,GAAGC,kBAAoB,SAAUlyC,EAAS6X,GAC7C,IAAIs6B,EAAYr/C,KAChB,OAAI0I,EAAO4E,cAAcJ,IACrBxE,EAAOsF,KAAKqxC,GAAW,WAAchnC,EAAOrY,KAAMkN,EAAS6X,MACpDs6B,GAGAhnC,EAAOgnC,EAAWnyC,KAG9BmL,EA5/MqBinC,CAAQx/C,EAAQA,EAAOI,cAAUC,IAAvD,0HCfVo/C,EAAsC,WAStC,OARAA,EAAWj3C,OAAOk3C,QAAU,SAASr2C,GACjC,IAAK,IAAI1I,EAAGO,EAAI,EAAGL,EAAIoE,UAAU9B,OAAQjC,EAAIL,EAAGK,IAE5C,IAAK,IAAIE,KADTT,EAAIsE,UAAU/D,GACOsH,OAAOm3C,UAAU7xC,eAAe9I,KAAKrE,EAAGS,KACzDiI,EAAEjI,GAAKT,EAAES,IAEjB,OAAOiI,GAEJo2C,EAASr6C,MAAMlF,KAAM+E,YAG5B26C,EAAkB,SAAUC,GAAW,MAAQ,CAC/CppC,QAASopC,EAAU,OAAS,SAgBhC,EAdgB,SAAUC,GACtB,IAAIC,EAAKD,EAAGlkB,OAAQA,OAAgB,IAAPmkB,EAAgB,GAAKA,EAAIC,EAAKF,EAAGnkB,MAAOA,OAAe,IAAPqkB,EAAgB,GAAKA,EAAIC,EAAKH,EAAGI,OAAQA,OAAgB,IAAPD,EAAgB,EAAIA,EAAIE,EAAKL,EAAGM,MAAOA,OAAe,IAAPD,EAAgB,QAAUA,EAAIE,EAAKP,EAAGQ,UAAWA,OAAmB,IAAPD,EAAgB,qBAAuBA,EAAIE,EAAeT,EAAGS,aAAcC,EAAeV,EAAGU,aAAcC,EAAKX,EAAGD,QAASA,OAAiB,IAAPY,GAAuBA,EACxY,OAAQC,EAAAA,cAAoB,MAAO,CAAE3e,MAAO0d,EAASA,EAAS,GAAIG,EAAgBC,IAAWU,GAAe9qC,UAAW+qC,EAAc,cAAe,sBAChJE,EAAAA,cAAoB,MAAO,CAAE/kB,MAAOA,EAAOC,OAAQA,EAAQ+kB,QAAS,aAAcC,MAAO,6BAA8BC,KAAMT,EAAO,aAAcE,EAAW,cAAe,kBACxKI,EAAAA,cAAoB,SAAU,CAAEI,GAAI,KAAMC,GAAI,KAAM7T,EAAG8T,OAAOd,GAAU,GACpEQ,EAAAA,cAAoB,UAAW,CAAE5b,cAAe,IAAKp0B,KAAM,KAAMC,GAAI,KAAMswC,MAAO,KAAMC,IAAK,OAAQ39C,OAAQ,UAAW49C,SAAU,SAAUC,YAAa,eACzJV,EAAAA,cAAoB,UAAW,CAAE5b,cAAe,eAAgBp0B,KAAM,IAAKC,GAAI,IAAKswC,MAAO,KAAMC,IAAK,OAAQ39C,OAAQ,SAAU49C,SAAU,SAAUC,YAAa,gBACrKV,EAAAA,cAAoB,SAAU,CAAEI,GAAI,KAAMC,GAAI,KAAM7T,EAAGgT,EAAQpb,cAAe,eAAgBp0B,KAAM,IAAKC,GAAI,OACzG+vC,EAAAA,cAAoB,UAAW,CAAE5b,cAAe,IAAKp0B,KAAM,IAAKC,GAAI,IAAKswC,MAAO,KAAMC,IAAK,OAAQ39C,OAAQ,SAAU49C,SAAU,SAAUC,YAAa,eACtJV,EAAAA,cAAoB,UAAW,CAAE5b,cAAe,eAAgBp0B,KAAM,MAAOC,GAAI,MAAOswC,MAAO,KAAMC,IAAK,OAAQ39C,OAAQ,UAAW49C,SAAU,SAAUC,YAAa,gBAC1KV,EAAAA,cAAoB,SAAU,CAAEI,GAAI,MAAOC,GAAI,KAAM7T,EAAG8T,OAAOd,GAAU,GACrEQ,EAAAA,cAAoB,UAAW,CAAE5b,cAAe,IAAKp0B,KAAM,KAAMC,GAAI,KAAMswC,MAAO,KAAMC,IAAK,OAAQ39C,OAAQ,UAAW49C,SAAU,SAAUC,YAAa,eACzJV,EAAAA,cAAoB,UAAW,CAAE5b,cAAe,eAAgBp0B,KAAM,IAAKC,GAAI,IAAKswC,MAAO,KAAMC,IAAK,OAAQ39C,OAAQ,SAAU49C,SAAU,SAAUC,YAAa,uFCzBjL,IAAIC,EAAY,YAgFT,IAAIC,EAAuB,SAA8B5gD,EAAGE,GACjE,OAAOF,IAAME,GAsBR,SAAS2gD,EAAe58C,EAAM68C,GACnC,IAAIC,EAAoD,kBAA3BD,EAAsCA,EAAyB,CAC1FE,cAAeF,GAEbG,EAAwBF,EAAgBC,cACxCA,OAA0C,IAA1BC,EAAmCL,EAAuBK,EAC1EC,EAAwBH,EAAgBI,QACxCA,OAAoC,IAA1BD,EAAmC,EAAIA,EACjDE,EAAsBL,EAAgBK,oBACtCC,EA7BC,SAAkCL,GACvC,OAAO,SAAoCM,EAAMC,GAC/C,GAAa,OAATD,GAA0B,OAATC,GAAiBD,EAAK7+C,SAAW8+C,EAAK9+C,OACzD,OAAO,EAMT,IAFA,IAAIA,EAAS6+C,EAAK7+C,OAETjC,EAAI,EAAGA,EAAIiC,EAAQjC,IAC1B,IAAKwgD,EAAcM,EAAK9gD,GAAI+gD,EAAK/gD,IAC/B,OAAO,EAIX,OAAO,GAcQghD,CAAyBR,GACtCja,EAAoB,IAAZoa,EA/Gd,SAA8BM,GAC5B,IAAIC,EACJ,MAAO,CACL/gC,IAAK,SAAaxT,GAChB,OAAIu0C,GAASD,EAAOC,EAAMv0C,IAAKA,GACtBu0C,EAAM9zC,MAGR+yC,GAETgB,IAAK,SAAax0C,EAAKS,GACrB8zC,EAAQ,CACNv0C,IAAKA,EACLS,MAAOA,IAGXg0C,WAAY,WACV,OAAOF,EAAQ,CAACA,GAAS,IAE3BG,MAAO,WACLH,OAAQ/hD,IA2FgBmiD,CAAqBT,GAtFnD,SAAwBF,EAASM,GAC/B,IAAIM,EAAU,GAEd,SAASphC,EAAIxT,GACX,IAAI60C,EAAaD,EAAQE,WAAU,SAAUP,GAC3C,OAAOD,EAAOt0C,EAAKu0C,EAAMv0C,QAG3B,GAAI60C,GAAc,EAAG,CACnB,IAAIN,EAAQK,EAAQC,GAOpB,OALIA,EAAa,IACfD,EAAQ3yC,OAAO4yC,EAAY,GAC3BD,EAAQG,QAAQR,IAGXA,EAAM9zC,MAIf,OAAO+yC,EAyBT,MAAO,CACLhgC,IAAKA,EACLghC,IAxBF,SAAax0C,EAAKS,GACZ+S,EAAIxT,KAASwzC,IAEfoB,EAAQG,QAAQ,CACd/0C,IAAKA,EACLS,MAAOA,IAGLm0C,EAAQt/C,OAAS0+C,GACnBY,EAAQnuB,QAgBZguB,WAXF,WACE,OAAOG,GAWPF,MARF,WACEE,EAAU,KA4CmDI,CAAehB,EAASE,GAEvF,SAASe,IACP,IAAIx0C,EAAQm5B,EAAMpmB,IAAIpc,WAEtB,GAAIqJ,IAAU+yC,EAAW,CAIvB,GAFA/yC,EAAQ3J,EAAKS,MAAM,KAAMH,WAErB68C,EAAqB,CACvB,IAAIW,EAAUhb,EAAM6a,aAChBS,EAAgBN,EAAQ5qC,MAAK,SAAUuqC,GACzC,OAAON,EAAoBM,EAAM9zC,MAAOA,MAGtCy0C,IACFz0C,EAAQy0C,EAAcz0C,OAI1Bm5B,EAAM4a,IAAIp9C,UAAWqJ,GAGvB,OAAOA,EAOT,OAJAw0C,EAASE,WAAa,WACpB,OAAOvb,EAAM8a,SAGRO,EC9IT,SAASG,EAAgBC,GACvB,IAAIC,EAAep+C,MAAMsD,QAAQ66C,EAAM,IAAMA,EAAM,GAAKA,EAExD,IAAKC,EAAaC,OAAM,SAAUC,GAChC,MAAsB,oBAARA,KACZ,CACF,IAAIC,EAAkBH,EAAaI,KAAI,SAAUF,GAC/C,MAAsB,oBAARA,EAAqB,aAAeA,EAAI1gD,MAAQ,WAAa,YAAc0gD,KACxF70C,KAAK,MACR,MAAM,IAAIg1C,MAAM,kGAAoGF,EAAkB,KAGxI,OAAOH,EAGF,SAASM,EAAsBC,GACpC,IAAK,IAAIC,EAAO1+C,UAAU9B,OAAQygD,EAAyB,IAAI7+C,MAAM4+C,EAAO,EAAIA,EAAO,EAAI,GAAIE,EAAO,EAAGA,EAAOF,EAAME,IACpHD,EAAuBC,EAAO,GAAK5+C,UAAU4+C,GAG/C,IAAIC,EAAiB,WACnB,IAAK,IAAIC,EAAQ9+C,UAAU9B,OAAQ+/C,EAAQ,IAAIn+C,MAAMg/C,GAAQC,EAAQ,EAAGA,EAAQD,EAAOC,IACrFd,EAAMc,GAAS/+C,UAAU++C,GAG3B,IAEIC,EAFAC,EAAkB,EAOlBC,EAAwB,CAC1BC,oBAAgB/jD,GAGdgkD,EAAanB,EAAM5uB,MAQvB,GAN0B,kBAAf+vB,IACTF,EAAwBE,EAExBA,EAAanB,EAAM5uB,OAGK,oBAAf+vB,EACT,MAAM,IAAIb,MAAM,qFAAuFa,EAAa,KAKtH,IAAIC,EAAwBH,EACxBI,EAAyBD,EAAsBF,eAC/CA,OAA4C,IAA3BG,EAAoCX,EAAyBW,EAM9EC,EAAsBz/C,MAAMsD,QAAQ+7C,GAAkBA,EAAiB,CAACA,GACxEjB,EAAeF,EAAgBC,GAC/BuB,EAAqBf,EAAQt+C,WAAM,EAAQ,CAAC,WAG9C,OAFA8+C,IAEOG,EAAWj/C,MAAM,KAAMH,aAC7BI,OAAOm/C,IAEN71C,EAAW+0C,GAAQ,WAIrB,IAHA,IAAIgB,EAAS,GACTvhD,EAASggD,EAAahgD,OAEjBjC,EAAI,EAAGA,EAAIiC,EAAQjC,IAG1BwjD,EAAO7zC,KAAKsyC,EAAajiD,GAAGkE,MAAM,KAAMH,YAK1C,OADAg/C,EAAcQ,EAAmBr/C,MAAM,KAAMs/C,MAiB/C,OAdAl8C,OAAOk3C,OAAO/wC,EAAU,CACtB01C,WAAYA,EACZI,mBAAoBA,EACpBtB,aAAcA,EACdwB,WAAY,WACV,OAAOV,GAETW,eAAgB,WACd,OAAOV,GAETW,oBAAqB,WACnB,OAAOX,EAAkB,KAGtBv1C,GAIT,OAAOm1C,EAEF,IAAIA,EAAgCL,EAAsBlC,yFCtGjE,IAkBIuD,EAAS,eAACC,EAAD,uDAAQ,GAAR,OACXC,OAAOC,gBAAgB,IAAIC,WAAWH,IAAOI,QAAO,SAACt/C,EAAIu/C,GAWvD,OAREv/C,IAFFu/C,GAAQ,IACG,GACHA,EAAK38C,SAAS,IACX28C,EAAO,IACTA,EAAO,IAAI38C,SAAS,IAAInG,cACtB8iD,EAAO,GACV,IAEA,MAGP","sources":["../node_modules/overlayscrollbars/js/OverlayScrollbars.js","../node_modules/react-loader-spinner/dist/esm/loader/ThreeDots.js","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["/*!\r\n * OverlayScrollbars\r\n * https://github.com/KingSora/OverlayScrollbars\r\n *\r\n * Version: 1.13.3\r\n *\r\n * Copyright KingSora | Rene Haas.\r\n * https://github.com/KingSora\r\n *\r\n * Released under the MIT license.\r\n * Date: 20.07.2022\r\n */\r\n\r\n(function (global, factory) {\r\n    if (typeof define === 'function' && define.amd)\r\n        define(function () { return factory(global, global.document, undefined); });\r\n    else if (typeof module === 'object' && typeof module.exports === 'object')\r\n        module.exports = factory(global, global.document, undefined);\r\n    else\r\n        factory(global, global.document, undefined);\r\n}(typeof window !== 'undefined' ? window : this,\r\n    function (window, document, undefined) {\r\n        'use strict';\r\n        var PLUGINNAME = 'OverlayScrollbars';\r\n        var TYPES = {\r\n            o: 'object',\r\n            f: 'function',\r\n            a: 'array',\r\n            s: 'string',\r\n            b: 'boolean',\r\n            n: 'number',\r\n            u: 'undefined',\r\n            z: 'null'\r\n            //d : 'date',\r\n            //e : 'error',\r\n            //r : 'regexp',\r\n            //y : 'symbol'\r\n        };\r\n        var LEXICON = {\r\n            c: 'class',\r\n            s: 'style',\r\n            i: 'id',\r\n            l: 'length',\r\n            p: 'prototype',\r\n            ti: 'tabindex',\r\n            oH: 'offsetHeight',\r\n            cH: 'clientHeight',\r\n            sH: 'scrollHeight',\r\n            oW: 'offsetWidth',\r\n            cW: 'clientWidth',\r\n            sW: 'scrollWidth',\r\n            hOP: 'hasOwnProperty',\r\n            bCR: 'getBoundingClientRect'\r\n        };\r\n        var VENDORS = (function () {\r\n            //https://developer.mozilla.org/en-US/docs/Glossary/Vendor_Prefix\r\n            var jsCache = {};\r\n            var cssCache = {};\r\n            var cssPrefixes = ['-webkit-', '-moz-', '-o-', '-ms-'];\r\n            var jsPrefixes = ['WebKit', 'Moz', 'O', 'MS'];\r\n            function firstLetterToUpper(str) {\r\n                return str.charAt(0).toUpperCase() + str.slice(1);\r\n            }\r\n\r\n            return {\r\n                _cssPrefixes: cssPrefixes,\r\n                _jsPrefixes: jsPrefixes,\r\n                _cssProperty: function (name) {\r\n                    var result = cssCache[name];\r\n\r\n                    if (cssCache[LEXICON.hOP](name))\r\n                        return result;\r\n\r\n                    var uppercasedName = firstLetterToUpper(name);\r\n                    var elmStyle = document.createElement('div')[LEXICON.s];\r\n                    var resultPossibilities;\r\n                    var i = 0;\r\n                    var v;\r\n                    var currVendorWithoutDashes;\r\n\r\n                    for (; i < cssPrefixes.length; i++) {\r\n                        currVendorWithoutDashes = cssPrefixes[i].replace(/-/g, '');\r\n                        resultPossibilities = [\r\n                            name, //transition\r\n                            cssPrefixes[i] + name, //-webkit-transition\r\n                            currVendorWithoutDashes + uppercasedName, //webkitTransition\r\n                            firstLetterToUpper(currVendorWithoutDashes) + uppercasedName //WebkitTransition\r\n                        ];\r\n                        for (v = 0; v < resultPossibilities[LEXICON.l]; v++) {\r\n                            if (elmStyle[resultPossibilities[v]] !== undefined) {\r\n                                result = resultPossibilities[v];\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    cssCache[name] = result;\r\n                    return result;\r\n                },\r\n                _cssPropertyValue: function (property, values, suffix) {\r\n                    var name = property + ' ' + values;\r\n                    var result = cssCache[name];\r\n\r\n                    if (cssCache[LEXICON.hOP](name))\r\n                        return result;\r\n\r\n                    var dummyStyle = document.createElement('div')[LEXICON.s];\r\n                    var possbleValues = values.split(' ');\r\n                    var preparedSuffix = suffix || '';\r\n                    var i = 0;\r\n                    var v = -1;\r\n                    var prop;\r\n\r\n                    for (; i < possbleValues[LEXICON.l]; i++) {\r\n                        for (; v < VENDORS._cssPrefixes[LEXICON.l]; v++) {\r\n                            prop = v < 0 ? possbleValues[i] : VENDORS._cssPrefixes[v] + possbleValues[i];\r\n                            dummyStyle.cssText = property + ':' + prop + preparedSuffix;\r\n                            if (dummyStyle[LEXICON.l]) {\r\n                                result = prop;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    cssCache[name] = result;\r\n                    return result;\r\n                },\r\n                _jsAPI: function (name, isInterface, fallback) {\r\n                    var i = 0;\r\n                    var result = jsCache[name];\r\n\r\n                    if (!jsCache[LEXICON.hOP](name)) {\r\n                        result = window[name];\r\n                        for (; i < jsPrefixes[LEXICON.l]; i++)\r\n                            result = result || window[(isInterface ? jsPrefixes[i] : jsPrefixes[i].toLowerCase()) + firstLetterToUpper(name)];\r\n                        jsCache[name] = result;\r\n                    }\r\n                    return result || fallback;\r\n                }\r\n            }\r\n        })();\r\n        var COMPATIBILITY = (function () {\r\n            function windowSize(x) {\r\n                return x ? window.innerWidth || document.documentElement[LEXICON.cW] || document.body[LEXICON.cW] : window.innerHeight || document.documentElement[LEXICON.cH] || document.body[LEXICON.cH];\r\n            }\r\n            function bind(func, thisObj) {\r\n                if (typeof func != TYPES.f) {\r\n                    throw \"Can't bind function!\";\r\n                    // closest thing possible to the ECMAScript 5\r\n                    // internal IsCallable function\r\n                    //throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\r\n                }\r\n                var proto = LEXICON.p;\r\n                var aArgs = Array[proto].slice.call(arguments, 2);\r\n                var fNOP = function () { };\r\n                var fBound = function () { return func.apply(this instanceof fNOP ? this : thisObj, aArgs.concat(Array[proto].slice.call(arguments))); };\r\n\r\n                if (func[proto])\r\n                    fNOP[proto] = func[proto]; // Function.prototype doesn't have a prototype property\r\n                fBound[proto] = new fNOP();\r\n\r\n                return fBound;\r\n            }\r\n\r\n            return {\r\n                /**\r\n                 * Gets the current window width.\r\n                 * @returns {Number|number} The current window width in pixel.\r\n                 */\r\n                wW: bind(windowSize, 0, true),\r\n\r\n                /**\r\n                 * Gets the current window height.\r\n                 * @returns {Number|number} The current window height in pixel.\r\n                 */\r\n                wH: bind(windowSize, 0),\r\n\r\n                /**\r\n                 * Gets the MutationObserver Object or undefined if not supported.\r\n                 * @returns {MutationObserver|*|undefined} The MutationsObserver Object or undefined.\r\n                 */\r\n                mO: bind(VENDORS._jsAPI, 0, 'MutationObserver', true),\r\n\r\n                /**\r\n                 * Gets the ResizeObserver Object or undefined if not supported.\r\n                 * @returns {MutationObserver|*|undefined} The ResizeObserver Object or undefined.\r\n                 */\r\n                rO: bind(VENDORS._jsAPI, 0, 'ResizeObserver', true),\r\n\r\n                /**\r\n                 * Gets the RequestAnimationFrame method or it's corresponding polyfill.\r\n                 * @returns {*|Function} The RequestAnimationFrame method or it's corresponding polyfill.\r\n                 */\r\n                rAF: bind(VENDORS._jsAPI, 0, 'requestAnimationFrame', false, function (func) { return window.setTimeout(func, 1000 / 60); }),\r\n\r\n                /**\r\n                 * Gets the CancelAnimationFrame method or it's corresponding polyfill.\r\n                 * @returns {*|Function} The CancelAnimationFrame method or it's corresponding polyfill.\r\n                 */\r\n                cAF: bind(VENDORS._jsAPI, 0, 'cancelAnimationFrame', false, function (id) { return window.clearTimeout(id); }),\r\n\r\n                /**\r\n                 * Gets the current time.\r\n                 * @returns {number} The current time.\r\n                 */\r\n                now: function () {\r\n                    return Date.now && Date.now() || new Date().getTime();\r\n                },\r\n\r\n                /**\r\n                 * Stops the propagation of the given event.\r\n                 * @param event The event of which the propagation shall be stoped.\r\n                 */\r\n                stpP: function (event) {\r\n                    if (event.stopPropagation)\r\n                        event.stopPropagation();\r\n                    else\r\n                        event.cancelBubble = true;\r\n                },\r\n\r\n                /**\r\n                 * Prevents the default action of the given event.\r\n                 * @param event The event of which the default action shall be prevented.\r\n                 */\r\n                prvD: function (event) {\r\n                    if (event.preventDefault && event.cancelable)\r\n                        event.preventDefault();\r\n                    else\r\n                        event.returnValue = false;\r\n                },\r\n\r\n                /**\r\n                 * Gets the pageX and pageY values of the given mouse event.\r\n                 * @param event The mouse event of which the pageX and pageX shall be got.\r\n                 * @returns {{x: number, y: number}} x = pageX value, y = pageY value.\r\n                 */\r\n                page: function (event) {\r\n                    event = event.originalEvent || event;\r\n\r\n                    var strPage = 'page';\r\n                    var strClient = 'client';\r\n                    var strX = 'X';\r\n                    var strY = 'Y';\r\n                    var target = event.target || event.srcElement || document;\r\n                    var eventDoc = target.ownerDocument || document;\r\n                    var doc = eventDoc.documentElement;\r\n                    var body = eventDoc.body;\r\n\r\n                    //if touch event return return pageX/Y of it\r\n                    if (event.touches !== undefined) {\r\n                        var touch = event.touches[0];\r\n                        return {\r\n                            x: touch[strPage + strX],\r\n                            y: touch[strPage + strY]\r\n                        }\r\n                    }\r\n\r\n                    // Calculate pageX/Y if not native supported\r\n                    if (!event[strPage + strX] && event[strClient + strX] && event[strClient + strX] != null) {\r\n\r\n                        return {\r\n                            x: event[strClient + strX] +\r\n                                (doc && doc.scrollLeft || body && body.scrollLeft || 0) -\r\n                                (doc && doc.clientLeft || body && body.clientLeft || 0),\r\n                            y: event[strClient + strY] +\r\n                                (doc && doc.scrollTop || body && body.scrollTop || 0) -\r\n                                (doc && doc.clientTop || body && body.clientTop || 0)\r\n                        }\r\n                    }\r\n                    return {\r\n                        x: event[strPage + strX],\r\n                        y: event[strPage + strY]\r\n                    };\r\n                },\r\n\r\n                /**\r\n                 * Gets the clicked mouse button of the given mouse event.\r\n                 * @param event The mouse event of which the clicked button shal be got.\r\n                 * @returns {number} The number of the clicked mouse button. (0 : none | 1 : leftButton | 2 : middleButton | 3 : rightButton)\r\n                 */\r\n                mBtn: function (event) {\r\n                    var button = event.button;\r\n                    if (!event.which && button !== undefined)\r\n                        return (button & 1 ? 1 : (button & 2 ? 3 : (button & 4 ? 2 : 0)));\r\n                    else\r\n                        return event.which;\r\n                },\r\n\r\n                /**\r\n                 * Checks whether a item is in the given array and returns its index.\r\n                 * @param item The item of which the position in the array shall be determined.\r\n                 * @param arr The array.\r\n                 * @returns {number} The zero based index of the item or -1 if the item isn't in the array.\r\n                 */\r\n                inA: function (item, arr) {\r\n                    for (var i = 0; i < arr[LEXICON.l]; i++)\r\n                        //Sometiems in IE a \"SCRIPT70\" Permission denied error occurs if HTML elements in a iFrame are compared\r\n                        try {\r\n                            if (arr[i] === item)\r\n                                return i;\r\n                        }\r\n                        catch (e) { }\r\n                    return -1;\r\n                },\r\n\r\n                /**\r\n                 * Returns true if the given value is a array.\r\n                 * @param arr The potential array.\r\n                 * @returns {boolean} True if the given value is a array, false otherwise.\r\n                 */\r\n                isA: function (arr) {\r\n                    var def = Array.isArray;\r\n                    return def ? def(arr) : this.type(arr) == TYPES.a;\r\n                },\r\n\r\n                /**\r\n                 * Determine the internal JavaScript [[Class]] of the given object.\r\n                 * @param obj The object of which the type shall be determined.\r\n                 * @returns {string} The type of the given object.\r\n                 */\r\n                type: function (obj) {\r\n                    if (obj === undefined)\r\n                        return obj + '';\r\n                    if (obj === null)\r\n                        return obj + '';\r\n                    return Object[LEXICON.p].toString.call(obj).replace(/^\\[object (.+)\\]$/, '$1').toLowerCase();\r\n                },\r\n\r\n\r\n                bind: bind\r\n\r\n                /**\r\n                 * Gets the vendor-prefixed CSS property by the given name.\r\n                 * For example the given name is \"transform\" and you're using a old Firefox browser then the returned value would be \"-moz-transform\".\r\n                 * If the browser doesn't need a vendor-prefix, then the returned string is the given name.\r\n                 * If the browser doesn't support the given property name at all (not even with a vendor-prefix) the returned value is null.\r\n                 * @param propName The unprefixed CSS property name.\r\n                 * @returns {string|null} The vendor-prefixed CSS property or null if the browser doesn't support the given CSS property.\r\n\r\n                cssProp: function(propName) {\r\n                    return VENDORS._cssProperty(propName);\r\n                }\r\n                */\r\n            }\r\n        })();\r\n\r\n\r\n        var MATH = Math;\r\n        var JQUERY = window.jQuery;\r\n        var EASING = (function () {\r\n            var _easingsMath = {\r\n                p: MATH.PI,\r\n                c: MATH.cos,\r\n                s: MATH.sin,\r\n                w: MATH.pow,\r\n                t: MATH.sqrt,\r\n                n: MATH.asin,\r\n                a: MATH.abs,\r\n                o: 1.70158\r\n            };\r\n\r\n            /*\r\n             x : current percent (0 - 1),\r\n             t : current time (duration * percent),\r\n             b : start value (from),\r\n             c : end value (to),\r\n             d : duration\r\n\r\n             easingName : function(x, t, b, c, d) { return easedValue; }\r\n             */\r\n\r\n            return {\r\n                swing: function (x, t, b, c, d) {\r\n                    return 0.5 - _easingsMath.c(x * _easingsMath.p) / 2;\r\n                },\r\n                linear: function (x, t, b, c, d) {\r\n                    return x;\r\n                },\r\n                easeInQuad: function (x, t, b, c, d) {\r\n                    return c * (t /= d) * t + b;\r\n                },\r\n                easeOutQuad: function (x, t, b, c, d) {\r\n                    return -c * (t /= d) * (t - 2) + b;\r\n                },\r\n                easeInOutQuad: function (x, t, b, c, d) {\r\n                    return ((t /= d / 2) < 1) ? c / 2 * t * t + b : -c / 2 * ((--t) * (t - 2) - 1) + b;\r\n                },\r\n                easeInCubic: function (x, t, b, c, d) {\r\n                    return c * (t /= d) * t * t + b;\r\n                },\r\n                easeOutCubic: function (x, t, b, c, d) {\r\n                    return c * ((t = t / d - 1) * t * t + 1) + b;\r\n                },\r\n                easeInOutCubic: function (x, t, b, c, d) {\r\n                    return ((t /= d / 2) < 1) ? c / 2 * t * t * t + b : c / 2 * ((t -= 2) * t * t + 2) + b;\r\n                },\r\n                easeInQuart: function (x, t, b, c, d) {\r\n                    return c * (t /= d) * t * t * t + b;\r\n                },\r\n                easeOutQuart: function (x, t, b, c, d) {\r\n                    return -c * ((t = t / d - 1) * t * t * t - 1) + b;\r\n                },\r\n                easeInOutQuart: function (x, t, b, c, d) {\r\n                    return ((t /= d / 2) < 1) ? c / 2 * t * t * t * t + b : -c / 2 * ((t -= 2) * t * t * t - 2) + b;\r\n                },\r\n                easeInQuint: function (x, t, b, c, d) {\r\n                    return c * (t /= d) * t * t * t * t + b;\r\n                },\r\n                easeOutQuint: function (x, t, b, c, d) {\r\n                    return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\r\n                },\r\n                easeInOutQuint: function (x, t, b, c, d) {\r\n                    return ((t /= d / 2) < 1) ? c / 2 * t * t * t * t * t + b : c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\r\n                },\r\n                easeInSine: function (x, t, b, c, d) {\r\n                    return -c * _easingsMath.c(t / d * (_easingsMath.p / 2)) + c + b;\r\n                },\r\n                easeOutSine: function (x, t, b, c, d) {\r\n                    return c * _easingsMath.s(t / d * (_easingsMath.p / 2)) + b;\r\n                },\r\n                easeInOutSine: function (x, t, b, c, d) {\r\n                    return -c / 2 * (_easingsMath.c(_easingsMath.p * t / d) - 1) + b;\r\n                },\r\n                easeInExpo: function (x, t, b, c, d) {\r\n                    return (t == 0) ? b : c * _easingsMath.w(2, 10 * (t / d - 1)) + b;\r\n                },\r\n                easeOutExpo: function (x, t, b, c, d) {\r\n                    return (t == d) ? b + c : c * (-_easingsMath.w(2, -10 * t / d) + 1) + b;\r\n                },\r\n                easeInOutExpo: function (x, t, b, c, d) {\r\n                    if (t == 0) return b;\r\n                    if (t == d) return b + c;\r\n                    if ((t /= d / 2) < 1) return c / 2 * _easingsMath.w(2, 10 * (t - 1)) + b;\r\n                    return c / 2 * (-_easingsMath.w(2, -10 * --t) + 2) + b;\r\n                },\r\n                easeInCirc: function (x, t, b, c, d) {\r\n                    return -c * (_easingsMath.t(1 - (t /= d) * t) - 1) + b;\r\n                },\r\n                easeOutCirc: function (x, t, b, c, d) {\r\n                    return c * _easingsMath.t(1 - (t = t / d - 1) * t) + b;\r\n                },\r\n                easeInOutCirc: function (x, t, b, c, d) {\r\n                    return ((t /= d / 2) < 1) ? -c / 2 * (_easingsMath.t(1 - t * t) - 1) + b : c / 2 * (_easingsMath.t(1 - (t -= 2) * t) + 1) + b;\r\n                },\r\n                easeInElastic: function (x, t, b, c, d) {\r\n                    var s = _easingsMath.o; var p = 0; var a = c;\r\n                    if (t == 0) return b; if ((t /= d) == 1) return b + c; if (!p) p = d * .3;\r\n                    if (a < _easingsMath.a(c)) { a = c; s = p / 4; }\r\n                    else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\r\n                    return -(a * _easingsMath.w(2, 10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p)) + b;\r\n                },\r\n                easeOutElastic: function (x, t, b, c, d) {\r\n                    var s = _easingsMath.o; var p = 0; var a = c;\r\n                    if (t == 0) return b;\r\n                    if ((t /= d) == 1) return b + c;\r\n                    if (!p) p = d * .3;\r\n                    if (a < _easingsMath.a(c)) { a = c; s = p / 4; }\r\n                    else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\r\n                    return a * _easingsMath.w(2, -10 * t) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p) + c + b;\r\n                },\r\n                easeInOutElastic: function (x, t, b, c, d) {\r\n                    var s = _easingsMath.o; var p = 0; var a = c;\r\n                    if (t == 0) return b;\r\n                    if ((t /= d / 2) == 2) return b + c;\r\n                    if (!p) p = d * (.3 * 1.5);\r\n                    if (a < _easingsMath.a(c)) { a = c; s = p / 4; }\r\n                    else s = p / (2 * _easingsMath.p) * _easingsMath.n(c / a);\r\n                    if (t < 1) return -.5 * (a * _easingsMath.w(2, 10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p)) + b;\r\n                    return a * _easingsMath.w(2, -10 * (t -= 1)) * _easingsMath.s((t * d - s) * (2 * _easingsMath.p) / p) * .5 + c + b;\r\n                },\r\n                easeInBack: function (x, t, b, c, d, s) {\r\n                    s = s || _easingsMath.o;\r\n                    return c * (t /= d) * t * ((s + 1) * t - s) + b;\r\n                },\r\n                easeOutBack: function (x, t, b, c, d, s) {\r\n                    s = s || _easingsMath.o;\r\n                    return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\r\n                },\r\n                easeInOutBack: function (x, t, b, c, d, s) {\r\n                    s = s || _easingsMath.o;\r\n                    return ((t /= d / 2) < 1) ? c / 2 * (t * t * (((s *= (1.525)) + 1) * t - s)) + b : c / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) + b;\r\n                },\r\n                easeInBounce: function (x, t, b, c, d) {\r\n                    return c - this.easeOutBounce(x, d - t, 0, c, d) + b;\r\n                },\r\n                easeOutBounce: function (x, t, b, c, d) {\r\n                    var o = 7.5625;\r\n                    if ((t /= d) < (1 / 2.75)) {\r\n                        return c * (o * t * t) + b;\r\n                    } else if (t < (2 / 2.75)) {\r\n                        return c * (o * (t -= (1.5 / 2.75)) * t + .75) + b;\r\n                    } else if (t < (2.5 / 2.75)) {\r\n                        return c * (o * (t -= (2.25 / 2.75)) * t + .9375) + b;\r\n                    } else {\r\n                        return c * (o * (t -= (2.625 / 2.75)) * t + .984375) + b;\r\n                    }\r\n                },\r\n                easeInOutBounce: function (x, t, b, c, d) {\r\n                    return (t < d / 2) ? this.easeInBounce(x, t * 2, 0, c, d) * .5 + b : this.easeOutBounce(x, t * 2 - d, 0, c, d) * .5 + c * .5 + b;\r\n                }\r\n            };\r\n            /*\r\n             *\r\n             * TERMS OF USE - EASING EQUATIONS\r\n             * \r\n             * Open source under the BSD License. \r\n             * \r\n             * Copyright Â© 2001 Robert Penner\r\n             * All rights reserved.\r\n             * \r\n             * Redistribution and use in source and binary forms, with or without modification, \r\n             * are permitted provided that the following conditions are met:\r\n             * \r\n             * Redistributions of source code must retain the above copyright notice, this list of \r\n             * conditions and the following disclaimer.\r\n             * Redistributions in binary form must reproduce the above copyright notice, this list \r\n             * of conditions and the following disclaimer in the documentation and/or other materials \r\n             * provided with the distribution.\r\n             * \r\n             * Neither the name of the author nor the names of contributors may be used to endorse \r\n             * or promote products derived from this software without specific prior written permission.\r\n             * \r\n             * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \r\n             * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\r\n             * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\r\n             *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\r\n             *  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE\r\n             *  GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED \r\n             * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\r\n             *  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED \r\n             * OF THE POSSIBILITY OF SUCH DAMAGE. \r\n             *\r\n             */\r\n        })();\r\n        var FRAMEWORK = (function () {\r\n            var _rnothtmlwhite = (/[^\\x20\\t\\r\\n\\f]+/g);\r\n            var _strSpace = ' ';\r\n            var _strEmpty = '';\r\n            var _strScrollLeft = 'scrollLeft';\r\n            var _strScrollTop = 'scrollTop';\r\n            var _animations = [];\r\n            var _type = COMPATIBILITY.type;\r\n            var _cssNumber = {\r\n                animationIterationCount: true,\r\n                columnCount: true,\r\n                fillOpacity: true,\r\n                flexGrow: true,\r\n                flexShrink: true,\r\n                fontWeight: true,\r\n                lineHeight: true,\r\n                opacity: true,\r\n                order: true,\r\n                orphans: true,\r\n                widows: true,\r\n                zIndex: true,\r\n                zoom: true\r\n            };\r\n\r\n            function extend() {\r\n                var src, copyIsArray, copy, name, options, clone, target = arguments[0] || {},\r\n                    i = 1,\r\n                    length = arguments[LEXICON.l],\r\n                    deep = false;\r\n\r\n                // Handle a deep copy situation\r\n                if (_type(target) == TYPES.b) {\r\n                    deep = target;\r\n                    target = arguments[1] || {};\r\n                    // skip the boolean and the target\r\n                    i = 2;\r\n                }\r\n\r\n                // Handle case when target is a string or something (possible in deep copy)\r\n                if (_type(target) != TYPES.o && !_type(target) == TYPES.f) {\r\n                    target = {};\r\n                }\r\n\r\n                // extend jQuery itself if only one argument is passed\r\n                if (length === i) {\r\n                    target = FakejQuery;\r\n                    --i;\r\n                }\r\n\r\n                for (; i < length; i++) {\r\n                    // Only deal with non-null/undefined values\r\n                    if ((options = arguments[i]) != null) {\r\n                        // Extend the base object\r\n                        for (name in options) {\r\n                            src = target[name];\r\n                            copy = options[name];\r\n\r\n                            // Prevent never-ending loop\r\n                            if (target === copy) {\r\n                                continue;\r\n                            }\r\n\r\n                            // Recurse if we're merging plain objects or arrays\r\n                            if (deep && copy && (isPlainObject(copy) || (copyIsArray = COMPATIBILITY.isA(copy)))) {\r\n                                if (copyIsArray) {\r\n                                    copyIsArray = false;\r\n                                    clone = src && COMPATIBILITY.isA(src) ? src : [];\r\n\r\n                                } else {\r\n                                    clone = src && isPlainObject(src) ? src : {};\r\n                                }\r\n\r\n                                // Never move original objects, clone them\r\n                                target[name] = extend(deep, clone, copy);\r\n\r\n                                // Don't bring in undefined values\r\n                            } else if (copy !== undefined) {\r\n                                target[name] = copy;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Return the modified object\r\n                return target;\r\n            };\r\n\r\n            function inArray(item, arr, fromIndex) {\r\n                for (var i = fromIndex || 0; i < arr[LEXICON.l]; i++)\r\n                    if (arr[i] === item)\r\n                        return i;\r\n                return -1;\r\n            }\r\n\r\n            function isFunction(obj) {\r\n                return _type(obj) == TYPES.f;\r\n            };\r\n\r\n            function isEmptyObject(obj) {\r\n                for (var name in obj)\r\n                    return false;\r\n                return true;\r\n            };\r\n\r\n            function isPlainObject(obj) {\r\n                if (!obj || _type(obj) != TYPES.o)\r\n                    return false;\r\n\r\n                var key;\r\n                var proto = LEXICON.p;\r\n                var hasOwnProperty = Object[proto].hasOwnProperty;\r\n                var hasOwnConstructor = hasOwnProperty.call(obj, 'constructor');\r\n                var hasIsPrototypeOf = obj.constructor && obj.constructor[proto] && hasOwnProperty.call(obj.constructor[proto], 'isPrototypeOf');\r\n\r\n                if (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\r\n                    return false;\r\n                }\r\n\r\n\r\n                for (key in obj) { /**/ }\r\n\r\n                return _type(key) == TYPES.u || hasOwnProperty.call(obj, key);\r\n            };\r\n\r\n            function each(obj, callback) {\r\n                var i = 0;\r\n\r\n                if (isArrayLike(obj)) {\r\n                    for (; i < obj[LEXICON.l]; i++) {\r\n                        if (callback.call(obj[i], i, obj[i]) === false)\r\n                            break;\r\n                    }\r\n                }\r\n                else {\r\n                    for (i in obj) {\r\n                        if (callback.call(obj[i], i, obj[i]) === false)\r\n                            break;\r\n                    }\r\n                }\r\n\r\n                return obj;\r\n            };\r\n\r\n            function isArrayLike(obj) {\r\n                var length = !!obj && [LEXICON.l] in obj && obj[LEXICON.l];\r\n                var t = _type(obj);\r\n                return isFunction(t) ? false : (t == TYPES.a || length === 0 || _type(length) == TYPES.n && length > 0 && (length - 1) in obj);\r\n            }\r\n\r\n            function stripAndCollapse(value) {\r\n                var tokens = value.match(_rnothtmlwhite) || [];\r\n                return tokens.join(_strSpace);\r\n            }\r\n\r\n            function matches(elem, selector) {\r\n                var nodeList = (elem.parentNode || document).querySelectorAll(selector) || [];\r\n                var i = nodeList[LEXICON.l];\r\n\r\n                while (i--)\r\n                    if (nodeList[i] == elem)\r\n                        return true;\r\n\r\n                return false;\r\n            }\r\n\r\n            function insertAdjacentElement(el, strategy, child) {\r\n                if (COMPATIBILITY.isA(child)) {\r\n                    for (var i = 0; i < child[LEXICON.l]; i++)\r\n                        insertAdjacentElement(el, strategy, child[i]);\r\n                }\r\n                else if (_type(child) == TYPES.s)\r\n                    el.insertAdjacentHTML(strategy, child);\r\n                else\r\n                    el.insertAdjacentElement(strategy, child.nodeType ? child : child[0]);\r\n            }\r\n\r\n            function setCSSVal(el, prop, val) {\r\n                try {\r\n                    if (el[LEXICON.s][prop] !== undefined)\r\n                        el[LEXICON.s][prop] = parseCSSVal(prop, val);\r\n                } catch (e) { }\r\n            }\r\n\r\n            function parseCSSVal(prop, val) {\r\n                if (!_cssNumber[prop.toLowerCase()] && _type(val) == TYPES.n)\r\n                    val += 'px';\r\n                return val;\r\n            }\r\n\r\n            function startNextAnimationInQ(animObj, removeFromQ) {\r\n                var index;\r\n                var nextAnim;\r\n                if (removeFromQ !== false)\r\n                    animObj.q.splice(0, 1);\r\n                if (animObj.q[LEXICON.l] > 0) {\r\n                    nextAnim = animObj.q[0];\r\n                    animate(animObj.el, nextAnim.props, nextAnim.duration, nextAnim.easing, nextAnim.complete, true);\r\n                }\r\n                else {\r\n                    index = inArray(animObj, _animations);\r\n                    if (index > -1)\r\n                        _animations.splice(index, 1);\r\n                }\r\n            }\r\n\r\n            function setAnimationValue(el, prop, value) {\r\n                if (prop === _strScrollLeft || prop === _strScrollTop)\r\n                    el[prop] = value;\r\n                else\r\n                    setCSSVal(el, prop, value);\r\n            }\r\n\r\n            function animate(el, props, options, easing, complete, guaranteedNext) {\r\n                var hasOptions = isPlainObject(options);\r\n                var from = {};\r\n                var to = {};\r\n                var i = 0;\r\n                var key;\r\n                var animObj;\r\n                var start;\r\n                var progress;\r\n                var step;\r\n                var specialEasing;\r\n                var duration;\r\n                if (hasOptions) {\r\n                    easing = options.easing;\r\n                    start = options.start;\r\n                    progress = options.progress;\r\n                    step = options.step;\r\n                    specialEasing = options.specialEasing;\r\n                    complete = options.complete;\r\n                    duration = options.duration;\r\n                }\r\n                else\r\n                    duration = options;\r\n                specialEasing = specialEasing || {};\r\n                duration = duration || 400;\r\n                easing = easing || 'swing';\r\n                guaranteedNext = guaranteedNext || false;\r\n\r\n                for (; i < _animations[LEXICON.l]; i++) {\r\n                    if (_animations[i].el === el) {\r\n                        animObj = _animations[i];\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!animObj) {\r\n                    animObj = {\r\n                        el: el,\r\n                        q: []\r\n                    };\r\n                    _animations.push(animObj);\r\n                }\r\n\r\n                for (key in props) {\r\n                    if (key === _strScrollLeft || key === _strScrollTop)\r\n                        from[key] = el[key];\r\n                    else\r\n                        from[key] = FakejQuery(el).css(key);\r\n                }\r\n\r\n                for (key in from) {\r\n                    if (from[key] !== props[key] && props[key] !== undefined)\r\n                        to[key] = props[key];\r\n                }\r\n\r\n                if (!isEmptyObject(to)) {\r\n                    var timeNow;\r\n                    var end;\r\n                    var percent;\r\n                    var fromVal;\r\n                    var toVal;\r\n                    var easedVal;\r\n                    var timeStart;\r\n                    var frame;\r\n                    var elapsed;\r\n                    var qPos = guaranteedNext ? 0 : inArray(qObj, animObj.q);\r\n                    var qObj = {\r\n                        props: to,\r\n                        duration: hasOptions ? options : duration,\r\n                        easing: easing,\r\n                        complete: complete\r\n                    };\r\n                    if (qPos === -1) {\r\n                        qPos = animObj.q[LEXICON.l];\r\n                        animObj.q.push(qObj);\r\n                    }\r\n\r\n                    if (qPos === 0) {\r\n                        if (duration > 0) {\r\n                            timeStart = COMPATIBILITY.now();\r\n                            frame = function () {\r\n                                timeNow = COMPATIBILITY.now();\r\n                                elapsed = (timeNow - timeStart);\r\n                                end = qObj.stop || elapsed >= duration;\r\n                                percent = 1 - ((MATH.max(0, timeStart + duration - timeNow) / duration) || 0);\r\n\r\n                                for (key in to) {\r\n                                    fromVal = parseFloat(from[key]);\r\n                                    toVal = parseFloat(to[key]);\r\n                                    easedVal = (toVal - fromVal) * EASING[specialEasing[key] || easing](percent, percent * duration, 0, 1, duration) + fromVal;\r\n                                    setAnimationValue(el, key, easedVal);\r\n                                    if (isFunction(step)) {\r\n                                        step(easedVal, {\r\n                                            elem: el,\r\n                                            prop: key,\r\n                                            start: fromVal,\r\n                                            now: easedVal,\r\n                                            end: toVal,\r\n                                            pos: percent,\r\n                                            options: {\r\n                                                easing: easing,\r\n                                                speacialEasing: specialEasing,\r\n                                                duration: duration,\r\n                                                complete: complete,\r\n                                                step: step\r\n                                            },\r\n                                            startTime: timeStart\r\n                                        });\r\n                                    }\r\n                                }\r\n\r\n                                if (isFunction(progress))\r\n                                    progress({}, percent, MATH.max(0, duration - elapsed));\r\n\r\n                                if (end) {\r\n                                    startNextAnimationInQ(animObj);\r\n                                    if (isFunction(complete))\r\n                                        complete();\r\n                                }\r\n                                else\r\n                                    qObj.frame = COMPATIBILITY.rAF()(frame);\r\n                            };\r\n                            qObj.frame = COMPATIBILITY.rAF()(frame);\r\n                        }\r\n                        else {\r\n                            for (key in to)\r\n                                setAnimationValue(el, key, to[key]);\r\n                            startNextAnimationInQ(animObj);\r\n                        }\r\n                    }\r\n                }\r\n                else if (guaranteedNext)\r\n                    startNextAnimationInQ(animObj);\r\n            }\r\n\r\n            function stop(el, clearQ, jumpToEnd) {\r\n                var animObj;\r\n                var qObj;\r\n                var key;\r\n                var i = 0;\r\n                for (; i < _animations[LEXICON.l]; i++) {\r\n                    animObj = _animations[i];\r\n                    if (animObj.el === el) {\r\n                        if (animObj.q[LEXICON.l] > 0) {\r\n                            qObj = animObj.q[0];\r\n                            qObj.stop = true;\r\n                            COMPATIBILITY.cAF()(qObj.frame);\r\n                            animObj.q.splice(0, 1);\r\n\r\n                            if (jumpToEnd)\r\n                                for (key in qObj.props)\r\n                                    setAnimationValue(el, key, qObj.props[key]);\r\n\r\n                            if (clearQ)\r\n                                animObj.q = [];\r\n                            else\r\n                                startNextAnimationInQ(animObj, false);\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            function elementIsVisible(el) {\r\n                return !!(el[LEXICON.oW] || el[LEXICON.oH] || el.getClientRects()[LEXICON.l]);\r\n            }\r\n\r\n            function FakejQuery(selector) {\r\n                if (arguments[LEXICON.l] === 0)\r\n                    return this;\r\n\r\n                var base = new FakejQuery();\r\n                var elements = selector;\r\n                var i = 0;\r\n                var elms;\r\n                var el;\r\n\r\n                if (_type(selector) == TYPES.s) {\r\n                    elements = [];\r\n                    if (selector.charAt(0) === '<') {\r\n                        el = document.createElement('div');\r\n                        el.innerHTML = selector;\r\n                        elms = el.children;\r\n                    }\r\n                    else {\r\n                        elms = document.querySelectorAll(selector);\r\n                    }\r\n\r\n                    for (; i < elms[LEXICON.l]; i++)\r\n                        elements.push(elms[i]);\r\n                }\r\n\r\n                if (elements) {\r\n                    if (_type(elements) != TYPES.s && (!isArrayLike(elements) || elements === window || elements === elements.self))\r\n                        elements = [elements];\r\n\r\n                    for (i = 0; i < elements[LEXICON.l]; i++)\r\n                        base[i] = elements[i];\r\n\r\n                    base[LEXICON.l] = elements[LEXICON.l];\r\n                }\r\n\r\n                return base;\r\n            };\r\n\r\n            FakejQuery[LEXICON.p] = {\r\n\r\n                //EVENTS:\r\n\r\n                on: function (eventName, handler) {\r\n                    eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\r\n\r\n                    var eventNameLength = eventName[LEXICON.l];\r\n                    var i = 0;\r\n                    var el;\r\n                    return this.each(function () {\r\n                        el = this;\r\n                        try {\r\n                            if (el.addEventListener) {\r\n                                for (; i < eventNameLength; i++)\r\n                                    el.addEventListener(eventName[i], handler);\r\n                            }\r\n                            else if (el.detachEvent) {\r\n                                for (; i < eventNameLength; i++)\r\n                                    el.attachEvent('on' + eventName[i], handler);\r\n                            }\r\n                        } catch (e) { }\r\n                    });\r\n                },\r\n\r\n                off: function (eventName, handler) {\r\n                    eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\r\n\r\n                    var eventNameLength = eventName[LEXICON.l];\r\n                    var i = 0;\r\n                    var el;\r\n                    return this.each(function () {\r\n                        el = this;\r\n                        try {\r\n                            if (el.removeEventListener) {\r\n                                for (; i < eventNameLength; i++)\r\n                                    el.removeEventListener(eventName[i], handler);\r\n                            }\r\n                            else if (el.detachEvent) {\r\n                                for (; i < eventNameLength; i++)\r\n                                    el.detachEvent('on' + eventName[i], handler);\r\n                            }\r\n                        } catch (e) { }\r\n                    });\r\n                },\r\n\r\n                one: function (eventName, handler) {\r\n                    eventName = (eventName || _strEmpty).match(_rnothtmlwhite) || [_strEmpty];\r\n                    return this.each(function () {\r\n                        var el = FakejQuery(this);\r\n                        FakejQuery.each(eventName, function (i, oneEventName) {\r\n                            var oneHandler = function (e) {\r\n                                handler.call(this, e);\r\n                                el.off(oneEventName, oneHandler);\r\n                            };\r\n                            el.on(oneEventName, oneHandler);\r\n                        });\r\n                    });\r\n                },\r\n\r\n                trigger: function (eventName) {\r\n                    var el;\r\n                    var event;\r\n                    return this.each(function () {\r\n                        el = this;\r\n                        if (document.createEvent) {\r\n                            event = document.createEvent('HTMLEvents');\r\n                            event.initEvent(eventName, true, false);\r\n                            el.dispatchEvent(event);\r\n                        }\r\n                        else {\r\n                            el.fireEvent('on' + eventName);\r\n                        }\r\n                    });\r\n                },\r\n\r\n                //DOM NODE INSERTING / REMOVING:\r\n\r\n                append: function (child) {\r\n                    return this.each(function () { insertAdjacentElement(this, 'beforeend', child); });\r\n                },\r\n\r\n                prepend: function (child) {\r\n                    return this.each(function () { insertAdjacentElement(this, 'afterbegin', child); });\r\n                },\r\n\r\n                before: function (child) {\r\n                    return this.each(function () { insertAdjacentElement(this, 'beforebegin', child); });\r\n                },\r\n\r\n                after: function (child) {\r\n                    return this.each(function () { insertAdjacentElement(this, 'afterend', child); });\r\n                },\r\n\r\n                remove: function () {\r\n                    return this.each(function () {\r\n                        var el = this;\r\n                        var parentNode = el.parentNode;\r\n                        if (parentNode != null)\r\n                            parentNode.removeChild(el);\r\n                    });\r\n                },\r\n\r\n                unwrap: function () {\r\n                    var parents = [];\r\n                    var i;\r\n                    var el;\r\n                    var parent;\r\n\r\n                    this.each(function () {\r\n                        parent = this.parentNode;\r\n                        if (inArray(parent, parents) === - 1)\r\n                            parents.push(parent);\r\n                    });\r\n\r\n                    for (i = 0; i < parents[LEXICON.l]; i++) {\r\n                        el = parents[i];\r\n                        parent = el.parentNode;\r\n                        while (el.firstChild)\r\n                            parent.insertBefore(el.firstChild, el);\r\n                        parent.removeChild(el);\r\n                    }\r\n\r\n                    return this;\r\n                },\r\n\r\n                wrapAll: function (wrapperHTML) {\r\n                    var i;\r\n                    var nodes = this;\r\n                    var wrapper = FakejQuery(wrapperHTML)[0];\r\n                    var deepest = wrapper;\r\n                    var parent = nodes[0].parentNode;\r\n                    var previousSibling = nodes[0].previousSibling;\r\n                    while (deepest.childNodes[LEXICON.l] > 0)\r\n                        deepest = deepest.childNodes[0];\r\n\r\n                    for (i = 0; nodes[LEXICON.l] - i; deepest.firstChild === nodes[0] && i++)\r\n                        deepest.appendChild(nodes[i]);\r\n\r\n                    var nextSibling = previousSibling ? previousSibling.nextSibling : parent.firstChild;\r\n                    parent.insertBefore(wrapper, nextSibling);\r\n\r\n                    return this;\r\n                },\r\n\r\n                wrapInner: function (wrapperHTML) {\r\n                    return this.each(function () {\r\n                        var el = FakejQuery(this);\r\n                        var contents = el.contents();\r\n\r\n                        if (contents[LEXICON.l])\r\n                            contents.wrapAll(wrapperHTML);\r\n                        else\r\n                            el.append(wrapperHTML);\r\n                    });\r\n                },\r\n\r\n                wrap: function (wrapperHTML) {\r\n                    return this.each(function () { FakejQuery(this).wrapAll(wrapperHTML); });\r\n                },\r\n\r\n\r\n                //DOM NODE MANIPULATION / INFORMATION:\r\n\r\n                css: function (styles, val) {\r\n                    var el;\r\n                    var key;\r\n                    var cptStyle;\r\n                    var getCptStyle = window.getComputedStyle;\r\n                    if (_type(styles) == TYPES.s) {\r\n                        if (val === undefined) {\r\n                            el = this[0];\r\n                            cptStyle = getCptStyle ? getCptStyle(el, null) : el.currentStyle[styles];\r\n\r\n                            //https://bugzilla.mozilla.org/show_bug.cgi?id=548397 can be null sometimes if iframe with display: none (firefox only!)\r\n                            return getCptStyle ? cptStyle != null ? cptStyle.getPropertyValue(styles) : el[LEXICON.s][styles] : cptStyle;\r\n                        }\r\n                        else {\r\n                            return this.each(function () {\r\n                                setCSSVal(this, styles, val);\r\n                            });\r\n                        }\r\n                    }\r\n                    else {\r\n                        return this.each(function () {\r\n                            for (key in styles)\r\n                                setCSSVal(this, key, styles[key]);\r\n                        });\r\n                    }\r\n                },\r\n\r\n                hasClass: function (className) {\r\n                    var elem, i = 0;\r\n                    var classNamePrepared = _strSpace + className + _strSpace;\r\n                    var classList;\r\n\r\n                    while ((elem = this[i++])) {\r\n                        classList = elem.classList;\r\n                        if (classList && classList.contains(className))\r\n                            return true;\r\n                        else if (elem.nodeType === 1 && (_strSpace + stripAndCollapse(elem.className + _strEmpty) + _strSpace).indexOf(classNamePrepared) > -1)\r\n                            return true;\r\n                    }\r\n\r\n                    return false;\r\n                },\r\n\r\n                addClass: function (className) {\r\n                    var classes;\r\n                    var elem;\r\n                    var cur;\r\n                    var curValue;\r\n                    var clazz;\r\n                    var finalValue;\r\n                    var supportClassList;\r\n                    var elmClassList;\r\n                    var i = 0;\r\n                    var v = 0;\r\n\r\n                    if (className) {\r\n                        classes = className.match(_rnothtmlwhite) || [];\r\n\r\n                        while ((elem = this[i++])) {\r\n                            elmClassList = elem.classList;\r\n                            if (supportClassList === undefined)\r\n                                supportClassList = elmClassList !== undefined;\r\n\r\n                            if (supportClassList) {\r\n                                while ((clazz = classes[v++]))\r\n                                    elmClassList.add(clazz);\r\n                            }\r\n                            else {\r\n                                curValue = elem.className + _strEmpty;\r\n                                cur = elem.nodeType === 1 && (_strSpace + stripAndCollapse(curValue) + _strSpace);\r\n\r\n                                if (cur) {\r\n                                    while ((clazz = classes[v++]))\r\n                                        if (cur.indexOf(_strSpace + clazz + _strSpace) < 0)\r\n                                            cur += clazz + _strSpace;\r\n\r\n                                    finalValue = stripAndCollapse(cur);\r\n                                    if (curValue !== finalValue)\r\n                                        elem.className = finalValue;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    return this;\r\n                },\r\n\r\n                removeClass: function (className) {\r\n                    var classes;\r\n                    var elem;\r\n                    var cur;\r\n                    var curValue;\r\n                    var clazz;\r\n                    var finalValue;\r\n                    var supportClassList;\r\n                    var elmClassList;\r\n                    var i = 0;\r\n                    var v = 0;\r\n\r\n                    if (className) {\r\n                        classes = className.match(_rnothtmlwhite) || [];\r\n\r\n                        while ((elem = this[i++])) {\r\n                            elmClassList = elem.classList;\r\n                            if (supportClassList === undefined)\r\n                                supportClassList = elmClassList !== undefined;\r\n\r\n                            if (supportClassList) {\r\n                                while ((clazz = classes[v++]))\r\n                                    elmClassList.remove(clazz);\r\n                            }\r\n                            else {\r\n                                curValue = elem.className + _strEmpty;\r\n                                cur = elem.nodeType === 1 && (_strSpace + stripAndCollapse(curValue) + _strSpace);\r\n\r\n                                if (cur) {\r\n                                    while ((clazz = classes[v++]))\r\n                                        while (cur.indexOf(_strSpace + clazz + _strSpace) > -1)\r\n                                            cur = cur.replace(_strSpace + clazz + _strSpace, _strSpace);\r\n\r\n                                    finalValue = stripAndCollapse(cur);\r\n                                    if (curValue !== finalValue)\r\n                                        elem.className = finalValue;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    return this;\r\n                },\r\n\r\n                hide: function () {\r\n                    return this.each(function () { this[LEXICON.s].display = 'none'; });\r\n                },\r\n\r\n                show: function () {\r\n                    return this.each(function () { this[LEXICON.s].display = 'block'; });\r\n                },\r\n\r\n                attr: function (attrName, value) {\r\n                    var i = 0;\r\n                    var el;\r\n                    while (el = this[i++]) {\r\n                        if (value === undefined)\r\n                            return el.getAttribute(attrName);\r\n                        el.setAttribute(attrName, value);\r\n                    }\r\n                    return this;\r\n                },\r\n\r\n                removeAttr: function (attrName) {\r\n                    return this.each(function () { this.removeAttribute(attrName); });\r\n                },\r\n\r\n                offset: function () {\r\n                    var el = this[0];\r\n                    var rect = el[LEXICON.bCR]();\r\n                    var scrollLeft = window.pageXOffset || document.documentElement[_strScrollLeft];\r\n                    var scrollTop = window.pageYOffset || document.documentElement[_strScrollTop];\r\n                    return {\r\n                        top: rect.top + scrollTop,\r\n                        left: rect.left + scrollLeft\r\n                    };\r\n                },\r\n\r\n                position: function () {\r\n                    var el = this[0];\r\n                    return {\r\n                        top: el.offsetTop,\r\n                        left: el.offsetLeft\r\n                    };\r\n                },\r\n\r\n                scrollLeft: function (value) {\r\n                    var i = 0;\r\n                    var el;\r\n                    while (el = this[i++]) {\r\n                        if (value === undefined)\r\n                            return el[_strScrollLeft];\r\n                        el[_strScrollLeft] = value;\r\n                    }\r\n                    return this;\r\n                },\r\n\r\n                scrollTop: function (value) {\r\n                    var i = 0;\r\n                    var el;\r\n                    while (el = this[i++]) {\r\n                        if (value === undefined)\r\n                            return el[_strScrollTop];\r\n                        el[_strScrollTop] = value;\r\n                    }\r\n                    return this;\r\n                },\r\n\r\n                val: function (value) {\r\n                    var el = this[0];\r\n                    if (!value)\r\n                        return el.value;\r\n                    el.value = value;\r\n                    return this;\r\n                },\r\n\r\n\r\n                //DOM TRAVERSAL / FILTERING:\r\n\r\n                first: function () {\r\n                    return this.eq(0);\r\n                },\r\n\r\n                last: function () {\r\n                    return this.eq(-1);\r\n                },\r\n\r\n                eq: function (index) {\r\n                    return FakejQuery(this[index >= 0 ? index : this[LEXICON.l] + index]);\r\n                },\r\n\r\n                find: function (selector) {\r\n                    var children = [];\r\n                    var i;\r\n                    this.each(function () {\r\n                        var el = this;\r\n                        var ch = el.querySelectorAll(selector);\r\n                        for (i = 0; i < ch[LEXICON.l]; i++)\r\n                            children.push(ch[i]);\r\n                    });\r\n                    return FakejQuery(children);\r\n                },\r\n\r\n                children: function (selector) {\r\n                    var children = [];\r\n                    var el;\r\n                    var ch;\r\n                    var i;\r\n\r\n                    this.each(function () {\r\n                        ch = this.children;\r\n                        for (i = 0; i < ch[LEXICON.l]; i++) {\r\n                            el = ch[i];\r\n                            if (selector) {\r\n                                if ((el.matches && el.matches(selector)) || matches(el, selector))\r\n                                    children.push(el);\r\n                            }\r\n                            else\r\n                                children.push(el);\r\n                        }\r\n                    });\r\n                    return FakejQuery(children);\r\n                },\r\n\r\n                parent: function (selector) {\r\n                    var parents = [];\r\n                    var parent;\r\n                    this.each(function () {\r\n                        parent = this.parentNode;\r\n                        if (selector ? FakejQuery(parent).is(selector) : true)\r\n                            parents.push(parent);\r\n                    });\r\n                    return FakejQuery(parents);\r\n                },\r\n\r\n                is: function (selector) {\r\n\r\n                    var el;\r\n                    var i;\r\n                    for (i = 0; i < this[LEXICON.l]; i++) {\r\n                        el = this[i];\r\n                        if (selector === ':visible')\r\n                            return elementIsVisible(el);\r\n                        if (selector === ':hidden')\r\n                            return !elementIsVisible(el);\r\n                        if ((el.matches && el.matches(selector)) || matches(el, selector))\r\n                            return true;\r\n                    }\r\n                    return false;\r\n                },\r\n\r\n                contents: function () {\r\n                    var contents = [];\r\n                    var childs;\r\n                    var i;\r\n\r\n                    this.each(function () {\r\n                        childs = this.childNodes;\r\n                        for (i = 0; i < childs[LEXICON.l]; i++)\r\n                            contents.push(childs[i]);\r\n                    });\r\n\r\n                    return FakejQuery(contents);\r\n                },\r\n\r\n                each: function (callback) {\r\n                    return each(this, callback);\r\n                },\r\n\r\n\r\n                //ANIMATION:\r\n\r\n                animate: function (props, duration, easing, complete) {\r\n                    return this.each(function () { animate(this, props, duration, easing, complete); });\r\n                },\r\n\r\n                stop: function (clearQ, jump) {\r\n                    return this.each(function () { stop(this, clearQ, jump); });\r\n                }\r\n            };\r\n\r\n            extend(FakejQuery, {\r\n                extend: extend,\r\n                inArray: inArray,\r\n                isEmptyObject: isEmptyObject,\r\n                isPlainObject: isPlainObject,\r\n                each: each\r\n            });\r\n\r\n            return FakejQuery;\r\n        })();\r\n        var INSTANCES = (function () {\r\n            var _targets = [];\r\n            var _instancePropertyString = '__overlayScrollbars__';\r\n\r\n            /**\r\n             * Register, unregister or get a certain (or all) instances.\r\n             * Register: Pass the target and the instance.\r\n             * Unregister: Pass the target and null.\r\n             * Get Instance: Pass the target from which the instance shall be got.\r\n             * Get Targets: Pass no arguments.\r\n             * @param target The target to which the instance shall be registered / from which the instance shall be unregistered / the instance shall be got\r\n             * @param instance The instance.\r\n             * @returns {*|void} Returns the instance from the given target.\r\n             */\r\n            return function (target, instance) {\r\n                var argLen = arguments[LEXICON.l];\r\n                if (argLen < 1) {\r\n                    //return all targets\r\n                    return _targets;\r\n                }\r\n                else {\r\n                    if (instance) {\r\n                        //register instance\r\n                        target[_instancePropertyString] = instance;\r\n                        _targets.push(target);\r\n                    }\r\n                    else {\r\n                        var index = COMPATIBILITY.inA(target, _targets);\r\n                        if (index > -1) {\r\n                            if (argLen > 1) {\r\n                                //unregister instance\r\n                                delete target[_instancePropertyString];\r\n                                _targets.splice(index, 1);\r\n                            }\r\n                            else {\r\n                                //get instance from target\r\n                                return _targets[index][_instancePropertyString];\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })();\r\n        var PLUGIN = (function () {\r\n            var _plugin;\r\n            var _pluginsGlobals;\r\n            var _pluginsAutoUpdateLoop;\r\n            var _pluginsExtensions = [];\r\n            var _pluginsOptions = (function () {\r\n                var type = COMPATIBILITY.type;\r\n                var possibleTemplateTypes = [\r\n                    TYPES.b, //boolean\r\n                    TYPES.n, //number\r\n                    TYPES.s, //string\r\n                    TYPES.a, //array\r\n                    TYPES.o, //object\r\n                    TYPES.f, //function\r\n                    TYPES.z  //null\r\n                ];\r\n                var restrictedStringsSplit = ' ';\r\n                var restrictedStringsPossibilitiesSplit = ':';\r\n                var classNameAllowedValues = [TYPES.z, TYPES.s];\r\n                var numberAllowedValues = TYPES.n;\r\n                var booleanNullAllowedValues = [TYPES.z, TYPES.b];\r\n                var booleanTrueTemplate = [true, TYPES.b];\r\n                var booleanFalseTemplate = [false, TYPES.b];\r\n                var callbackTemplate = [null, [TYPES.z, TYPES.f]];\r\n                var updateOnLoadTemplate = [['img'], [TYPES.s, TYPES.a, TYPES.z]];\r\n                var inheritedAttrsTemplate = [['style', 'class'], [TYPES.s, TYPES.a, TYPES.z]];\r\n                var resizeAllowedValues = 'n:none b:both h:horizontal v:vertical';\r\n                var overflowBehaviorAllowedValues = 'v-h:visible-hidden v-s:visible-scroll s:scroll h:hidden';\r\n                var scrollbarsVisibilityAllowedValues = 'v:visible h:hidden a:auto';\r\n                var scrollbarsAutoHideAllowedValues = 'n:never s:scroll l:leave m:move';\r\n                var optionsDefaultsAndTemplate = {\r\n                    className: ['os-theme-dark', classNameAllowedValues],                //null || string\r\n                    resize: ['none', resizeAllowedValues],                               //none || both  || horizontal || vertical || n || b || h || v\r\n                    sizeAutoCapable: booleanTrueTemplate,                                //true || false\r\n                    clipAlways: booleanTrueTemplate,                                     //true || false\r\n                    normalizeRTL: booleanTrueTemplate,                                   //true || false\r\n                    paddingAbsolute: booleanFalseTemplate,                               //true || false\r\n                    autoUpdate: [null, booleanNullAllowedValues],                        //true || false || null\r\n                    autoUpdateInterval: [33, numberAllowedValues],                       //number\r\n                    updateOnLoad: updateOnLoadTemplate,                                  //string || array || null\r\n                    nativeScrollbarsOverlaid: {\r\n                        showNativeScrollbars: booleanFalseTemplate,                      //true || false\r\n                        initialize: booleanTrueTemplate                                  //true || false\r\n                    },\r\n                    overflowBehavior: {\r\n                        x: ['scroll', overflowBehaviorAllowedValues],                    //visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\r\n                        y: ['scroll', overflowBehaviorAllowedValues]                     //visible-hidden  || visible-scroll || hidden || scroll || v-h || v-s || h || s\r\n                    },\r\n                    scrollbars: {\r\n                        visibility: ['auto', scrollbarsVisibilityAllowedValues],         //visible || hidden || auto || v || h || a\r\n                        autoHide: ['never', scrollbarsAutoHideAllowedValues],            //never || scroll || leave || move || n || s || l || m\r\n                        autoHideDelay: [800, numberAllowedValues],                       //number\r\n                        dragScrolling: booleanTrueTemplate,                              //true || false\r\n                        clickScrolling: booleanFalseTemplate,                            //true || false\r\n                        touchSupport: booleanTrueTemplate,                               //true || false\r\n                        snapHandle: booleanFalseTemplate                                 //true || false\r\n                    },\r\n                    textarea: {\r\n                        dynWidth: booleanFalseTemplate,                                  //true || false\r\n                        dynHeight: booleanFalseTemplate,                                 //true || false\r\n                        inheritedAttrs: inheritedAttrsTemplate                           //string || array || null\r\n                    },\r\n                    callbacks: {\r\n                        onInitialized: callbackTemplate,                                 //null || function\r\n                        onInitializationWithdrawn: callbackTemplate,                     //null || function\r\n                        onDestroyed: callbackTemplate,                                   //null || function\r\n                        onScrollStart: callbackTemplate,                                 //null || function\r\n                        onScroll: callbackTemplate,                                      //null || function\r\n                        onScrollStop: callbackTemplate,                                  //null || function\r\n                        onOverflowChanged: callbackTemplate,                             //null || function\r\n                        onOverflowAmountChanged: callbackTemplate,                       //null || function\r\n                        onDirectionChanged: callbackTemplate,                            //null || function\r\n                        onContentSizeChanged: callbackTemplate,                          //null || function\r\n                        onHostSizeChanged: callbackTemplate,                             //null || function\r\n                        onUpdated: callbackTemplate                                      //null || function\r\n                    }\r\n                };\r\n                var convert = function (template) {\r\n                    var recursive = function (obj) {\r\n                        var key;\r\n                        var val;\r\n                        var valType;\r\n                        for (key in obj) {\r\n                            if (!obj[LEXICON.hOP](key))\r\n                                continue;\r\n                            val = obj[key];\r\n                            valType = type(val);\r\n                            if (valType == TYPES.a)\r\n                                obj[key] = val[template ? 1 : 0];\r\n                            else if (valType == TYPES.o)\r\n                                obj[key] = recursive(val);\r\n                        }\r\n                        return obj;\r\n                    };\r\n                    return recursive(FRAMEWORK.extend(true, {}, optionsDefaultsAndTemplate));\r\n                };\r\n\r\n                return {\r\n                    _defaults: convert(),\r\n\r\n                    _template: convert(true),\r\n\r\n                    /**\r\n                     * Validates the passed object by the passed template.\r\n                     * @param obj The object which shall be validated.\r\n                     * @param template The template which defines the allowed values and types.\r\n                     * @param writeErrors True if errors shall be logged to the console.\r\n                     * @param diffObj If a object is passed then only valid differences to this object will be returned.\r\n                     * @returns {{}} A object which contains two objects called \"default\" and \"prepared\" which contains only the valid properties of the passed original object and discards not different values compared to the passed diffObj.\r\n                     */\r\n                    _validate: function (obj, template, writeErrors, diffObj) {\r\n                        var validatedOptions = {};\r\n                        var validatedOptionsPrepared = {};\r\n                        var objectCopy = FRAMEWORK.extend(true, {}, obj);\r\n                        var inArray = FRAMEWORK.inArray;\r\n                        var isEmptyObj = FRAMEWORK.isEmptyObject;\r\n                        var checkObjectProps = function (data, template, diffData, validatedOptions, validatedOptionsPrepared, prevPropName) {\r\n                            for (var prop in template) {\r\n                                if (template[LEXICON.hOP](prop) && data[LEXICON.hOP](prop)) {\r\n                                    var isValid = false;\r\n                                    var isDiff = false;\r\n                                    var templateValue = template[prop];\r\n                                    var templateValueType = type(templateValue);\r\n                                    var templateIsComplex = templateValueType == TYPES.o;\r\n                                    var templateTypes = !COMPATIBILITY.isA(templateValue) ? [templateValue] : templateValue;\r\n                                    var dataDiffValue = diffData[prop];\r\n                                    var dataValue = data[prop];\r\n                                    var dataValueType = type(dataValue);\r\n                                    var propPrefix = prevPropName ? prevPropName + '.' : '';\r\n                                    var error = \"The option \\\"\" + propPrefix + prop + \"\\\" wasn't set, because\";\r\n                                    var errorPossibleTypes = [];\r\n                                    var errorRestrictedStrings = [];\r\n                                    var restrictedStringValuesSplit;\r\n                                    var restrictedStringValuesPossibilitiesSplit;\r\n                                    var isRestrictedValue;\r\n                                    var mainPossibility;\r\n                                    var currType;\r\n                                    var i;\r\n                                    var v;\r\n                                    var j;\r\n\r\n                                    dataDiffValue = dataDiffValue === undefined ? {} : dataDiffValue;\r\n\r\n                                    //if the template has a object as value, it means that the options are complex (verschachtelt)\r\n                                    if (templateIsComplex && dataValueType == TYPES.o) {\r\n                                        validatedOptions[prop] = {};\r\n                                        validatedOptionsPrepared[prop] = {};\r\n                                        checkObjectProps(dataValue, templateValue, dataDiffValue, validatedOptions[prop], validatedOptionsPrepared[prop], propPrefix + prop);\r\n                                        FRAMEWORK.each([data, validatedOptions, validatedOptionsPrepared], function (index, value) {\r\n                                            if (isEmptyObj(value[prop])) {\r\n                                                delete value[prop];\r\n                                            }\r\n                                        });\r\n                                    }\r\n                                    else if (!templateIsComplex) {\r\n                                        for (i = 0; i < templateTypes[LEXICON.l]; i++) {\r\n                                            currType = templateTypes[i];\r\n                                            templateValueType = type(currType);\r\n                                            //if currtype is string and starts with restrictedStringPrefix and end with restrictedStringSuffix\r\n                                            isRestrictedValue = templateValueType == TYPES.s && inArray(currType, possibleTemplateTypes) === -1;\r\n                                            if (isRestrictedValue) {\r\n                                                errorPossibleTypes.push(TYPES.s);\r\n\r\n                                                //split it into a array which contains all possible values for example: [\"y:yes\", \"n:no\", \"m:maybe\"]\r\n                                                restrictedStringValuesSplit = currType.split(restrictedStringsSplit);\r\n                                                errorRestrictedStrings = errorRestrictedStrings.concat(restrictedStringValuesSplit);\r\n                                                for (v = 0; v < restrictedStringValuesSplit[LEXICON.l]; v++) {\r\n                                                    //split the possible values into their possibiliteis for example: [\"y\", \"yes\"] -> the first is always the mainPossibility\r\n                                                    restrictedStringValuesPossibilitiesSplit = restrictedStringValuesSplit[v].split(restrictedStringsPossibilitiesSplit);\r\n                                                    mainPossibility = restrictedStringValuesPossibilitiesSplit[0];\r\n                                                    for (j = 0; j < restrictedStringValuesPossibilitiesSplit[LEXICON.l]; j++) {\r\n                                                        //if any possibility matches with the dataValue, its valid\r\n                                                        if (dataValue === restrictedStringValuesPossibilitiesSplit[j]) {\r\n                                                            isValid = true;\r\n                                                            break;\r\n                                                        }\r\n                                                    }\r\n                                                    if (isValid)\r\n                                                        break;\r\n                                                }\r\n                                            }\r\n                                            else {\r\n                                                errorPossibleTypes.push(currType);\r\n\r\n                                                if (dataValueType === currType) {\r\n                                                    isValid = true;\r\n                                                    break;\r\n                                                }\r\n                                            }\r\n                                        }\r\n\r\n                                        if (isValid) {\r\n                                            isDiff = dataValue !== dataDiffValue;\r\n\r\n                                            if (isDiff)\r\n                                                validatedOptions[prop] = dataValue;\r\n\r\n                                            if (isRestrictedValue ? inArray(dataDiffValue, restrictedStringValuesPossibilitiesSplit) < 0 : isDiff)\r\n                                                validatedOptionsPrepared[prop] = isRestrictedValue ? mainPossibility : dataValue;\r\n                                        }\r\n                                        else if (writeErrors) {\r\n                                            console.warn(error + \" it doesn't accept the type [ \" + dataValueType.toUpperCase() + \" ] with the value of \\\"\" + dataValue + \"\\\".\\r\\n\" +\r\n                                                \"Accepted types are: [ \" + errorPossibleTypes.join(', ').toUpperCase() + \" ].\" +\r\n                                                (errorRestrictedStrings[length] > 0 ? \"\\r\\nValid strings are: [ \" + errorRestrictedStrings.join(', ').split(restrictedStringsPossibilitiesSplit).join(', ') + \" ].\" : ''));\r\n                                        }\r\n                                        delete data[prop];\r\n                                    }\r\n                                }\r\n                            }\r\n                        };\r\n                        checkObjectProps(objectCopy, template, diffObj || {}, validatedOptions, validatedOptionsPrepared);\r\n\r\n                        //add values which aren't specified in the template to the finished validated object to prevent them from being discarded\r\n                        /*\r\n                        if(keepForeignProps) {\r\n                            FRAMEWORK.extend(true, validatedOptions, objectCopy);\r\n                            FRAMEWORK.extend(true, validatedOptionsPrepared, objectCopy);\r\n                        }\r\n                        */\r\n\r\n                        if (!isEmptyObj(objectCopy) && writeErrors)\r\n                            console.warn('The following options are discarded due to invalidity:\\r\\n' + window.JSON.stringify(objectCopy, null, 2));\r\n\r\n                        return {\r\n                            _default: validatedOptions,\r\n                            _prepared: validatedOptionsPrepared\r\n                        };\r\n                    }\r\n                }\r\n            }());\r\n\r\n            /**\r\n             * Initializes the object which contains global information about the plugin and each instance of it.\r\n             */\r\n            function initOverlayScrollbarsStatics() {\r\n                if (!_pluginsGlobals)\r\n                    _pluginsGlobals = new OverlayScrollbarsGlobals(_pluginsOptions._defaults);\r\n                if (!_pluginsAutoUpdateLoop)\r\n                    _pluginsAutoUpdateLoop = new OverlayScrollbarsAutoUpdateLoop(_pluginsGlobals);\r\n            }\r\n\r\n            /**\r\n             * The global object for the OverlayScrollbars objects. It contains resources which every OverlayScrollbars object needs. This object is initialized only once: if the first OverlayScrollbars object gets initialized.\r\n             * @param defaultOptions\r\n             * @constructor\r\n             */\r\n            function OverlayScrollbarsGlobals(defaultOptions) {\r\n                var _base = this;\r\n                var strOverflow = 'overflow';\r\n                var strHidden = 'hidden';\r\n                var strScroll = 'scroll';\r\n                var bodyElement = FRAMEWORK('body');\r\n                var scrollbarDummyElement = FRAMEWORK('<div id=\"os-dummy-scrollbar-size\"><div></div></div>');\r\n                var scrollbarDummyElement0 = scrollbarDummyElement[0];\r\n                var dummyContainerChild = FRAMEWORK(scrollbarDummyElement.children('div').eq(0));\r\n\r\n                bodyElement.append(scrollbarDummyElement);\r\n                scrollbarDummyElement.hide().show(); //fix IE8 bug (incorrect measuring)\r\n\r\n                var nativeScrollbarSize = calcNativeScrollbarSize(scrollbarDummyElement0);\r\n                var nativeScrollbarIsOverlaid = {\r\n                    x: nativeScrollbarSize.x === 0,\r\n                    y: nativeScrollbarSize.y === 0\r\n                };\r\n                var msie = (function () {\r\n                    var ua = window.navigator.userAgent;\r\n                    var strIndexOf = 'indexOf';\r\n                    var strSubString = 'substring';\r\n                    var msie = ua[strIndexOf]('MSIE ');\r\n                    var trident = ua[strIndexOf]('Trident/');\r\n                    var edge = ua[strIndexOf]('Edge/');\r\n                    var rv = ua[strIndexOf]('rv:');\r\n                    var result;\r\n                    var parseIntFunc = parseInt;\r\n\r\n                    // IE 10 or older => return version number\r\n                    if (msie > 0)\r\n                        result = parseIntFunc(ua[strSubString](msie + 5, ua[strIndexOf]('.', msie)), 10);\r\n\r\n                    // IE 11 => return version number\r\n                    else if (trident > 0)\r\n                        result = parseIntFunc(ua[strSubString](rv + 3, ua[strIndexOf]('.', rv)), 10);\r\n\r\n                    // Edge (IE 12+) => return version number\r\n                    else if (edge > 0)\r\n                        result = parseIntFunc(ua[strSubString](edge + 5, ua[strIndexOf]('.', edge)), 10);\r\n\r\n                    // other browser\r\n                    return result;\r\n                })();\r\n\r\n                FRAMEWORK.extend(_base, {\r\n                    defaultOptions: defaultOptions,\r\n                    msie: msie,\r\n                    autoUpdateLoop: false,\r\n                    autoUpdateRecommended: !COMPATIBILITY.mO(),\r\n                    nativeScrollbarSize: nativeScrollbarSize,\r\n                    nativeScrollbarIsOverlaid: nativeScrollbarIsOverlaid,\r\n                    nativeScrollbarStyling: (function () {\r\n                        var result = false;\r\n                        scrollbarDummyElement.addClass('os-viewport-native-scrollbars-invisible');\r\n                        try {\r\n                            result = (scrollbarDummyElement.css('scrollbar-width') === 'none' && (msie > 9 || !msie)) || window.getComputedStyle(scrollbarDummyElement0, '::-webkit-scrollbar').getPropertyValue('display') === 'none';\r\n                        } catch (ex) { }\r\n\r\n                        //fix opera bug: scrollbar styles will only appear if overflow value is scroll or auto during the activation of the style.\r\n                        //and set overflow to scroll\r\n                        //scrollbarDummyElement.css(strOverflow, strHidden).hide().css(strOverflow, strScroll).show();\r\n                        //return (scrollbarDummyElement0[LEXICON.oH] - scrollbarDummyElement0[LEXICON.cH]) === 0 && (scrollbarDummyElement0[LEXICON.oW] - scrollbarDummyElement0[LEXICON.cW]) === 0;\r\n\r\n                        return result;\r\n                    })(),\r\n                    overlayScrollbarDummySize: { x: 30, y: 30 },\r\n                    cssCalc: VENDORS._cssPropertyValue('width', 'calc', '(1px)') || null,\r\n                    restrictedMeasuring: (function () {\r\n                        //https://bugzilla.mozilla.org/show_bug.cgi?id=1439305\r\n                        //since 1.11.0 always false -> fixed via CSS (hopefully)\r\n                        scrollbarDummyElement.css(strOverflow, strHidden);\r\n                        var scrollSize = {\r\n                            w: scrollbarDummyElement0[LEXICON.sW],\r\n                            h: scrollbarDummyElement0[LEXICON.sH]\r\n                        };\r\n                        scrollbarDummyElement.css(strOverflow, 'visible');\r\n                        var scrollSize2 = {\r\n                            w: scrollbarDummyElement0[LEXICON.sW],\r\n                            h: scrollbarDummyElement0[LEXICON.sH]\r\n                        };\r\n                        return (scrollSize.w - scrollSize2.w) !== 0 || (scrollSize.h - scrollSize2.h) !== 0;\r\n                    })(),\r\n                    rtlScrollBehavior: (function () {\r\n                        scrollbarDummyElement.css({ 'overflow-y': strHidden, 'overflow-x': strScroll, 'direction': 'rtl' }).scrollLeft(0);\r\n                        var dummyContainerOffset = scrollbarDummyElement.offset();\r\n                        var dummyContainerChildOffset = dummyContainerChild.offset();\r\n                        //https://github.com/KingSora/OverlayScrollbars/issues/187\r\n                        scrollbarDummyElement.scrollLeft(-999);\r\n                        var dummyContainerChildOffsetAfterScroll = dummyContainerChild.offset();\r\n                        return {\r\n                            //origin direction = determines if the zero scroll position is on the left or right side\r\n                            //'i' means 'invert' (i === true means that the axis must be inverted to be correct)\r\n                            //true = on the left side\r\n                            //false = on the right side\r\n                            i: dummyContainerOffset.left === dummyContainerChildOffset.left,\r\n                            //negative = determines if the maximum scroll is positive or negative\r\n                            //'n' means 'negate' (n === true means that the axis must be negated to be correct)\r\n                            //true = negative\r\n                            //false = positive\r\n                            n: dummyContainerChildOffset.left !== dummyContainerChildOffsetAfterScroll.left\r\n                        };\r\n                    })(),\r\n                    supportTransform: !!VENDORS._cssProperty('transform'),\r\n                    supportTransition: !!VENDORS._cssProperty('transition'),\r\n                    supportPassiveEvents: (function () {\r\n                        var supportsPassive = false;\r\n                        try {\r\n                            window.addEventListener('test', null, Object.defineProperty({}, 'passive', {\r\n                                get: function () {\r\n                                    supportsPassive = true;\r\n                                }\r\n                            }));\r\n                        } catch (e) { }\r\n                        return supportsPassive;\r\n                    })(),\r\n                    supportResizeObserver: !!COMPATIBILITY.rO(),\r\n                    supportMutationObserver: !!COMPATIBILITY.mO()\r\n                });\r\n\r\n                scrollbarDummyElement.removeAttr(LEXICON.s).remove();\r\n\r\n                //Catch zoom event:\r\n                (function () {\r\n                    if (nativeScrollbarIsOverlaid.x && nativeScrollbarIsOverlaid.y)\r\n                        return;\r\n\r\n                    var abs = MATH.abs;\r\n                    var windowWidth = COMPATIBILITY.wW();\r\n                    var windowHeight = COMPATIBILITY.wH();\r\n                    var windowDpr = getWindowDPR();\r\n                    var onResize = function () {\r\n                        if (INSTANCES().length > 0) {\r\n                            var newW = COMPATIBILITY.wW();\r\n                            var newH = COMPATIBILITY.wH();\r\n                            var deltaW = newW - windowWidth;\r\n                            var deltaH = newH - windowHeight;\r\n\r\n                            if (deltaW === 0 && deltaH === 0)\r\n                                return;\r\n\r\n                            var deltaWRatio = MATH.round(newW / (windowWidth / 100.0));\r\n                            var deltaHRatio = MATH.round(newH / (windowHeight / 100.0));\r\n                            var absDeltaW = abs(deltaW);\r\n                            var absDeltaH = abs(deltaH);\r\n                            var absDeltaWRatio = abs(deltaWRatio);\r\n                            var absDeltaHRatio = abs(deltaHRatio);\r\n                            var newDPR = getWindowDPR();\r\n\r\n                            var deltaIsBigger = absDeltaW > 2 && absDeltaH > 2;\r\n                            var difference = !differenceIsBiggerThanOne(absDeltaWRatio, absDeltaHRatio);\r\n                            var dprChanged = newDPR !== windowDpr && windowDpr > 0;\r\n                            var isZoom = deltaIsBigger && difference && dprChanged;\r\n                            var oldScrollbarSize = _base.nativeScrollbarSize;\r\n                            var newScrollbarSize;\r\n\r\n                            if (isZoom) {\r\n                                bodyElement.append(scrollbarDummyElement);\r\n                                newScrollbarSize = _base.nativeScrollbarSize = calcNativeScrollbarSize(scrollbarDummyElement[0]);\r\n                                scrollbarDummyElement.remove();\r\n                                if (oldScrollbarSize.x !== newScrollbarSize.x || oldScrollbarSize.y !== newScrollbarSize.y) {\r\n                                    FRAMEWORK.each(INSTANCES(), function () {\r\n                                        if (INSTANCES(this))\r\n                                            INSTANCES(this).update('zoom');\r\n                                    });\r\n                                }\r\n                            }\r\n\r\n                            windowWidth = newW;\r\n                            windowHeight = newH;\r\n                            windowDpr = newDPR;\r\n                        }\r\n                    };\r\n\r\n                    function differenceIsBiggerThanOne(valOne, valTwo) {\r\n                        var absValOne = abs(valOne);\r\n                        var absValTwo = abs(valTwo);\r\n                        return !(absValOne === absValTwo || absValOne + 1 === absValTwo || absValOne - 1 === absValTwo);\r\n                    }\r\n\r\n                    function getWindowDPR() {\r\n                        var dDPI = window.screen.deviceXDPI || 0;\r\n                        var sDPI = window.screen.logicalXDPI || 1;\r\n                        return window.devicePixelRatio || (dDPI / sDPI);\r\n                    }\r\n\r\n                    FRAMEWORK(window).on('resize', onResize);\r\n                })();\r\n\r\n                function calcNativeScrollbarSize(measureElement) {\r\n                    return {\r\n                        x: measureElement[LEXICON.oH] - measureElement[LEXICON.cH],\r\n                        y: measureElement[LEXICON.oW] - measureElement[LEXICON.cW]\r\n                    };\r\n                }\r\n            }\r\n\r\n            /**\r\n             * The object which manages the auto update loop for all OverlayScrollbars objects. This object is initialized only once: if the first OverlayScrollbars object gets initialized.\r\n             * @constructor\r\n             */\r\n            function OverlayScrollbarsAutoUpdateLoop(globals) {\r\n                var _base = this;\r\n                var _inArray = FRAMEWORK.inArray;\r\n                var _getNow = COMPATIBILITY.now;\r\n                var _strAutoUpdate = 'autoUpdate';\r\n                var _strAutoUpdateInterval = _strAutoUpdate + 'Interval';\r\n                var _strLength = LEXICON.l;\r\n                var _loopingInstances = [];\r\n                var _loopingInstancesIntervalCache = [];\r\n                var _loopIsActive = false;\r\n                var _loopIntervalDefault = 33;\r\n                var _loopInterval = _loopIntervalDefault;\r\n                var _loopTimeOld = _getNow();\r\n                var _loopID;\r\n\r\n\r\n                /**\r\n                 * The auto update loop which will run every 50 milliseconds or less if the update interval of a instance is lower than 50 milliseconds.\r\n                 */\r\n                var loop = function () {\r\n                    if (_loopingInstances[_strLength] > 0 && _loopIsActive) {\r\n                        _loopID = COMPATIBILITY.rAF()(function () {\r\n                            loop();\r\n                        });\r\n                        var timeNew = _getNow();\r\n                        var timeDelta = timeNew - _loopTimeOld;\r\n                        var lowestInterval;\r\n                        var instance;\r\n                        var instanceOptions;\r\n                        var instanceAutoUpdateAllowed;\r\n                        var instanceAutoUpdateInterval;\r\n                        var now;\r\n\r\n                        if (timeDelta > _loopInterval) {\r\n                            _loopTimeOld = timeNew - (timeDelta % _loopInterval);\r\n                            lowestInterval = _loopIntervalDefault;\r\n                            for (var i = 0; i < _loopingInstances[_strLength]; i++) {\r\n                                instance = _loopingInstances[i];\r\n                                if (instance !== undefined) {\r\n                                    instanceOptions = instance.options();\r\n                                    instanceAutoUpdateAllowed = instanceOptions[_strAutoUpdate];\r\n                                    instanceAutoUpdateInterval = MATH.max(1, instanceOptions[_strAutoUpdateInterval]);\r\n                                    now = _getNow();\r\n\r\n                                    if ((instanceAutoUpdateAllowed === true || instanceAutoUpdateAllowed === null) && (now - _loopingInstancesIntervalCache[i]) > instanceAutoUpdateInterval) {\r\n                                        instance.update('auto');\r\n                                        _loopingInstancesIntervalCache[i] = new Date(now += instanceAutoUpdateInterval);\r\n                                    }\r\n\r\n                                    lowestInterval = MATH.max(1, MATH.min(lowestInterval, instanceAutoUpdateInterval));\r\n                                }\r\n                            }\r\n                            _loopInterval = lowestInterval;\r\n                        }\r\n                    } else {\r\n                        _loopInterval = _loopIntervalDefault;\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Add OverlayScrollbars instance to the auto update loop. Only successful if the instance isn't already added.\r\n                 * @param instance The instance which shall be updated in a loop automatically.\r\n                 */\r\n                _base.add = function (instance) {\r\n                    if (_inArray(instance, _loopingInstances) === -1) {\r\n                        _loopingInstances.push(instance);\r\n                        _loopingInstancesIntervalCache.push(_getNow());\r\n                        if (_loopingInstances[_strLength] > 0 && !_loopIsActive) {\r\n                            _loopIsActive = true;\r\n                            globals.autoUpdateLoop = _loopIsActive;\r\n                            loop();\r\n                        }\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Remove OverlayScrollbars instance from the auto update loop. Only successful if the instance was added before.\r\n                 * @param instance The instance which shall be updated in a loop automatically.\r\n                 */\r\n                _base.remove = function (instance) {\r\n                    var index = _inArray(instance, _loopingInstances);\r\n                    if (index > -1) {\r\n                        //remove from loopingInstances list\r\n                        _loopingInstancesIntervalCache.splice(index, 1);\r\n                        _loopingInstances.splice(index, 1);\r\n\r\n                        //correct update loop behavior\r\n                        if (_loopingInstances[_strLength] === 0 && _loopIsActive) {\r\n                            _loopIsActive = false;\r\n                            globals.autoUpdateLoop = _loopIsActive;\r\n                            if (_loopID !== undefined) {\r\n                                COMPATIBILITY.cAF()(_loopID);\r\n                                _loopID = -1;\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            }\r\n\r\n            /**\r\n             * A object which manages the scrollbars visibility of the target element.\r\n             * @param pluginTargetElement The element from which the scrollbars shall be hidden.\r\n             * @param options The custom options.\r\n             * @param extensions The custom extensions.\r\n             * @param globals\r\n             * @param autoUpdateLoop\r\n             * @returns {*}\r\n             * @constructor\r\n             */\r\n            function OverlayScrollbarsInstance(pluginTargetElement, options, extensions, globals, autoUpdateLoop) {\r\n                //shortcuts\r\n                var type = COMPATIBILITY.type;\r\n                var inArray = FRAMEWORK.inArray;\r\n                var each = FRAMEWORK.each;\r\n\r\n                //make correct instanceof\r\n                var _base = new _plugin();\r\n                var _frameworkProto = FRAMEWORK[LEXICON.p];\r\n\r\n                //if passed element is no HTML element: skip and return\r\n                if (!isHTMLElement(pluginTargetElement))\r\n                    return;\r\n\r\n                //if passed element is already initialized: set passed options if there are any and return its instance\r\n                if (INSTANCES(pluginTargetElement)) {\r\n                    var inst = INSTANCES(pluginTargetElement);\r\n                    inst.options(options);\r\n                    return inst;\r\n                }\r\n\r\n                //globals:\r\n                var _nativeScrollbarIsOverlaid;\r\n                var _overlayScrollbarDummySize;\r\n                var _rtlScrollBehavior;\r\n                var _autoUpdateRecommended;\r\n                var _msieVersion;\r\n                var _nativeScrollbarStyling;\r\n                var _cssCalc;\r\n                var _nativeScrollbarSize;\r\n                var _supportTransition;\r\n                var _supportTransform;\r\n                var _supportPassiveEvents;\r\n                var _supportResizeObserver;\r\n                var _supportMutationObserver;\r\n                var _restrictedMeasuring;\r\n\r\n                //general readonly:\r\n                var _initialized;\r\n                var _destroyed;\r\n                var _isTextarea;\r\n                var _isBody;\r\n                var _documentMixed;\r\n                var _domExists;\r\n\r\n                //general:\r\n                var _isBorderBox;\r\n                var _sizeAutoObserverAdded;\r\n                var _paddingX;\r\n                var _paddingY;\r\n                var _borderX;\r\n                var _borderY;\r\n                var _marginX;\r\n                var _marginY;\r\n                var _isRTL;\r\n                var _sleeping;\r\n                var _contentBorderSize = {};\r\n                var _scrollHorizontalInfo = {};\r\n                var _scrollVerticalInfo = {};\r\n                var _viewportSize = {};\r\n                var _nativeScrollbarMinSize = {};\r\n\r\n                //naming:\t\r\n                var _strMinusHidden = '-hidden';\r\n                var _strMarginMinus = 'margin-';\r\n                var _strPaddingMinus = 'padding-';\r\n                var _strBorderMinus = 'border-';\r\n                var _strTop = 'top';\r\n                var _strRight = 'right';\r\n                var _strBottom = 'bottom';\r\n                var _strLeft = 'left';\r\n                var _strMinMinus = 'min-';\r\n                var _strMaxMinus = 'max-';\r\n                var _strWidth = 'width';\r\n                var _strHeight = 'height';\r\n                var _strFloat = 'float';\r\n                var _strEmpty = '';\r\n                var _strAuto = 'auto';\r\n                var _strSync = 'sync';\r\n                var _strScroll = 'scroll';\r\n                var _strHundredPercent = '100%';\r\n                var _strX = 'x';\r\n                var _strY = 'y';\r\n                var _strDot = '.';\r\n                var _strSpace = ' ';\r\n                var _strScrollbar = 'scrollbar';\r\n                var _strMinusHorizontal = '-horizontal';\r\n                var _strMinusVertical = '-vertical';\r\n                var _strScrollLeft = _strScroll + 'Left';\r\n                var _strScrollTop = _strScroll + 'Top';\r\n                var _strMouseTouchDownEvent = 'mousedown touchstart';\r\n                var _strMouseTouchUpEvent = 'mouseup touchend touchcancel';\r\n                var _strMouseTouchMoveEvent = 'mousemove touchmove';\r\n                var _strMouseEnter = 'mouseenter';\r\n                var _strMouseLeave = 'mouseleave';\r\n                var _strKeyDownEvent = 'keydown';\r\n                var _strKeyUpEvent = 'keyup';\r\n                var _strSelectStartEvent = 'selectstart';\r\n                var _strTransitionEndEvent = 'transitionend webkitTransitionEnd oTransitionEnd';\r\n                var _strResizeObserverProperty = '__overlayScrollbarsRO__';\r\n\r\n                //class names:\t\r\n                var _cassNamesPrefix = 'os-';\r\n                var _classNameHTMLElement = _cassNamesPrefix + 'html';\r\n                var _classNameHostElement = _cassNamesPrefix + 'host';\r\n                var _classNameHostElementForeign = _classNameHostElement + '-foreign';\r\n                var _classNameHostTextareaElement = _classNameHostElement + '-textarea';\r\n                var _classNameHostScrollbarHorizontalHidden = _classNameHostElement + '-' + _strScrollbar + _strMinusHorizontal + _strMinusHidden;\r\n                var _classNameHostScrollbarVerticalHidden = _classNameHostElement + '-' + _strScrollbar + _strMinusVertical + _strMinusHidden;\r\n                var _classNameHostTransition = _classNameHostElement + '-transition';\r\n                var _classNameHostRTL = _classNameHostElement + '-rtl';\r\n                var _classNameHostResizeDisabled = _classNameHostElement + '-resize-disabled';\r\n                var _classNameHostScrolling = _classNameHostElement + '-scrolling';\r\n                var _classNameHostOverflow = _classNameHostElement + '-overflow';\r\n                var _classNameHostOverflow = _classNameHostElement + '-overflow';\r\n                var _classNameHostOverflowX = _classNameHostOverflow + '-x';\r\n                var _classNameHostOverflowY = _classNameHostOverflow + '-y';\r\n                var _classNameTextareaElement = _cassNamesPrefix + 'textarea';\r\n                var _classNameTextareaCoverElement = _classNameTextareaElement + '-cover';\r\n                var _classNamePaddingElement = _cassNamesPrefix + 'padding';\r\n                var _classNameViewportElement = _cassNamesPrefix + 'viewport';\r\n                var _classNameViewportNativeScrollbarsInvisible = _classNameViewportElement + '-native-scrollbars-invisible';\r\n                var _classNameViewportNativeScrollbarsOverlaid = _classNameViewportElement + '-native-scrollbars-overlaid';\r\n                var _classNameContentElement = _cassNamesPrefix + 'content';\r\n                var _classNameContentArrangeElement = _cassNamesPrefix + 'content-arrange';\r\n                var _classNameContentGlueElement = _cassNamesPrefix + 'content-glue';\r\n                var _classNameSizeAutoObserverElement = _cassNamesPrefix + 'size-auto-observer';\r\n                var _classNameResizeObserverElement = _cassNamesPrefix + 'resize-observer';\r\n                var _classNameResizeObserverItemElement = _cassNamesPrefix + 'resize-observer-item';\r\n                var _classNameResizeObserverItemFinalElement = _classNameResizeObserverItemElement + '-final';\r\n                var _classNameTextInherit = _cassNamesPrefix + 'text-inherit';\r\n                var _classNameScrollbar = _cassNamesPrefix + _strScrollbar;\r\n                var _classNameScrollbarTrack = _classNameScrollbar + '-track';\r\n                var _classNameScrollbarTrackOff = _classNameScrollbarTrack + '-off';\r\n                var _classNameScrollbarHandle = _classNameScrollbar + '-handle';\r\n                var _classNameScrollbarHandleOff = _classNameScrollbarHandle + '-off';\r\n                var _classNameScrollbarUnusable = _classNameScrollbar + '-unusable';\r\n                var _classNameScrollbarAutoHidden = _classNameScrollbar + '-' + _strAuto + _strMinusHidden;\r\n                var _classNameScrollbarCorner = _classNameScrollbar + '-corner';\r\n                var _classNameScrollbarCornerResize = _classNameScrollbarCorner + '-resize';\r\n                var _classNameScrollbarCornerResizeB = _classNameScrollbarCornerResize + '-both';\r\n                var _classNameScrollbarCornerResizeH = _classNameScrollbarCornerResize + _strMinusHorizontal;\r\n                var _classNameScrollbarCornerResizeV = _classNameScrollbarCornerResize + _strMinusVertical;\r\n                var _classNameScrollbarHorizontal = _classNameScrollbar + _strMinusHorizontal;\r\n                var _classNameScrollbarVertical = _classNameScrollbar + _strMinusVertical;\r\n                var _classNameDragging = _cassNamesPrefix + 'dragging';\r\n                var _classNameThemeNone = _cassNamesPrefix + 'theme-none';\r\n                var _classNamesDynamicDestroy = [\r\n                    _classNameViewportNativeScrollbarsInvisible,\r\n                    _classNameViewportNativeScrollbarsOverlaid,\r\n                    _classNameScrollbarTrackOff,\r\n                    _classNameScrollbarHandleOff,\r\n                    _classNameScrollbarUnusable,\r\n                    _classNameScrollbarAutoHidden,\r\n                    _classNameScrollbarCornerResize,\r\n                    _classNameScrollbarCornerResizeB,\r\n                    _classNameScrollbarCornerResizeH,\r\n                    _classNameScrollbarCornerResizeV,\r\n                    _classNameDragging].join(_strSpace);\r\n\r\n                //callbacks:\t\r\n                var _callbacksInitQeueue = [];\r\n\r\n                //attrs viewport shall inherit from target\t\r\n                var _viewportAttrsFromTarget = [LEXICON.ti];\r\n\r\n                //options:\t\r\n                var _defaultOptions;\r\n                var _currentOptions;\r\n                var _currentPreparedOptions;\r\n\r\n                //extensions:\t\r\n                var _extensions = {};\r\n                var _extensionsPrivateMethods = 'added removed on contract';\r\n\r\n                //update\t\r\n                var _lastUpdateTime;\r\n                var _swallowedUpdateHints = {};\r\n                var _swallowedUpdateTimeout;\r\n                var _swallowUpdateLag = 42;\r\n                var _updateOnLoadEventName = 'load';\r\n                var _updateOnLoadElms = [];\r\n\r\n                //DOM elements:\t\r\n                var _windowElement;\r\n                var _documentElement;\r\n                var _htmlElement;\r\n                var _bodyElement;\r\n                var _targetElement;                     //the target element of this OverlayScrollbars object\t\r\n                var _hostElement;                       //the host element of this OverlayScrollbars object -> may be the same as targetElement\t\r\n                var _sizeAutoObserverElement;           //observes size auto changes\t\r\n                var _sizeObserverElement;               //observes size and padding changes\t\r\n                var _paddingElement;                    //manages the padding\t\r\n                var _viewportElement;                   //is the viewport of our scrollbar model\t\r\n                var _contentElement;                    //the element which holds the content\t\r\n                var _contentArrangeElement;             //is needed for correct sizing of the content element (only if native scrollbars are overlays)\t\r\n                var _contentGlueElement;                //has always the size of the content element\t\r\n                var _textareaCoverElement;              //only applied if target is a textarea element. Used for correct size calculation and for prevention of uncontrolled scrolling\t\r\n                var _scrollbarCornerElement;\r\n                var _scrollbarHorizontalElement;\r\n                var _scrollbarHorizontalTrackElement;\r\n                var _scrollbarHorizontalHandleElement;\r\n                var _scrollbarVerticalElement;\r\n                var _scrollbarVerticalTrackElement;\r\n                var _scrollbarVerticalHandleElement;\r\n                var _windowElementNative;\r\n                var _documentElementNative;\r\n                var _targetElementNative;\r\n                var _hostElementNative;\r\n                var _sizeAutoObserverElementNative;\r\n                var _sizeObserverElementNative;\r\n                var _paddingElementNative;\r\n                var _viewportElementNative;\r\n                var _contentElementNative;\r\n\r\n                //Cache:\t\r\n                var _hostSizeCache;\r\n                var _contentScrollSizeCache;\r\n                var _arrangeContentSizeCache;\r\n                var _hasOverflowCache;\r\n                var _hideOverflowCache;\r\n                var _widthAutoCache;\r\n                var _heightAutoCache;\r\n                var _cssBoxSizingCache;\r\n                var _cssPaddingCache;\r\n                var _cssBorderCache;\r\n                var _cssMarginCache;\r\n                var _cssDirectionCache;\r\n                var _cssDirectionDetectedCache;\r\n                var _paddingAbsoluteCache;\r\n                var _clipAlwaysCache;\r\n                var _contentGlueSizeCache;\r\n                var _overflowBehaviorCache;\r\n                var _overflowAmountCache;\r\n                var _ignoreOverlayScrollbarHidingCache;\r\n                var _autoUpdateCache;\r\n                var _sizeAutoCapableCache;\r\n                var _contentElementScrollSizeChangeDetectedCache;\r\n                var _hostElementSizeChangeDetectedCache;\r\n                var _scrollbarsVisibilityCache;\r\n                var _scrollbarsAutoHideCache;\r\n                var _scrollbarsClickScrollingCache;\r\n                var _scrollbarsDragScrollingCache;\r\n                var _resizeCache;\r\n                var _normalizeRTLCache;\r\n                var _classNameCache;\r\n                var _oldClassName;\r\n                var _textareaAutoWrappingCache;\r\n                var _textareaInfoCache;\r\n                var _textareaSizeCache;\r\n                var _textareaDynHeightCache;\r\n                var _textareaDynWidthCache;\r\n                var _bodyMinSizeCache;\r\n                var _updateAutoCache = {};\r\n\r\n                //MutationObserver:\t\r\n                var _mutationObserverHost;\r\n                var _mutationObserverContent;\r\n                var _mutationObserverHostCallback;\r\n                var _mutationObserverContentCallback;\r\n                var _mutationObserversConnected;\r\n                var _mutationObserverAttrsTextarea = ['wrap', 'cols', 'rows'];\r\n                var _mutationObserverAttrsHost = [LEXICON.i, LEXICON.c, LEXICON.s, 'open'].concat(_viewportAttrsFromTarget);\r\n\r\n                //events:\t\r\n                var _destroyEvents = [];\r\n\r\n                //textarea:\t\r\n                var _textareaHasFocus;\r\n\r\n                //scrollbars:\t\r\n                var _scrollbarsAutoHideTimeoutId;\r\n                var _scrollbarsAutoHideMoveTimeoutId;\r\n                var _scrollbarsAutoHideDelay;\r\n                var _scrollbarsAutoHideNever;\r\n                var _scrollbarsAutoHideScroll;\r\n                var _scrollbarsAutoHideMove;\r\n                var _scrollbarsAutoHideLeave;\r\n                var _scrollbarsHandleHovered;\r\n                var _scrollbarsHandlesDefineScrollPos;\r\n\r\n                //resize\t\r\n                var _resizeNone;\r\n                var _resizeBoth;\r\n                var _resizeHorizontal;\r\n                var _resizeVertical;\r\n\r\n\r\n                //==== Event Listener ====//\t\r\n\r\n                /**\t\r\n                 * Adds or removes a event listener from the given element. \t\r\n                 * @param element The element to which the event listener shall be applied or removed.\t\r\n                 * @param eventNames The name(s) of the events.\t\r\n                 * @param listener The method which shall be called.\t\r\n                 * @param remove True if the handler shall be removed, false or undefined if the handler shall be added.\t\r\n                 * @param passiveOrOptions The options for the event.\r\n                 */\r\n                function setupResponsiveEventListener(element, eventNames, listener, remove, passiveOrOptions) {\r\n                    var collected = COMPATIBILITY.isA(eventNames) && COMPATIBILITY.isA(listener);\r\n                    var method = remove ? 'removeEventListener' : 'addEventListener';\r\n                    var onOff = remove ? 'off' : 'on';\r\n                    var events = collected ? false : eventNames.split(_strSpace)\r\n                    var i = 0;\r\n\r\n                    var passiveOrOptionsIsObj = FRAMEWORK.isPlainObject(passiveOrOptions);\r\n                    var passive = (_supportPassiveEvents && (passiveOrOptionsIsObj ? (passiveOrOptions._passive) : passiveOrOptions)) || false;\r\n                    var capture = passiveOrOptionsIsObj && (passiveOrOptions._capture || false);\r\n                    var nativeParam = _supportPassiveEvents ? {\r\n                        passive: passive,\r\n                        capture: capture,\r\n                    } : capture;\r\n\r\n                    if (collected) {\r\n                        for (; i < eventNames[LEXICON.l]; i++)\r\n                            setupResponsiveEventListener(element, eventNames[i], listener[i], remove, passiveOrOptions);\r\n                    }\r\n                    else {\r\n                        for (; i < events[LEXICON.l]; i++) {\r\n                            if(_supportPassiveEvents) {\r\n                                element[0][method](events[i], listener, nativeParam);\r\n                            }\r\n                            else {\r\n                                element[onOff](events[i], listener);\r\n                            }     \r\n                        }\r\n                    }\r\n                }\r\n\r\n\r\n                function addDestroyEventListener(element, eventNames, listener, passive) {\r\n                    setupResponsiveEventListener(element, eventNames, listener, false, passive);\r\n                    _destroyEvents.push(COMPATIBILITY.bind(setupResponsiveEventListener, 0, element, eventNames, listener, true, passive));\r\n                }\r\n\r\n                //==== Resize Observer ====//\r\n\r\n                /**\r\n                 * Adds or removes a resize observer from the given element.\r\n                 * @param targetElement The element to which the resize observer shall be added or removed.\r\n                 * @param onElementResizedCallback The callback which is fired every time the resize observer registers a size change or false / undefined if the resizeObserver shall be removed.\r\n                 */\r\n                function setupResizeObserver(targetElement, onElementResizedCallback) {\r\n                    if (targetElement) {\r\n                        var resizeObserver = COMPATIBILITY.rO();\r\n                        var strAnimationStartEvent = 'animationstart mozAnimationStart webkitAnimationStart MSAnimationStart';\r\n                        var strChildNodes = 'childNodes';\r\n                        var constScroll = 3333333;\r\n                        var callback = function () {\r\n                            targetElement[_strScrollTop](constScroll)[_strScrollLeft](_isRTL ? _rtlScrollBehavior.n ? -constScroll : _rtlScrollBehavior.i ? 0 : constScroll : constScroll);\r\n                            onElementResizedCallback();\r\n                        };\r\n                        //add resize observer:\r\n                        if (onElementResizedCallback) {\r\n                            if (_supportResizeObserver) {\r\n                                var element = targetElement.addClass('observed').append(generateDiv(_classNameResizeObserverElement)).contents()[0];\r\n                                var observer = element[_strResizeObserverProperty] = new resizeObserver(callback);\r\n                                observer.observe(element);\r\n                            }\r\n                            else {\r\n                                if (_msieVersion > 9 || !_autoUpdateRecommended) {\r\n                                    targetElement.prepend(\r\n                                        generateDiv(_classNameResizeObserverElement,\r\n                                            generateDiv({ c: _classNameResizeObserverItemElement, dir: 'ltr' },\r\n                                                generateDiv(_classNameResizeObserverItemElement,\r\n                                                    generateDiv(_classNameResizeObserverItemFinalElement)\r\n                                                ) +\r\n                                                generateDiv(_classNameResizeObserverItemElement,\r\n                                                    generateDiv({ c: _classNameResizeObserverItemFinalElement, style: 'width: 200%; height: 200%' })\r\n                                                )\r\n                                            )\r\n                                        )\r\n                                    );\r\n\r\n                                    var observerElement = targetElement[0][strChildNodes][0][strChildNodes][0];\r\n                                    var shrinkElement = FRAMEWORK(observerElement[strChildNodes][1]);\r\n                                    var expandElement = FRAMEWORK(observerElement[strChildNodes][0]);\r\n                                    var expandElementChild = FRAMEWORK(expandElement[0][strChildNodes][0]);\r\n                                    var widthCache = observerElement[LEXICON.oW];\r\n                                    var heightCache = observerElement[LEXICON.oH];\r\n                                    var isDirty;\r\n                                    var rAFId;\r\n                                    var currWidth;\r\n                                    var currHeight;\r\n                                    var factor = 2;\r\n                                    var nativeScrollbarSize = globals.nativeScrollbarSize; //care don't make changes to this object!!!\r\n                                    var reset = function () {\r\n                                        /*\r\n                                         var sizeResetWidth = observerElement[LEXICON.oW] + nativeScrollbarSize.x * factor + nativeScrollbarSize.y * factor + _overlayScrollbarDummySize.x + _overlayScrollbarDummySize.y;\r\n                                         var sizeResetHeight = observerElement[LEXICON.oH] + nativeScrollbarSize.x * factor + nativeScrollbarSize.y * factor + _overlayScrollbarDummySize.x + _overlayScrollbarDummySize.y;\r\n                                         var expandChildCSS = {};\r\n                                         expandChildCSS[_strWidth] = sizeResetWidth;\r\n                                         expandChildCSS[_strHeight] = sizeResetHeight;\r\n                                         expandElementChild.css(expandChildCSS);\r\n\r\n\r\n                                         expandElement[_strScrollLeft](sizeResetWidth)[_strScrollTop](sizeResetHeight);\r\n                                         shrinkElement[_strScrollLeft](sizeResetWidth)[_strScrollTop](sizeResetHeight);\r\n                                         */\r\n                                        expandElement[_strScrollLeft](constScroll)[_strScrollTop](constScroll);\r\n                                        shrinkElement[_strScrollLeft](constScroll)[_strScrollTop](constScroll);\r\n                                    };\r\n                                    var onResized = function () {\r\n                                        rAFId = 0;\r\n                                        if (!isDirty)\r\n                                            return;\r\n\r\n                                        widthCache = currWidth;\r\n                                        heightCache = currHeight;\r\n                                        callback();\r\n                                    };\r\n                                    var onScroll = function (event) {\r\n                                        currWidth = observerElement[LEXICON.oW];\r\n                                        currHeight = observerElement[LEXICON.oH];\r\n                                        isDirty = currWidth != widthCache || currHeight != heightCache;\r\n\r\n                                        if (event && isDirty && !rAFId) {\r\n                                            COMPATIBILITY.cAF()(rAFId);\r\n                                            rAFId = COMPATIBILITY.rAF()(onResized);\r\n                                        }\r\n                                        else if (!event)\r\n                                            onResized();\r\n\r\n                                        reset();\r\n                                        if (event) {\r\n                                            COMPATIBILITY.prvD(event);\r\n                                            COMPATIBILITY.stpP(event);\r\n                                        }\r\n                                        return false;\r\n                                    };\r\n                                    var expandChildCSS = {};\r\n                                    var observerElementCSS = {};\r\n\r\n                                    setTopRightBottomLeft(observerElementCSS, _strEmpty, [\r\n                                        -((nativeScrollbarSize.y + 1) * factor),\r\n                                        nativeScrollbarSize.x * -factor,\r\n                                        nativeScrollbarSize.y * -factor,\r\n                                        -((nativeScrollbarSize.x + 1) * factor)\r\n                                    ]);\r\n\r\n                                    FRAMEWORK(observerElement).css(observerElementCSS);\r\n                                    expandElement.on(_strScroll, onScroll);\r\n                                    shrinkElement.on(_strScroll, onScroll);\r\n                                    targetElement.on(strAnimationStartEvent, function () {\r\n                                        onScroll(false);\r\n                                    });\r\n                                    //lets assume that the divs will never be that large and a constant value is enough\r\n                                    expandChildCSS[_strWidth] = constScroll;\r\n                                    expandChildCSS[_strHeight] = constScroll;\r\n                                    expandElementChild.css(expandChildCSS);\r\n\r\n                                    reset();\r\n                                }\r\n                                else {\r\n                                    var attachEvent = _documentElementNative.attachEvent;\r\n                                    var isIE = _msieVersion !== undefined;\r\n                                    if (attachEvent) {\r\n                                        targetElement.prepend(generateDiv(_classNameResizeObserverElement));\r\n                                        findFirst(targetElement, _strDot + _classNameResizeObserverElement)[0].attachEvent('onresize', callback);\r\n                                    }\r\n                                    else {\r\n                                        var obj = _documentElementNative.createElement(TYPES.o);\r\n                                        obj.setAttribute(LEXICON.ti, '-1');\r\n                                        obj.setAttribute(LEXICON.c, _classNameResizeObserverElement);\r\n                                        obj.onload = function () {\r\n                                            var wnd = this.contentDocument.defaultView;\r\n                                            wnd.addEventListener('resize', callback);\r\n                                            wnd.document.documentElement.style.display = 'none';\r\n                                        };\r\n                                        obj.type = 'text/html';\r\n                                        if (isIE)\r\n                                            targetElement.prepend(obj);\r\n                                        obj.data = 'about:blank';\r\n                                        if (!isIE)\r\n                                            targetElement.prepend(obj);\r\n                                        targetElement.on(strAnimationStartEvent, callback);\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            if (targetElement[0] === _sizeObserverElementNative) {\r\n                                var directionChanged = function () {\r\n                                    var dir = _hostElement.css('direction');\r\n                                    var css = {};\r\n                                    var scrollLeftValue = 0;\r\n                                    var result = false;\r\n                                    if (dir !== _cssDirectionDetectedCache) {\r\n                                        if (dir === 'ltr') {\r\n                                            css[_strLeft] = 0;\r\n                                            css[_strRight] = _strAuto;\r\n                                            scrollLeftValue = constScroll;\r\n                                        }\r\n                                        else {\r\n                                            css[_strLeft] = _strAuto;\r\n                                            css[_strRight] = 0;\r\n                                            scrollLeftValue = _rtlScrollBehavior.n ? -constScroll : _rtlScrollBehavior.i ? 0 : constScroll;\r\n                                        }\r\n                                        //execution order is important for IE!!!\r\n                                        _sizeObserverElement.children().eq(0).css(css);\r\n                                        _sizeObserverElement[_strScrollLeft](scrollLeftValue)[_strScrollTop](constScroll);\r\n                                        _cssDirectionDetectedCache = dir;\r\n                                        result = true;\r\n                                    }\r\n                                    return result;\r\n                                };\r\n                                directionChanged();\r\n                                addDestroyEventListener(targetElement, _strScroll, function (event) {\r\n                                    if (directionChanged())\r\n                                        update();\r\n                                    COMPATIBILITY.prvD(event);\r\n                                    COMPATIBILITY.stpP(event);\r\n                                    return false;\r\n                                });\r\n                            }\r\n                        }\r\n                        //remove resize observer:\r\n                        else {\r\n                            if (_supportResizeObserver) {\r\n                                var element = targetElement.contents()[0];\r\n                                var resizeObserverObj = element[_strResizeObserverProperty];\r\n                                if (resizeObserverObj) {\r\n                                    resizeObserverObj.disconnect();\r\n                                    delete element[_strResizeObserverProperty];\r\n                                }\r\n                            }\r\n                            else {\r\n                                remove(targetElement.children(_strDot + _classNameResizeObserverElement).eq(0));\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Freezes or unfreezes the given resize observer.\r\n                 * @param targetElement The element to which the target resize observer is applied.\r\n                 * @param freeze True if the resize observer shall be frozen, false otherwise.\r\n                 \r\n                function freezeResizeObserver(targetElement, freeze) {\r\n                    if (targetElement !== undefined) {\r\n                        if(freeze) {\r\n                            if (_supportResizeObserver) {\r\n                                var element = targetElement.contents()[0];\r\n                                element[_strResizeObserverProperty].unobserve(element);\r\n                            }\r\n                            else {\r\n                                targetElement = targetElement.children(_strDot + _classNameResizeObserverElement).eq(0);\r\n                                var w = targetElement.css(_strWidth);\r\n                                var h = targetElement.css(_strHeight);\r\n                                var css = {};\r\n                                css[_strWidth] = w;\r\n                                css[_strHeight] = h;\r\n                                targetElement.css(css);\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (_supportResizeObserver) {\r\n                                var element = targetElement.contents()[0];\r\n                                element[_strResizeObserverProperty].observe(element);\r\n                            }\r\n                            else {\r\n                                var css = { };\r\n                                css[_strHeight] = _strEmpty;\r\n                                css[_strWidth] = _strEmpty;\r\n                                targetElement.children(_strDot + _classNameResizeObserverElement).eq(0).css(css);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                */\r\n\r\n\r\n                //==== Mutation Observers ====//\r\n\r\n                /**\r\n                 * Creates MutationObservers for the host and content Element if they are supported.\r\n                 */\r\n                function createMutationObservers() {\r\n                    if (_supportMutationObserver) {\r\n                        var mutationObserverContentLag = 11;\r\n                        var mutationObserver = COMPATIBILITY.mO();\r\n                        var contentLastUpdate = COMPATIBILITY.now();\r\n                        var mutationTarget;\r\n                        var mutationAttrName;\r\n                        var mutationIsClass;\r\n                        var oldMutationVal;\r\n                        var newClassVal;\r\n                        var hostClassNameRegex;\r\n                        var contentTimeout;\r\n                        var now;\r\n                        var sizeAuto;\r\n                        var action;\r\n\r\n                        _mutationObserverHostCallback = function (mutations) {\r\n\r\n                            var doUpdate = false;\r\n                            var doUpdateForce = false;\r\n                            var mutation;\r\n                            var mutatedAttrs = [];\r\n\r\n                            if (_initialized && !_sleeping) {\r\n                                each(mutations, function () {\r\n                                    mutation = this;\r\n                                    mutationTarget = mutation.target;\r\n                                    mutationAttrName = mutation.attributeName;\r\n                                    mutationIsClass = mutationAttrName === LEXICON.c;\r\n                                    oldMutationVal = mutation.oldValue;\r\n                                    newClassVal = mutationTarget.className;\r\n\r\n                                    if (_domExists && mutationIsClass && !doUpdateForce) {\r\n                                        // if old class value contains _classNameHostElementForeign and new class value doesn't\r\n                                        if (oldMutationVal.indexOf(_classNameHostElementForeign) > -1 && newClassVal.indexOf(_classNameHostElementForeign) < 0) {\r\n                                            hostClassNameRegex = createHostClassNameRegExp(true);\r\n                                            _hostElementNative.className = newClassVal.split(_strSpace).concat(oldMutationVal.split(_strSpace).filter(function (name) {\r\n                                                return name.match(hostClassNameRegex);\r\n                                            })).join(_strSpace);\r\n                                            doUpdate = doUpdateForce = true;\r\n                                        }\r\n                                    }\r\n\r\n                                    if (!doUpdate) {\r\n                                        doUpdate = mutationIsClass\r\n                                            ? hostClassNamesChanged(oldMutationVal, newClassVal)\r\n                                            : mutationAttrName === LEXICON.s\r\n                                                ? oldMutationVal !== mutationTarget[LEXICON.s].cssText\r\n                                                : true;\r\n                                    }\r\n\r\n                                    mutatedAttrs.push(mutationAttrName);\r\n                                });\r\n\r\n                                updateViewportAttrsFromTarget(mutatedAttrs);\r\n\r\n                                if (doUpdate)\r\n                                    _base.update(doUpdateForce || _strAuto);\r\n                            }\r\n                            return doUpdate;\r\n                        };\r\n                        _mutationObserverContentCallback = function (mutations) {\r\n                            var doUpdate = false;\r\n                            var mutation;\r\n\r\n                            if (_initialized && !_sleeping) {\r\n                                each(mutations, function () {\r\n                                    mutation = this;\r\n                                    doUpdate = isUnknownMutation(mutation);\r\n                                    return !doUpdate;\r\n                                });\r\n\r\n                                if (doUpdate) {\r\n                                    now = COMPATIBILITY.now();\r\n                                    sizeAuto = (_heightAutoCache || _widthAutoCache);\r\n                                    action = function () {\r\n                                        if (!_destroyed) {\r\n                                            contentLastUpdate = now;\r\n\r\n                                            //if cols, rows or wrap attr was changed\r\n                                            if (_isTextarea)\r\n                                                textareaUpdate();\r\n\r\n                                            if (sizeAuto)\r\n                                                update();\r\n                                            else\r\n                                                _base.update(_strAuto);\r\n                                        }\r\n                                    };\r\n                                    clearTimeout(contentTimeout);\r\n                                    if (mutationObserverContentLag <= 0 || now - contentLastUpdate > mutationObserverContentLag || !sizeAuto)\r\n                                        action();\r\n                                    else\r\n                                        contentTimeout = setTimeout(action, mutationObserverContentLag);\r\n                                }\r\n                            }\r\n                            return doUpdate;\r\n                        }\r\n\r\n                        _mutationObserverHost = new mutationObserver(_mutationObserverHostCallback);\r\n                        _mutationObserverContent = new mutationObserver(_mutationObserverContentCallback);\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Connects the MutationObservers if they are supported.\r\n                 */\r\n                function connectMutationObservers() {\r\n                    if (_supportMutationObserver && !_mutationObserversConnected) {\r\n                        _mutationObserverHost.observe(_hostElementNative, {\r\n                            attributes: true,\r\n                            attributeOldValue: true,\r\n                            attributeFilter: _mutationObserverAttrsHost\r\n                        });\r\n\r\n                        _mutationObserverContent.observe(_isTextarea ? _targetElementNative : _contentElementNative, {\r\n                            attributes: true,\r\n                            attributeOldValue: true,\r\n                            subtree: !_isTextarea,\r\n                            childList: !_isTextarea,\r\n                            characterData: !_isTextarea,\r\n                            attributeFilter: _isTextarea ? _mutationObserverAttrsTextarea : _mutationObserverAttrsHost\r\n                        });\r\n\r\n                        _mutationObserversConnected = true;\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Disconnects the MutationObservers if they are supported.\r\n                 */\r\n                function disconnectMutationObservers() {\r\n                    if (_supportMutationObserver && _mutationObserversConnected) {\r\n                        _mutationObserverHost.disconnect();\r\n                        _mutationObserverContent.disconnect();\r\n\r\n                        _mutationObserversConnected = false;\r\n                    }\r\n                }\r\n\r\n\r\n                //==== Events of elements ====//\r\n\r\n                /**\r\n                 * This method gets called every time the host element gets resized. IMPORTANT: Padding changes are detected too!!\r\n                 * It refreshes the hostResizedEventArgs and the hostSizeResizeCache.\r\n                 * If there are any size changes, the update method gets called.\r\n                 */\r\n                function hostOnResized() {\r\n                    if (!_sleeping) {\r\n                        var changed;\r\n                        var hostSize = {\r\n                            w: _sizeObserverElementNative[LEXICON.sW],\r\n                            h: _sizeObserverElementNative[LEXICON.sH]\r\n                        };\r\n\r\n                        changed = checkCache(hostSize, _hostElementSizeChangeDetectedCache);\r\n                        _hostElementSizeChangeDetectedCache = hostSize;\r\n                        if (changed)\r\n                            update({ _hostSizeChanged: true });\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * The mouse enter event of the host element. This event is only needed for the autoHide feature.\r\n                 */\r\n                function hostOnMouseEnter() {\r\n                    if (_scrollbarsAutoHideLeave)\r\n                        refreshScrollbarsAutoHide(true);\r\n                }\r\n\r\n                /**\r\n                 * The mouse leave event of the host element. This event is only needed for the autoHide feature.\r\n                 */\r\n                function hostOnMouseLeave() {\r\n                    if (_scrollbarsAutoHideLeave && !_bodyElement.hasClass(_classNameDragging))\r\n                        refreshScrollbarsAutoHide(false);\r\n                }\r\n\r\n                /**\r\n                 * The mouse move event of the host element. This event is only needed for the autoHide \"move\" feature.\r\n                 */\r\n                function hostOnMouseMove() {\r\n                    if (_scrollbarsAutoHideMove) {\r\n                        refreshScrollbarsAutoHide(true);\r\n                        clearTimeout(_scrollbarsAutoHideMoveTimeoutId);\r\n                        _scrollbarsAutoHideMoveTimeoutId = setTimeout(function () {\r\n                            if (_scrollbarsAutoHideMove && !_destroyed)\r\n                                refreshScrollbarsAutoHide(false);\r\n                        }, 100);\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Prevents text from deselection if attached to the document element on the mousedown event of a DOM element.\r\n                 * @param event The select start event.\r\n                 */\r\n                function documentOnSelectStart(event) {\r\n                    COMPATIBILITY.prvD(event);\r\n                    return false;\r\n                }\r\n\r\n                /**\t\r\n                 * A callback which will be called after a element has loaded.\t\r\n                 */\r\n                function updateOnLoadCallback(event) {\r\n\t\t\t\t\tif (!_destroyed) {\r\n\t\t\t\t\t\tvar target = event.target;\r\n\t\t\t\t\t\tvar elm = FRAMEWORK(event.target);\r\n\t\t\t\t\t\tvar index = FRAMEWORK.inArray(target, _updateOnLoadElms);\r\n\t\t\t\t\t\tif (index > -1) {\r\n\t\t\t\t\t\t\t_updateOnLoadElms.splice(index, 1);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\teachUpdateOnLoad(function (i, updateOnLoadSelector) {\r\n\t\t\t\t\t\t\tif (elm.is(updateOnLoadSelector)) {\r\n\t\t\t\t\t\t\t\tupdate({ _contentSizeChanged: true });\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n                }\r\n\r\n                /**\r\n                * Adds or removes mouse & touch events of the host element. (for handling auto-hiding of the scrollbars)\r\n                * @param destroy Indicates whether the events shall be added or removed.\r\n                */\r\n                function setupHostMouseTouchEvents(destroy) {\r\n                    if (!destroy)\r\n                        setupHostMouseTouchEvents(true);\r\n\r\n                    setupResponsiveEventListener(_hostElement,\r\n                        _strMouseTouchMoveEvent.split(_strSpace)[0],\r\n                        hostOnMouseMove,\r\n                        (!_scrollbarsAutoHideMove || destroy), true);\r\n                    setupResponsiveEventListener(_hostElement,\r\n                        [_strMouseEnter, _strMouseLeave],\r\n                        [hostOnMouseEnter, hostOnMouseLeave],\r\n                        (!_scrollbarsAutoHideLeave || destroy), true);\r\n\r\n                    //if the plugin is initialized and the mouse is over the host element, make the scrollbars visible\r\n                    if (!_initialized && !destroy)\r\n                        _hostElement.one('mouseover', hostOnMouseEnter);\r\n                }\r\n\r\n\r\n                //==== Update Detection ====//\r\n\r\n                /**\r\n                 * Measures the min width and min height of the body element and refreshes the related cache.\r\n                 * @returns {boolean} True if the min width or min height has changed, false otherwise.\r\n                 */\r\n                function bodyMinSizeChanged() {\r\n                    var bodyMinSize = {};\r\n                    if (_isBody && _contentArrangeElement) {\r\n                        bodyMinSize.w = parseToZeroOrNumber(_contentArrangeElement.css(_strMinMinus + _strWidth));\r\n                        bodyMinSize.h = parseToZeroOrNumber(_contentArrangeElement.css(_strMinMinus + _strHeight));\r\n                        bodyMinSize.c = checkCache(bodyMinSize, _bodyMinSizeCache);\r\n                        bodyMinSize.f = true; //flag for \"measured at least once\"\r\n                    }\r\n                    _bodyMinSizeCache = bodyMinSize;\r\n                    return !!bodyMinSize.c;\r\n                }\r\n\r\n                /**\r\n                 * Returns true if the class names really changed (new class without plugin host prefix)\r\n                 * @param oldClassNames The old ClassName string or array.\r\n                 * @param newClassNames The new ClassName string or array.\r\n                 * @returns {boolean} True if the class names has really changed, false otherwise.\r\n                 */\r\n                function hostClassNamesChanged(oldClassNames, newClassNames) {\r\n                    var currClasses = typeof newClassNames == TYPES.s ? newClassNames.split(_strSpace) : [];\r\n                    var oldClasses = typeof oldClassNames == TYPES.s ? oldClassNames.split(_strSpace) : [];\r\n                    var diff = getArrayDifferences(oldClasses, currClasses);\r\n\r\n                    // remove none theme from diff list to prevent update\r\n                    var idx = inArray(_classNameThemeNone, diff);\r\n                    var i;\r\n                    var regex;\r\n\r\n                    if (idx > -1)\r\n                        diff.splice(idx, 1);\r\n\r\n                    if (diff[LEXICON.l] > 0) {\r\n                        regex = createHostClassNameRegExp(true, true);\r\n                        for (i = 0; i < diff.length; i++) {\r\n                            if (!diff[i].match(regex)) {\r\n                                return true;\r\n                            }\r\n                        }\r\n                    }\r\n                    return false;\r\n                }\r\n\r\n                /**\r\n                 * Returns true if the given mutation is not from a from the plugin generated element. If the target element is a textarea the mutation is always unknown.\r\n                 * @param mutation The mutation which shall be checked.\r\n                 * @returns {boolean} True if the mutation is from a unknown element, false otherwise.\r\n                 */\r\n                function isUnknownMutation(mutation) {\r\n                    var attributeName = mutation.attributeName;\r\n                    var mutationTarget = mutation.target;\r\n                    var mutationType = mutation.type;\r\n                    var strClosest = 'closest';\r\n\r\n                    if (mutationTarget === _contentElementNative)\r\n                        return attributeName === null;\r\n                    if (mutationType === 'attributes' && (attributeName === LEXICON.c || attributeName === LEXICON.s) && !_isTextarea) {\r\n                        //ignore className changes by the plugin\t\r\n                        if (attributeName === LEXICON.c && FRAMEWORK(mutationTarget).hasClass(_classNameHostElement))\r\n                            return hostClassNamesChanged(mutation.oldValue, mutationTarget.className);\r\n\r\n                        //only do it of browser support it natively\t\r\n                        if (typeof mutationTarget[strClosest] != TYPES.f)\r\n                            return true;\r\n                        if (mutationTarget[strClosest](_strDot + _classNameResizeObserverElement) !== null ||\r\n                            mutationTarget[strClosest](_strDot + _classNameScrollbar) !== null ||\r\n                            mutationTarget[strClosest](_strDot + _classNameScrollbarCorner) !== null)\r\n                            return false;\r\n                    }\r\n                    return true;\r\n                }\r\n\r\n                /**\r\n                 * Returns true if the content size was changed since the last time this method was called.\r\n                 * @returns {boolean} True if the content size was changed, false otherwise.\r\n                 */\r\n                function updateAutoContentSizeChanged() {\r\n                    if (_sleeping)\r\n                        return false;\r\n\r\n                    var contentMeasureElement = getContentMeasureElement();\r\n                    var textareaValueLength = _isTextarea && _widthAutoCache && !_textareaAutoWrappingCache ? _targetElement.val().length : 0;\r\n                    var setCSS = !_mutationObserversConnected && _widthAutoCache && !_isTextarea;\r\n                    var css = {};\r\n                    var float;\r\n                    var bodyMinSizeC;\r\n                    var changed;\r\n                    var contentElementScrollSize;\r\n\r\n                    if (setCSS) {\r\n                        float = _contentElement.css(_strFloat);\r\n                        css[_strFloat] = _isRTL ? _strRight : _strLeft;\r\n                        css[_strWidth] = _strAuto;\r\n                        _contentElement.css(css);\r\n                    }\r\n                    contentElementScrollSize = {\r\n                        w: contentMeasureElement[LEXICON.sW] + textareaValueLength,\r\n                        h: contentMeasureElement[LEXICON.sH] + textareaValueLength\r\n                    };\r\n                    if (setCSS) {\r\n                        css[_strFloat] = float;\r\n                        css[_strWidth] = _strHundredPercent;\r\n                        _contentElement.css(css);\r\n                    }\r\n\r\n                    bodyMinSizeC = bodyMinSizeChanged();\r\n                    changed = checkCache(contentElementScrollSize, _contentElementScrollSizeChangeDetectedCache);\r\n\r\n                    _contentElementScrollSizeChangeDetectedCache = contentElementScrollSize;\r\n\r\n                    return changed || bodyMinSizeC;\r\n                }\r\n\r\n                /**\r\n                 * Returns true when a attribute which the MutationObserver would observe has changed.  \r\n                 * @returns {boolean} True if one of the attributes which a MutationObserver would observe has changed, false or undefined otherwise.\r\n                 */\r\n                function meaningfulAttrsChanged() {\r\n                    if (_sleeping || _mutationObserversConnected)\r\n                        return;\r\n\r\n                    var elem;\r\n                    var curr;\r\n                    var cache;\r\n                    var changedAttrs = [];\r\n                    var checks = [\r\n                        {\r\n                            _elem: _hostElement,\r\n                            _attrs: _mutationObserverAttrsHost.concat(':visible')\r\n                        },\r\n                        {\r\n                            _elem: _isTextarea ? _targetElement : undefined,\r\n                            _attrs: _mutationObserverAttrsTextarea\r\n                        }\r\n                    ];\r\n\r\n                    each(checks, function (index, check) {\r\n                        elem = check._elem;\r\n                        if (elem) {\r\n                            each(check._attrs, function (index, attr) {\r\n                                curr = attr.charAt(0) === ':' ? elem.is(attr) : elem.attr(attr);\r\n                                cache = _updateAutoCache[attr];\r\n\r\n                                if (checkCache(curr, cache)) {\r\n                                    changedAttrs.push(attr);\r\n                                }\r\n\r\n                                _updateAutoCache[attr] = curr;\r\n                            });\r\n                        }\r\n                    });\r\n\r\n                    updateViewportAttrsFromTarget(changedAttrs);\r\n\r\n                    return changedAttrs[LEXICON.l] > 0;\r\n                }\r\n\r\n                /**\r\n                 * Checks is a CSS Property of a child element is affecting the scroll size of the content.\r\n                 * @param propertyName The CSS property name.\r\n                 * @returns {boolean} True if the property is affecting the content scroll size, false otherwise.\r\n                 */\r\n                function isSizeAffectingCSSProperty(propertyName) {\r\n                    if (!_initialized)\r\n                        return true;\r\n                    var flexGrow = 'flex-grow';\r\n                    var flexShrink = 'flex-shrink';\r\n                    var flexBasis = 'flex-basis';\r\n                    var affectingPropsX = [\r\n                        _strWidth,\r\n                        _strMinMinus + _strWidth,\r\n                        _strMaxMinus + _strWidth,\r\n                        _strMarginMinus + _strLeft,\r\n                        _strMarginMinus + _strRight,\r\n                        _strLeft,\r\n                        _strRight,\r\n                        'font-weight',\r\n                        'word-spacing',\r\n                        flexGrow,\r\n                        flexShrink,\r\n                        flexBasis\r\n                    ];\r\n                    var affectingPropsXContentBox = [\r\n                        _strPaddingMinus + _strLeft,\r\n                        _strPaddingMinus + _strRight,\r\n                        _strBorderMinus + _strLeft + _strWidth,\r\n                        _strBorderMinus + _strRight + _strWidth\r\n                    ];\r\n                    var affectingPropsY = [\r\n                        _strHeight,\r\n                        _strMinMinus + _strHeight,\r\n                        _strMaxMinus + _strHeight,\r\n                        _strMarginMinus + _strTop,\r\n                        _strMarginMinus + _strBottom,\r\n                        _strTop,\r\n                        _strBottom,\r\n                        'line-height',\r\n                        flexGrow,\r\n                        flexShrink,\r\n                        flexBasis\r\n                    ];\r\n                    var affectingPropsYContentBox = [\r\n                        _strPaddingMinus + _strTop,\r\n                        _strPaddingMinus + _strBottom,\r\n                        _strBorderMinus + _strTop + _strWidth,\r\n                        _strBorderMinus + _strBottom + _strWidth\r\n                    ];\r\n                    var _strS = 's';\r\n                    var _strVS = 'v-s';\r\n                    var checkX = _overflowBehaviorCache.x === _strS || _overflowBehaviorCache.x === _strVS;\r\n                    var checkY = _overflowBehaviorCache.y === _strS || _overflowBehaviorCache.y === _strVS;\r\n                    var sizeIsAffected = false;\r\n                    var checkPropertyName = function (arr, name) {\r\n                        for (var i = 0; i < arr[LEXICON.l]; i++) {\r\n                            if (arr[i] === name)\r\n                                return true;\r\n                        }\r\n                        return false;\r\n                    };\r\n\r\n                    if (checkY) {\r\n                        sizeIsAffected = checkPropertyName(affectingPropsY, propertyName);\r\n                        if (!sizeIsAffected && !_isBorderBox)\r\n                            sizeIsAffected = checkPropertyName(affectingPropsYContentBox, propertyName);\r\n                    }\r\n                    if (checkX && !sizeIsAffected) {\r\n                        sizeIsAffected = checkPropertyName(affectingPropsX, propertyName);\r\n                        if (!sizeIsAffected && !_isBorderBox)\r\n                            sizeIsAffected = checkPropertyName(affectingPropsXContentBox, propertyName);\r\n                    }\r\n                    return sizeIsAffected;\r\n                }\r\n\r\n\r\n                //==== Update ====//\r\n\r\n                /**\r\n                 * Sets the attribute values of the viewport element to the values from the target element.\r\n                 * The value of a attribute is only set if the attribute is whitelisted.\r\n                 * @attrs attrs The array of attributes which shall be set or undefined if all whitelisted shall be set.\r\n                 */\r\n                function updateViewportAttrsFromTarget(attrs) {\r\n                    attrs = attrs || _viewportAttrsFromTarget;\r\n                    each(attrs, function (index, attr) {\r\n                        if (COMPATIBILITY.inA(attr, _viewportAttrsFromTarget) > -1) {\r\n                            var targetAttr = _targetElement.attr(attr);\r\n                            if (type(targetAttr) == TYPES.s) {\r\n                                _viewportElement.attr(attr, targetAttr);\r\n                            }\r\n                            else {\r\n                                _viewportElement.removeAttr(attr);\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n\r\n                /**\r\n                 * Updates the variables and size of the textarea element, and manages the scroll on new line or new character.\r\n                 */\r\n                function textareaUpdate() {\r\n                    if (!_sleeping) {\r\n                        var wrapAttrOff = !_textareaAutoWrappingCache;\r\n                        var minWidth = _viewportSize.w;\r\n                        var minHeight = _viewportSize.h;\r\n                        var css = {};\r\n                        var doMeasure = _widthAutoCache || wrapAttrOff;\r\n                        var origWidth;\r\n                        var width;\r\n                        var origHeight;\r\n                        var height;\r\n\r\n                        //reset min size\r\n                        css[_strMinMinus + _strWidth] = _strEmpty;\r\n                        css[_strMinMinus + _strHeight] = _strEmpty;\r\n\r\n                        //set width auto\r\n                        css[_strWidth] = _strAuto;\r\n                        _targetElement.css(css);\r\n\r\n                        //measure width\r\n                        origWidth = _targetElementNative[LEXICON.oW];\r\n                        width = doMeasure ? MATH.max(origWidth, _targetElementNative[LEXICON.sW] - 1) : 1;\r\n                        /*width += (_widthAutoCache ? _marginX + (!_isBorderBox ? wrapAttrOff ? 0 : _paddingX + _borderX : 0) : 0);*/\r\n\r\n                        //set measured width\r\n                        css[_strWidth] = _widthAutoCache ? _strAuto /*width*/ : _strHundredPercent;\r\n                        css[_strMinMinus + _strWidth] = _strHundredPercent;\r\n\r\n                        //set height auto\r\n                        css[_strHeight] = _strAuto;\r\n                        _targetElement.css(css);\r\n\r\n                        //measure height\r\n                        origHeight = _targetElementNative[LEXICON.oH];\r\n                        height = MATH.max(origHeight, _targetElementNative[LEXICON.sH] - 1);\r\n\r\n                        //append correct size values\r\n                        css[_strWidth] = width;\r\n                        css[_strHeight] = height;\r\n                        _textareaCoverElement.css(css);\r\n\r\n                        //apply min width / min height to prevent textarea collapsing\r\n                        css[_strMinMinus + _strWidth] = minWidth /*+ (!_isBorderBox && _widthAutoCache ? _paddingX + _borderX : 0)*/;\r\n                        css[_strMinMinus + _strHeight] = minHeight /*+ (!_isBorderBox && _heightAutoCache ? _paddingY + _borderY : 0)*/;\r\n                        _targetElement.css(css);\r\n\r\n                        return {\r\n                            _originalWidth: origWidth,\r\n                            _originalHeight: origHeight,\r\n                            _dynamicWidth: width,\r\n                            _dynamicHeight: height\r\n                        };\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Updates the plugin and DOM to the current options.\r\n                 * This method should only be called if a update is 100% required.\r\n                 * @param updateHints A objects which contains hints for this update:\r\n                 * {\r\n                 *   _hostSizeChanged : boolean,\r\n                 *   _contentSizeChanged : boolean,\r\n                 *   _force : boolean,                             == preventSwallowing\r\n                 *   _changedOptions : { },                        == preventSwallowing && preventSleep\r\n                *  }\r\n                 */\r\n                function update(updateHints) {\r\n                    clearTimeout(_swallowedUpdateTimeout);\r\n                    updateHints = updateHints || {};\r\n                    _swallowedUpdateHints._hostSizeChanged |= updateHints._hostSizeChanged;\r\n                    _swallowedUpdateHints._contentSizeChanged |= updateHints._contentSizeChanged;\r\n                    _swallowedUpdateHints._force |= updateHints._force;\r\n\r\n                    var now = COMPATIBILITY.now();\r\n                    var hostSizeChanged = !!_swallowedUpdateHints._hostSizeChanged;\r\n                    var contentSizeChanged = !!_swallowedUpdateHints._contentSizeChanged;\r\n                    var force = !!_swallowedUpdateHints._force;\r\n                    var changedOptions = updateHints._changedOptions;\r\n                    var swallow = _swallowUpdateLag > 0 && _initialized && !_destroyed && !force && !changedOptions && (now - _lastUpdateTime) < _swallowUpdateLag && (!_heightAutoCache && !_widthAutoCache);\r\n                    var displayIsHidden;\r\n\r\n                    if (swallow)\r\n                        _swallowedUpdateTimeout = setTimeout(update, _swallowUpdateLag);\r\n\r\n                    //abort update due to:\r\n                    //destroyed\r\n                    //swallowing\r\n                    //sleeping\r\n                    //host is hidden or has false display\r\n                    if (_destroyed || swallow || (_sleeping && !changedOptions) || (_initialized && !force && (displayIsHidden = _hostElement.is(':hidden'))) || _hostElement.css('display') === 'inline')\r\n                        return;\r\n\r\n                    _lastUpdateTime = now;\r\n                    _swallowedUpdateHints = {};\r\n\r\n                    //if scrollbar styling is possible and native scrollbars aren't overlaid the scrollbar styling will be applied which hides the native scrollbars completely.\r\n                    if (_nativeScrollbarStyling && !(_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)) {\r\n                        //native scrollbars are hidden, so change the values to zero\r\n                        _nativeScrollbarSize.x = 0;\r\n                        _nativeScrollbarSize.y = 0;\r\n                    }\r\n                    else {\r\n                        //refresh native scrollbar size (in case of zoom)\r\n                        _nativeScrollbarSize = extendDeep({}, globals.nativeScrollbarSize);\r\n                    }\r\n\r\n                    // Scrollbar padding is needed for firefox, because firefox hides scrollbar automatically if the size of the div is too small.\r\n                    // The calculation: [scrollbar size +3 *3]\r\n                    // (+3 because of possible decoration e.g. borders, margins etc., but only if native scrollbar is NOT a overlaid scrollbar)\r\n                    // (*3 because (1)increase / (2)decrease -button and (3)resize handle)\r\n                    _nativeScrollbarMinSize = {\r\n                        x: (_nativeScrollbarSize.x + (_nativeScrollbarIsOverlaid.x ? 0 : 3)) * 3,\r\n                        y: (_nativeScrollbarSize.y + (_nativeScrollbarIsOverlaid.y ? 0 : 3)) * 3\r\n                    };\r\n\r\n                    changedOptions = changedOptions || {};\r\n                    //freezeResizeObserver(_sizeObserverElement, true);\r\n                    //freezeResizeObserver(_sizeAutoObserverElement, true);\r\n\r\n                    var checkCacheAutoForce = function () {\r\n                        return checkCache.apply(this, [].slice.call(arguments).concat([force]));\r\n                    };\r\n\r\n                    //save current scroll offset\r\n                    var currScroll = {\r\n                        x: _viewportElement[_strScrollLeft](),\r\n                        y: _viewportElement[_strScrollTop]()\r\n                    };\r\n\r\n                    var currentPreparedOptionsScrollbars = _currentPreparedOptions.scrollbars;\r\n                    var currentPreparedOptionsTextarea = _currentPreparedOptions.textarea;\r\n\r\n                    //scrollbars visibility:\r\n                    var scrollbarsVisibility = currentPreparedOptionsScrollbars.visibility;\r\n                    var scrollbarsVisibilityChanged = checkCacheAutoForce(scrollbarsVisibility, _scrollbarsVisibilityCache);\r\n\r\n                    //scrollbars autoHide:\r\n                    var scrollbarsAutoHide = currentPreparedOptionsScrollbars.autoHide;\r\n                    var scrollbarsAutoHideChanged = checkCacheAutoForce(scrollbarsAutoHide, _scrollbarsAutoHideCache);\r\n\r\n                    //scrollbars click scrolling\r\n                    var scrollbarsClickScrolling = currentPreparedOptionsScrollbars.clickScrolling;\r\n                    var scrollbarsClickScrollingChanged = checkCacheAutoForce(scrollbarsClickScrolling, _scrollbarsClickScrollingCache);\r\n\r\n                    //scrollbars drag scrolling\r\n                    var scrollbarsDragScrolling = currentPreparedOptionsScrollbars.dragScrolling;\r\n                    var scrollbarsDragScrollingChanged = checkCacheAutoForce(scrollbarsDragScrolling, _scrollbarsDragScrollingCache);\r\n\r\n                    //className\r\n                    var className = _currentPreparedOptions.className;\r\n                    var classNameChanged = checkCacheAutoForce(className, _classNameCache);\r\n\r\n                    //resize\r\n                    var resize = _currentPreparedOptions.resize;\r\n                    var resizeChanged = checkCacheAutoForce(resize, _resizeCache) && !_isBody; //body can't be resized since the window itself acts as resize possibility.\r\n\r\n                    //paddingAbsolute\r\n                    var paddingAbsolute = _currentPreparedOptions.paddingAbsolute;\r\n                    var paddingAbsoluteChanged = checkCacheAutoForce(paddingAbsolute, _paddingAbsoluteCache);\r\n\r\n                    //clipAlways\r\n                    var clipAlways = _currentPreparedOptions.clipAlways;\r\n                    var clipAlwaysChanged = checkCacheAutoForce(clipAlways, _clipAlwaysCache);\r\n\r\n                    //sizeAutoCapable\r\n                    var sizeAutoCapable = _currentPreparedOptions.sizeAutoCapable && !_isBody; //body can never be size auto, because it shall be always as big as the viewport.\r\n                    var sizeAutoCapableChanged = checkCacheAutoForce(sizeAutoCapable, _sizeAutoCapableCache);\r\n\r\n                    //showNativeScrollbars\r\n                    var ignoreOverlayScrollbarHiding = _currentPreparedOptions.nativeScrollbarsOverlaid.showNativeScrollbars;\r\n                    var ignoreOverlayScrollbarHidingChanged = checkCacheAutoForce(ignoreOverlayScrollbarHiding, _ignoreOverlayScrollbarHidingCache);\r\n\r\n                    //autoUpdate\r\n                    var autoUpdate = _currentPreparedOptions.autoUpdate;\r\n                    var autoUpdateChanged = checkCacheAutoForce(autoUpdate, _autoUpdateCache);\r\n\r\n                    //overflowBehavior\r\n                    var overflowBehavior = _currentPreparedOptions.overflowBehavior;\r\n                    var overflowBehaviorChanged = checkCacheAutoForce(overflowBehavior, _overflowBehaviorCache, force);\r\n\r\n                    //dynWidth:\r\n                    var textareaDynWidth = currentPreparedOptionsTextarea.dynWidth;\r\n                    var textareaDynWidthChanged = checkCacheAutoForce(_textareaDynWidthCache, textareaDynWidth);\r\n\r\n                    //dynHeight:\r\n                    var textareaDynHeight = currentPreparedOptionsTextarea.dynHeight;\r\n                    var textareaDynHeightChanged = checkCacheAutoForce(_textareaDynHeightCache, textareaDynHeight);\r\n\r\n                    //scrollbars visibility\r\n                    _scrollbarsAutoHideNever = scrollbarsAutoHide === 'n';\r\n                    _scrollbarsAutoHideScroll = scrollbarsAutoHide === 's';\r\n                    _scrollbarsAutoHideMove = scrollbarsAutoHide === 'm';\r\n                    _scrollbarsAutoHideLeave = scrollbarsAutoHide === 'l';\r\n\r\n                    //scrollbars autoHideDelay\r\n                    _scrollbarsAutoHideDelay = currentPreparedOptionsScrollbars.autoHideDelay;\r\n\r\n                    //old className\r\n                    _oldClassName = _classNameCache;\r\n\r\n                    //resize\r\n                    _resizeNone = resize === 'n';\r\n                    _resizeBoth = resize === 'b';\r\n                    _resizeHorizontal = resize === 'h';\r\n                    _resizeVertical = resize === 'v';\r\n\r\n                    //normalizeRTL\r\n                    _normalizeRTLCache = _currentPreparedOptions.normalizeRTL;\r\n\r\n                    //ignore overlay scrollbar hiding\r\n                    ignoreOverlayScrollbarHiding = ignoreOverlayScrollbarHiding && (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y);\r\n\r\n                    //refresh options cache\r\n                    _scrollbarsVisibilityCache = scrollbarsVisibility;\r\n                    _scrollbarsAutoHideCache = scrollbarsAutoHide;\r\n                    _scrollbarsClickScrollingCache = scrollbarsClickScrolling;\r\n                    _scrollbarsDragScrollingCache = scrollbarsDragScrolling;\r\n                    _classNameCache = className;\r\n                    _resizeCache = resize;\r\n                    _paddingAbsoluteCache = paddingAbsolute;\r\n                    _clipAlwaysCache = clipAlways;\r\n                    _sizeAutoCapableCache = sizeAutoCapable;\r\n                    _ignoreOverlayScrollbarHidingCache = ignoreOverlayScrollbarHiding;\r\n                    _autoUpdateCache = autoUpdate;\r\n                    _overflowBehaviorCache = extendDeep({}, overflowBehavior);\r\n                    _textareaDynWidthCache = textareaDynWidth;\r\n                    _textareaDynHeightCache = textareaDynHeight;\r\n                    _hasOverflowCache = _hasOverflowCache || { x: false, y: false };\r\n\r\n                    //set correct class name to the host element\r\n                    if (classNameChanged) {\r\n                        removeClass(_hostElement, _oldClassName + _strSpace + _classNameThemeNone);\r\n                        addClass(_hostElement, className !== undefined && className !== null && className.length > 0 ? className : _classNameThemeNone);\r\n                    }\r\n\r\n                    //set correct auto Update\r\n                    if (autoUpdateChanged) {\r\n                        if (autoUpdate === true || (autoUpdate === null && _autoUpdateRecommended)) {\r\n                            disconnectMutationObservers();\r\n                            autoUpdateLoop.add(_base);\r\n                        }\r\n                        else {\r\n                            autoUpdateLoop.remove(_base);\r\n                            connectMutationObservers();\r\n                        }\r\n                    }\r\n\r\n                    //activate or deactivate size auto capability\r\n                    if (sizeAutoCapableChanged) {\r\n                        if (sizeAutoCapable) {\r\n                            if (_contentGlueElement) {\r\n                                _contentGlueElement.show();\r\n                            }\r\n                            else {\r\n                                _contentGlueElement = FRAMEWORK(generateDiv(_classNameContentGlueElement));\r\n                                _paddingElement.before(_contentGlueElement);\r\n                            }\r\n                            if (_sizeAutoObserverAdded) {\r\n                                _sizeAutoObserverElement.show();\r\n                            }\r\n                            else {\r\n                                _sizeAutoObserverElement = FRAMEWORK(generateDiv(_classNameSizeAutoObserverElement));\r\n                                _sizeAutoObserverElementNative = _sizeAutoObserverElement[0];\r\n\r\n                                _contentGlueElement.before(_sizeAutoObserverElement);\r\n                                var oldSize = { w: -1, h: -1 };\r\n                                setupResizeObserver(_sizeAutoObserverElement, function () {\r\n                                    var newSize = {\r\n                                        w: _sizeAutoObserverElementNative[LEXICON.oW],\r\n                                        h: _sizeAutoObserverElementNative[LEXICON.oH]\r\n                                    };\r\n                                    if (checkCache(newSize, oldSize)) {\r\n                                        if (_initialized && (_heightAutoCache && newSize.h > 0) || (_widthAutoCache && newSize.w > 0)) {\r\n                                            update();\r\n                                        }\r\n                                        else if (_initialized && (!_heightAutoCache && newSize.h === 0) || (!_widthAutoCache && newSize.w === 0)) {\r\n                                            update();\r\n                                        }\r\n                                    }\r\n                                    oldSize = newSize;\r\n                                });\r\n                                _sizeAutoObserverAdded = true;\r\n                                //fix heightAuto detector bug if height is fixed but contentHeight is 0.\r\n                                //the probability this bug will ever happen is very very low, thats why its ok if we use calc which isn't supported in IE8.\r\n                                if (_cssCalc !== null)\r\n                                    _sizeAutoObserverElement.css(_strHeight, _cssCalc + '(100% + 1px)');\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (_sizeAutoObserverAdded)\r\n                                _sizeAutoObserverElement.hide();\r\n                            if (_contentGlueElement)\r\n                                _contentGlueElement.hide();\r\n                        }\r\n                    }\r\n\r\n                    //if force, update all resizeObservers too\r\n                    if (force) {\r\n                        _sizeObserverElement.find('*').trigger(_strScroll);\r\n                        if (_sizeAutoObserverAdded)\r\n                            _sizeAutoObserverElement.find('*').trigger(_strScroll);\r\n                    }\r\n\r\n                    //display hidden:\r\n                    displayIsHidden = displayIsHidden === undefined ? _hostElement.is(':hidden') : displayIsHidden;\r\n\r\n                    //textarea AutoWrapping:\r\n                    var textareaAutoWrapping = _isTextarea ? _targetElement.attr('wrap') !== 'off' : false;\r\n                    var textareaAutoWrappingChanged = checkCacheAutoForce(textareaAutoWrapping, _textareaAutoWrappingCache);\r\n\r\n                    //detect direction:\r\n                    var cssDirection = _hostElement.css('direction');\r\n                    var cssDirectionChanged = checkCacheAutoForce(cssDirection, _cssDirectionCache);\r\n\r\n                    //detect box-sizing:\r\n                    var boxSizing = _hostElement.css('box-sizing');\r\n                    var boxSizingChanged = checkCacheAutoForce(boxSizing, _cssBoxSizingCache);\r\n\r\n                    //detect padding:\r\n                    var padding = getTopRightBottomLeftHost(_strPaddingMinus);\r\n\r\n                    //width + height auto detecting var:\r\n                    var sizeAutoObserverElementBCRect;\r\n                    //exception occurs in IE8 sometimes (unknown exception)\r\n                    try {\r\n                        sizeAutoObserverElementBCRect = _sizeAutoObserverAdded ? _sizeAutoObserverElementNative[LEXICON.bCR]() : null;\r\n                    } catch (ex) {\r\n                        return;\r\n                    }\r\n\r\n                    _isRTL = cssDirection === 'rtl';\r\n                    _isBorderBox = (boxSizing === 'border-box');\r\n                    var isRTLLeft = _isRTL ? _strLeft : _strRight;\r\n                    var isRTLRight = _isRTL ? _strRight : _strLeft;\r\n\r\n                    //detect width auto:\r\n                    var widthAutoResizeDetection = false;\r\n                    var widthAutoObserverDetection = (_sizeAutoObserverAdded && (_hostElement.css(_strFloat) !== 'none' /*|| _isTextarea */)) ? (MATH.round(sizeAutoObserverElementBCRect.right - sizeAutoObserverElementBCRect.left) === 0) && (!paddingAbsolute ? (_hostElementNative[LEXICON.cW] - _paddingX) > 0 : true) : false;\r\n                    if (sizeAutoCapable && !widthAutoObserverDetection) {\r\n                        var tmpCurrHostWidth = _hostElementNative[LEXICON.oW];\r\n                        var tmpCurrContentGlueWidth = _contentGlueElement.css(_strWidth);\r\n                        _contentGlueElement.css(_strWidth, _strAuto);\r\n\r\n                        var tmpNewHostWidth = _hostElementNative[LEXICON.oW];\r\n                        _contentGlueElement.css(_strWidth, tmpCurrContentGlueWidth);\r\n                        widthAutoResizeDetection = tmpCurrHostWidth !== tmpNewHostWidth;\r\n                        if (!widthAutoResizeDetection) {\r\n                            _contentGlueElement.css(_strWidth, tmpCurrHostWidth + 1);\r\n                            tmpNewHostWidth = _hostElementNative[LEXICON.oW];\r\n                            _contentGlueElement.css(_strWidth, tmpCurrContentGlueWidth);\r\n                            widthAutoResizeDetection = tmpCurrHostWidth !== tmpNewHostWidth;\r\n                        }\r\n                    }\r\n                    var widthAuto = (widthAutoObserverDetection || widthAutoResizeDetection) && sizeAutoCapable && !displayIsHidden;\r\n                    var widthAutoChanged = checkCacheAutoForce(widthAuto, _widthAutoCache);\r\n                    var wasWidthAuto = !widthAuto && _widthAutoCache;\r\n\r\n                    //detect height auto:\r\n                    var heightAuto = _sizeAutoObserverAdded && sizeAutoCapable && !displayIsHidden ? (MATH.round(sizeAutoObserverElementBCRect.bottom - sizeAutoObserverElementBCRect.top) === 0) /* && (!paddingAbsolute && (_msieVersion > 9 || !_msieVersion) ? true : true) */ : false;\r\n                    var heightAutoChanged = checkCacheAutoForce(heightAuto, _heightAutoCache);\r\n                    var wasHeightAuto = !heightAuto && _heightAutoCache;\r\n\r\n                    //detect border:\r\n                    //we need the border only if border box and auto size\r\n                    var updateBorderX = (widthAuto && _isBorderBox) || !_isBorderBox;\r\n                    var updateBorderY = (heightAuto && _isBorderBox) || !_isBorderBox;\r\n                    var border = getTopRightBottomLeftHost(_strBorderMinus, '-' + _strWidth, !updateBorderX, !updateBorderY)\r\n\r\n                    //detect margin:\r\n                    var margin = getTopRightBottomLeftHost(_strMarginMinus);\r\n\r\n                    //vars to apply correct css\r\n                    var contentElementCSS = {};\r\n                    var contentGlueElementCSS = {};\r\n\r\n                    //funcs\r\n                    var getHostSize = function () {\r\n                        //has to be clientSize because offsetSize respect borders\r\n                        return {\r\n                            w: _hostElementNative[LEXICON.cW],\r\n                            h: _hostElementNative[LEXICON.cH]\r\n                        };\r\n                    };\r\n                    var getViewportSize = function () {\r\n                        //viewport size is padding container because it never has padding, margin and a border\r\n                        //determine zoom rounding error -> sometimes scrollWidth/Height is smaller than clientWidth/Height\r\n                        //if this happens add the difference to the viewportSize to compensate the rounding error\r\n                        return {\r\n                            w: _paddingElementNative[LEXICON.oW] + MATH.max(0, _contentElementNative[LEXICON.cW] - _contentElementNative[LEXICON.sW]),\r\n                            h: _paddingElementNative[LEXICON.oH] + MATH.max(0, _contentElementNative[LEXICON.cH] - _contentElementNative[LEXICON.sH])\r\n                        };\r\n                    };\r\n\r\n                    //set info for padding\r\n                    var paddingAbsoluteX = _paddingX = padding.l + padding.r;\r\n                    var paddingAbsoluteY = _paddingY = padding.t + padding.b;\r\n                    paddingAbsoluteX *= paddingAbsolute ? 1 : 0;\r\n                    paddingAbsoluteY *= paddingAbsolute ? 1 : 0;\r\n                    padding.c = checkCacheAutoForce(padding, _cssPaddingCache);\r\n\r\n                    //set info for border\r\n                    _borderX = border.l + border.r;\r\n                    _borderY = border.t + border.b;\r\n                    border.c = checkCacheAutoForce(border, _cssBorderCache);\r\n\r\n                    //set info for margin\r\n                    _marginX = margin.l + margin.r;\r\n                    _marginY = margin.t + margin.b;\r\n                    margin.c = checkCacheAutoForce(margin, _cssMarginCache);\r\n\r\n                    //refresh cache\r\n                    _textareaAutoWrappingCache = textareaAutoWrapping;\r\n                    _cssDirectionCache = cssDirection;\r\n                    _cssBoxSizingCache = boxSizing;\r\n                    _widthAutoCache = widthAuto;\r\n                    _heightAutoCache = heightAuto;\r\n                    _cssPaddingCache = padding;\r\n                    _cssBorderCache = border;\r\n                    _cssMarginCache = margin;\r\n\r\n                    //IEFix direction changed\r\n                    if (cssDirectionChanged && _sizeAutoObserverAdded)\r\n                        _sizeAutoObserverElement.css(_strFloat, isRTLRight);\r\n\r\n                    //apply padding:\r\n                    if (padding.c || cssDirectionChanged || paddingAbsoluteChanged || widthAutoChanged || heightAutoChanged || boxSizingChanged || sizeAutoCapableChanged) {\r\n                        var paddingElementCSS = {};\r\n                        var textareaCSS = {};\r\n                        var paddingValues = [padding.t, padding.r, padding.b, padding.l];\r\n\r\n                        setTopRightBottomLeft(contentGlueElementCSS, _strMarginMinus, [-padding.t, -padding.r, -padding.b, -padding.l]);\r\n                        if (paddingAbsolute) {\r\n                            setTopRightBottomLeft(paddingElementCSS, _strEmpty, paddingValues);\r\n                            setTopRightBottomLeft(_isTextarea ? textareaCSS : contentElementCSS, _strPaddingMinus);\r\n                        }\r\n                        else {\r\n                            setTopRightBottomLeft(paddingElementCSS, _strEmpty);\r\n                            setTopRightBottomLeft(_isTextarea ? textareaCSS : contentElementCSS, _strPaddingMinus, paddingValues);\r\n                        }\r\n\r\n                        _paddingElement.css(paddingElementCSS);\r\n                        _targetElement.css(textareaCSS);\r\n                    }\r\n\r\n                    //viewport size is padding container because it never has padding, margin and a border.\r\n                    _viewportSize = getViewportSize();\r\n\r\n                    //update Textarea\r\n                    var textareaSize = _isTextarea ? textareaUpdate() : false;\r\n                    var textareaSizeChanged = _isTextarea && checkCacheAutoForce(textareaSize, _textareaSizeCache);\r\n                    var textareaDynOrigSize = _isTextarea && textareaSize ? {\r\n                        w: textareaDynWidth ? textareaSize._dynamicWidth : textareaSize._originalWidth,\r\n                        h: textareaDynHeight ? textareaSize._dynamicHeight : textareaSize._originalHeight\r\n                    } : {};\r\n                    _textareaSizeCache = textareaSize;\r\n\r\n                    //fix height auto / width auto in cooperation with current padding & boxSizing behavior:\r\n                    if (heightAuto && (heightAutoChanged || paddingAbsoluteChanged || boxSizingChanged || padding.c || border.c)) {\r\n                        contentElementCSS[_strHeight] = _strAuto;\r\n                    }\r\n                    else if (heightAutoChanged || paddingAbsoluteChanged) {\r\n                        contentElementCSS[_strHeight] = _strHundredPercent;\r\n                    }\r\n                    if (widthAuto && (widthAutoChanged || paddingAbsoluteChanged || boxSizingChanged || padding.c || border.c || cssDirectionChanged)) {\r\n                        contentElementCSS[_strWidth] = _strAuto;\r\n                        contentGlueElementCSS[_strMaxMinus + _strWidth] = _strHundredPercent; //IE Fix\r\n                    }\r\n                    else if (widthAutoChanged || paddingAbsoluteChanged) {\r\n                        contentElementCSS[_strWidth] = _strHundredPercent;\r\n                        contentElementCSS[_strFloat] = _strEmpty;\r\n                        contentGlueElementCSS[_strMaxMinus + _strWidth] = _strEmpty; //IE Fix\r\n                    }\r\n                    if (widthAuto) {\r\n                        //textareaDynOrigSize.w || _strAuto :: doesnt works because applied margin will shift width\r\n                        contentGlueElementCSS[_strWidth] = _strAuto;\r\n\r\n                        contentElementCSS[_strWidth] = VENDORS._cssPropertyValue(_strWidth, 'max-content intrinsic') || _strAuto;\r\n                        contentElementCSS[_strFloat] = isRTLRight;\r\n                    }\r\n                    else {\r\n                        contentGlueElementCSS[_strWidth] = _strEmpty;\r\n                    }\r\n                    if (heightAuto) {\r\n                        //textareaDynOrigSize.h || _contentElementNative[LEXICON.cH] :: use for anti scroll jumping\r\n                        contentGlueElementCSS[_strHeight] = textareaDynOrigSize.h || _contentElementNative[LEXICON.cH];\r\n                    }\r\n                    else {\r\n                        contentGlueElementCSS[_strHeight] = _strEmpty;\r\n                    }\r\n                    if (sizeAutoCapable)\r\n                        _contentGlueElement.css(contentGlueElementCSS);\r\n                    _contentElement.css(contentElementCSS);\r\n\r\n                    //CHECKPOINT HERE ~\r\n                    contentElementCSS = {};\r\n                    contentGlueElementCSS = {};\r\n\r\n                    //if [content(host) client / scroll size, or target element direction, or content(host) max-sizes] changed, or force is true\r\n                    if (hostSizeChanged || contentSizeChanged || textareaSizeChanged || cssDirectionChanged || boxSizingChanged || paddingAbsoluteChanged || widthAutoChanged || widthAuto || heightAutoChanged || heightAuto || ignoreOverlayScrollbarHidingChanged || overflowBehaviorChanged || clipAlwaysChanged || resizeChanged || scrollbarsVisibilityChanged || scrollbarsAutoHideChanged || scrollbarsDragScrollingChanged || scrollbarsClickScrollingChanged || textareaDynWidthChanged || textareaDynHeightChanged || textareaAutoWrappingChanged) {\r\n                        var strOverflow = 'overflow';\r\n                        var strOverflowX = strOverflow + '-x';\r\n                        var strOverflowY = strOverflow + '-y';\r\n                        var strHidden = 'hidden';\r\n                        var strVisible = 'visible';\r\n\r\n                        //Reset the viewport (very important for natively overlaid scrollbars and zoom change\r\n                        //don't change the overflow prop as it is very expensive and affects performance !A LOT!\r\n                        if (!_nativeScrollbarStyling) {\r\n                            var viewportElementResetCSS = {};\r\n                            var resetXTmp = _hasOverflowCache.y && _hideOverflowCache.ys && !ignoreOverlayScrollbarHiding ? (_nativeScrollbarIsOverlaid.y ? _viewportElement.css(isRTLLeft) : -_nativeScrollbarSize.y) : 0;\r\n                            var resetBottomTmp = _hasOverflowCache.x && _hideOverflowCache.xs && !ignoreOverlayScrollbarHiding ? (_nativeScrollbarIsOverlaid.x ? _viewportElement.css(_strBottom) : -_nativeScrollbarSize.x) : 0;\r\n                            setTopRightBottomLeft(viewportElementResetCSS, _strEmpty);\r\n                            _viewportElement.css(viewportElementResetCSS);\r\n                        }\r\n\r\n                        //measure several sizes:\r\n                        var contentMeasureElement = getContentMeasureElement();\r\n                        //in Firefox content element has to have overflow hidden, else element margins aren't calculated properly, this element prevents this bug, but only if scrollbars aren't overlaid\r\n                        var contentSize = {\r\n                            //use clientSize because natively overlaidScrollbars add borders\r\n                            w: textareaDynOrigSize.w || contentMeasureElement[LEXICON.cW],\r\n                            h: textareaDynOrigSize.h || contentMeasureElement[LEXICON.cH]\r\n                        };\r\n                        var scrollSize = {\r\n                            w: contentMeasureElement[LEXICON.sW],\r\n                            h: contentMeasureElement[LEXICON.sH]\r\n                        };\r\n\r\n                        //apply the correct viewport style and measure viewport size\r\n                        if (!_nativeScrollbarStyling) {\r\n                            viewportElementResetCSS[_strBottom] = wasHeightAuto ? _strEmpty : resetBottomTmp;\r\n                            viewportElementResetCSS[isRTLLeft] = wasWidthAuto ? _strEmpty : resetXTmp;\r\n                            _viewportElement.css(viewportElementResetCSS);\r\n                        }\r\n                        _viewportSize = getViewportSize();\r\n\r\n                        //measure and correct several sizes\r\n                        var hostSize = getHostSize();\r\n                        var hostAbsoluteRectSize = {\r\n                            w: hostSize.w - _marginX - _borderX - (_isBorderBox ? 0 : _paddingX),\r\n                            h: hostSize.h - _marginY - _borderY - (_isBorderBox ? 0 : _paddingY)\r\n                        };\r\n                        var contentGlueSize = {\r\n                            //client/scrollSize + AbsolutePadding -> because padding is only applied to the paddingElement if its absolute, so you have to add it manually\r\n                            //hostSize is clientSize -> so padding should be added manually, right? FALSE! Because content glue is inside hostElement, so we don't have to worry about padding\r\n                            w: MATH.max((widthAuto ? contentSize.w : scrollSize.w) + paddingAbsoluteX, hostAbsoluteRectSize.w),\r\n                            h: MATH.max((heightAuto ? contentSize.h : scrollSize.h) + paddingAbsoluteY, hostAbsoluteRectSize.h)\r\n                        };\r\n                        contentGlueSize.c = checkCacheAutoForce(contentGlueSize, _contentGlueSizeCache);\r\n                        _contentGlueSizeCache = contentGlueSize;\r\n\r\n                        //apply correct contentGlue size\r\n                        if (sizeAutoCapable) {\r\n                            //size contentGlue correctly to make sure the element has correct size if the sizing switches to auto\r\n                            if (contentGlueSize.c || (heightAuto || widthAuto)) {\r\n                                contentGlueElementCSS[_strWidth] = contentGlueSize.w;\r\n                                contentGlueElementCSS[_strHeight] = contentGlueSize.h;\r\n\r\n                                //textarea-sizes are already calculated correctly at this point\r\n                                if (!_isTextarea) {\r\n                                    contentSize = {\r\n                                        //use clientSize because natively overlaidScrollbars add borders\r\n                                        w: contentMeasureElement[LEXICON.cW],\r\n                                        h: contentMeasureElement[LEXICON.cH]\r\n                                    };\r\n                                }\r\n                            }\r\n                            var textareaCoverCSS = {};\r\n                            var setContentGlueElementCSSfunction = function (horizontal) {\r\n                                var scrollbarVars = getScrollbarVars(horizontal);\r\n                                var wh = scrollbarVars._w_h;\r\n                                var strWH = scrollbarVars._width_height;\r\n                                var autoSize = horizontal ? widthAuto : heightAuto;\r\n                                var borderSize = horizontal ? _borderX : _borderY;\r\n                                var paddingSize = horizontal ? _paddingX : _paddingY;\r\n                                var marginSize = horizontal ? _marginX : _marginY;\r\n                                var viewportSize = _viewportSize[wh] - borderSize - marginSize - (_isBorderBox ? 0 : paddingSize);\r\n\r\n                                //make contentGlue size -1 if element is not auto sized, to make sure that a resize event happens when the element shrinks\r\n                                if (!autoSize || (!autoSize && border.c))\r\n                                    contentGlueElementCSS[strWH] = hostAbsoluteRectSize[wh] - 1;\r\n\r\n                                //if size is auto and host is smaller than size as min size, make content glue size -1 to make sure size changes will be detected (this is only needed if padding is 0)\r\n                                if (autoSize && (contentSize[wh] < viewportSize) && (horizontal && _isTextarea ? !textareaAutoWrapping : true)) {\r\n                                    if (_isTextarea)\r\n                                        textareaCoverCSS[strWH] = parseToZeroOrNumber(_textareaCoverElement.css(strWH)) - 1;\r\n                                    contentGlueElementCSS[strWH] -= 1;\r\n                                }\r\n\r\n                                //make sure content glue size is at least 1\r\n                                if (contentSize[wh] > 0)\r\n                                    contentGlueElementCSS[strWH] = MATH.max(1, contentGlueElementCSS[strWH]);\r\n                            };\r\n                            setContentGlueElementCSSfunction(true);\r\n                            setContentGlueElementCSSfunction(false);\r\n\r\n                            if (_isTextarea)\r\n                                _textareaCoverElement.css(textareaCoverCSS);\r\n                            _contentGlueElement.css(contentGlueElementCSS);\r\n                        }\r\n                        if (widthAuto)\r\n                            contentElementCSS[_strWidth] = _strHundredPercent;\r\n                        if (widthAuto && !_isBorderBox && !_mutationObserversConnected)\r\n                            contentElementCSS[_strFloat] = 'none';\r\n\r\n                        //apply and reset content style\r\n                        _contentElement.css(contentElementCSS);\r\n                        contentElementCSS = {};\r\n\r\n                        //measure again, but this time all correct sizes:\r\n                        var contentScrollSize = {\r\n                            w: contentMeasureElement[LEXICON.sW],\r\n                            h: contentMeasureElement[LEXICON.sH],\r\n                        };\r\n                        contentScrollSize.c = contentSizeChanged = checkCacheAutoForce(contentScrollSize, _contentScrollSizeCache);\r\n                        _contentScrollSizeCache = contentScrollSize;\r\n\r\n                        //refresh viewport size after correct measuring\r\n                        _viewportSize = getViewportSize();\r\n\r\n                        hostSize = getHostSize();\r\n                        hostSizeChanged = checkCacheAutoForce(hostSize, _hostSizeCache);\r\n                        _hostSizeCache = hostSize;\r\n\r\n                        var hideOverflowForceTextarea = _isTextarea && (_viewportSize.w === 0 || _viewportSize.h === 0);\r\n                        var previousOverflowAmount = _overflowAmountCache;\r\n                        var overflowBehaviorIsVS = {};\r\n                        var overflowBehaviorIsVH = {};\r\n                        var overflowBehaviorIsS = {};\r\n                        var overflowAmount = {};\r\n                        var hasOverflow = {};\r\n                        var hideOverflow = {};\r\n                        var canScroll = {};\r\n                        var viewportRect = _paddingElementNative[LEXICON.bCR]();\r\n                        var setOverflowVariables = function (horizontal) {\r\n                            var scrollbarVars = getScrollbarVars(horizontal);\r\n                            var scrollbarVarsInverted = getScrollbarVars(!horizontal);\r\n                            var xyI = scrollbarVarsInverted._x_y;\r\n                            var xy = scrollbarVars._x_y;\r\n                            var wh = scrollbarVars._w_h;\r\n                            var widthHeight = scrollbarVars._width_height;\r\n                            var scrollMax = _strScroll + scrollbarVars._Left_Top + 'Max';\r\n                            var fractionalOverflowAmount = viewportRect[widthHeight] ? MATH.abs(viewportRect[widthHeight] - _viewportSize[wh]) : 0;\r\n                            var checkFractionalOverflowAmount = previousOverflowAmount && previousOverflowAmount[xy] > 0 && _viewportElementNative[scrollMax] === 0;\r\n                            overflowBehaviorIsVS[xy] = overflowBehavior[xy] === 'v-s';\r\n                            overflowBehaviorIsVH[xy] = overflowBehavior[xy] === 'v-h';\r\n                            overflowBehaviorIsS[xy] = overflowBehavior[xy] === 's';\r\n                            overflowAmount[xy] = MATH.max(0, MATH.round((contentScrollSize[wh] - _viewportSize[wh]) * 100) / 100);\r\n                            overflowAmount[xy] *= (hideOverflowForceTextarea || (checkFractionalOverflowAmount && fractionalOverflowAmount > 0 && fractionalOverflowAmount < 1)) ? 0 : 1;\r\n                            hasOverflow[xy] = overflowAmount[xy] > 0;\r\n\r\n                            //hideOverflow:\r\n                            //x || y : true === overflow is hidden by \"overflow: scroll\" OR \"overflow: hidden\"\r\n                            //xs || ys : true === overflow is hidden by \"overflow: scroll\"\r\n                            hideOverflow[xy] = overflowBehaviorIsVS[xy] || overflowBehaviorIsVH[xy] ? (hasOverflow[xyI] && !overflowBehaviorIsVS[xyI] && !overflowBehaviorIsVH[xyI]) : hasOverflow[xy];\r\n                            hideOverflow[xy + 's'] = hideOverflow[xy] ? (overflowBehaviorIsS[xy] || overflowBehaviorIsVS[xy]) : false;\r\n\r\n                            canScroll[xy] = hasOverflow[xy] && hideOverflow[xy + 's'];\r\n                        };\r\n                        setOverflowVariables(true);\r\n                        setOverflowVariables(false);\r\n\r\n                        overflowAmount.c = checkCacheAutoForce(overflowAmount, _overflowAmountCache);\r\n                        _overflowAmountCache = overflowAmount;\r\n                        hasOverflow.c = checkCacheAutoForce(hasOverflow, _hasOverflowCache);\r\n                        _hasOverflowCache = hasOverflow;\r\n                        hideOverflow.c = checkCacheAutoForce(hideOverflow, _hideOverflowCache);\r\n                        _hideOverflowCache = hideOverflow;\r\n\r\n                        //if native scrollbar is overlay at x OR y axis, prepare DOM\r\n                        if (_nativeScrollbarIsOverlaid.x || _nativeScrollbarIsOverlaid.y) {\r\n                            var borderDesign = 'px solid transparent';\r\n                            var contentArrangeElementCSS = {};\r\n                            var arrangeContent = {};\r\n                            var arrangeChanged = force;\r\n                            var setContentElementCSS;\r\n\r\n                            if (hasOverflow.x || hasOverflow.y) {\r\n                                arrangeContent.w = _nativeScrollbarIsOverlaid.y && hasOverflow.y ? contentScrollSize.w + _overlayScrollbarDummySize.y : _strEmpty;\r\n                                arrangeContent.h = _nativeScrollbarIsOverlaid.x && hasOverflow.x ? contentScrollSize.h + _overlayScrollbarDummySize.x : _strEmpty;\r\n                                arrangeChanged = checkCacheAutoForce(arrangeContent, _arrangeContentSizeCache);\r\n                                _arrangeContentSizeCache = arrangeContent;\r\n                            }\r\n\r\n                            if (hasOverflow.c || hideOverflow.c || contentScrollSize.c || cssDirectionChanged || widthAutoChanged || heightAutoChanged || widthAuto || heightAuto || ignoreOverlayScrollbarHidingChanged) {\r\n                                contentElementCSS[_strMarginMinus + isRTLRight] = contentElementCSS[_strBorderMinus + isRTLRight] = _strEmpty;\r\n                                setContentElementCSS = function (horizontal) {\r\n                                    var scrollbarVars = getScrollbarVars(horizontal);\r\n                                    var scrollbarVarsInverted = getScrollbarVars(!horizontal);\r\n                                    var xy = scrollbarVars._x_y;\r\n                                    var strDirection = horizontal ? _strBottom : isRTLLeft;\r\n                                    var invertedAutoSize = horizontal ? heightAuto : widthAuto;\r\n\r\n                                    if (_nativeScrollbarIsOverlaid[xy] && hasOverflow[xy] && hideOverflow[xy + 's']) {\r\n                                        contentElementCSS[_strMarginMinus + strDirection] = invertedAutoSize ? (ignoreOverlayScrollbarHiding ? _strEmpty : _overlayScrollbarDummySize[xy]) : _strEmpty;\r\n                                        contentElementCSS[_strBorderMinus + strDirection] = ((horizontal ? !invertedAutoSize : true) && !ignoreOverlayScrollbarHiding) ? (_overlayScrollbarDummySize[xy] + borderDesign) : _strEmpty;\r\n                                    }\r\n                                    else {\r\n                                        arrangeContent[scrollbarVarsInverted._w_h] =\r\n                                            contentElementCSS[_strMarginMinus + strDirection] =\r\n                                            contentElementCSS[_strBorderMinus + strDirection] = _strEmpty;\r\n                                        arrangeChanged = true;\r\n                                    }\r\n                                };\r\n\r\n                                if (_nativeScrollbarStyling) {\r\n                                    addRemoveClass(_viewportElement, _classNameViewportNativeScrollbarsInvisible, !ignoreOverlayScrollbarHiding)\r\n                                }\r\n                                else {\r\n                                    setContentElementCSS(true);\r\n                                    setContentElementCSS(false);\r\n                                }\r\n                            }\r\n                            if (ignoreOverlayScrollbarHiding) {\r\n                                arrangeContent.w = arrangeContent.h = _strEmpty;\r\n                                arrangeChanged = true;\r\n                            }\r\n                            if (arrangeChanged && !_nativeScrollbarStyling) {\r\n                                contentArrangeElementCSS[_strWidth] = hideOverflow.y ? arrangeContent.w : _strEmpty;\r\n                                contentArrangeElementCSS[_strHeight] = hideOverflow.x ? arrangeContent.h : _strEmpty;\r\n\r\n                                if (!_contentArrangeElement) {\r\n                                    _contentArrangeElement = FRAMEWORK(generateDiv(_classNameContentArrangeElement));\r\n                                    _viewportElement.prepend(_contentArrangeElement);\r\n                                }\r\n                                _contentArrangeElement.css(contentArrangeElementCSS);\r\n                            }\r\n                            _contentElement.css(contentElementCSS);\r\n                        }\r\n\r\n                        var viewportElementCSS = {};\r\n                        var paddingElementCSS = {};\r\n                        var setViewportCSS;\r\n                        if (hostSizeChanged || hasOverflow.c || hideOverflow.c || contentScrollSize.c || overflowBehaviorChanged || boxSizingChanged || ignoreOverlayScrollbarHidingChanged || cssDirectionChanged || clipAlwaysChanged || heightAutoChanged) {\r\n                            viewportElementCSS[isRTLRight] = _strEmpty;\r\n                            setViewportCSS = function (horizontal) {\r\n                                var scrollbarVars = getScrollbarVars(horizontal);\r\n                                var scrollbarVarsInverted = getScrollbarVars(!horizontal);\r\n                                var xy = scrollbarVars._x_y;\r\n                                var XY = scrollbarVars._X_Y;\r\n                                var strDirection = horizontal ? _strBottom : isRTLLeft;\r\n\r\n                                var reset = function () {\r\n                                    viewportElementCSS[strDirection] = _strEmpty;\r\n                                    _contentBorderSize[scrollbarVarsInverted._w_h] = 0;\r\n                                };\r\n                                if (hasOverflow[xy] && hideOverflow[xy + 's']) {\r\n                                    viewportElementCSS[strOverflow + XY] = _strScroll;\r\n                                    if (ignoreOverlayScrollbarHiding || _nativeScrollbarStyling) {\r\n                                        reset();\r\n                                    }\r\n                                    else {\r\n                                        viewportElementCSS[strDirection] = -(_nativeScrollbarIsOverlaid[xy] ? _overlayScrollbarDummySize[xy] : _nativeScrollbarSize[xy]);\r\n                                        _contentBorderSize[scrollbarVarsInverted._w_h] = _nativeScrollbarIsOverlaid[xy] ? _overlayScrollbarDummySize[scrollbarVarsInverted._x_y] : 0;\r\n                                    }\r\n                                } else {\r\n                                    viewportElementCSS[strOverflow + XY] = _strEmpty;\r\n                                    reset();\r\n                                }\r\n                            };\r\n                            setViewportCSS(true);\r\n                            setViewportCSS(false);\r\n\r\n                            // if the scroll container is too small and if there is any overflow with no overlay scrollbar (and scrollbar styling isn't possible), \r\n                            // make viewport element greater in size (Firefox hide Scrollbars fix)\r\n                            // because firefox starts hiding scrollbars on too small elements\r\n                            // with this behavior the overflow calculation may be incorrect or the scrollbars would appear suddenly\r\n                            // https://bugzilla.mozilla.org/show_bug.cgi?id=292284\r\n                            if (!_nativeScrollbarStyling\r\n                                && (_viewportSize.h < _nativeScrollbarMinSize.x || _viewportSize.w < _nativeScrollbarMinSize.y)\r\n                                && ((hasOverflow.x && hideOverflow.x && !_nativeScrollbarIsOverlaid.x) || (hasOverflow.y && hideOverflow.y && !_nativeScrollbarIsOverlaid.y))) {\r\n                                viewportElementCSS[_strPaddingMinus + _strTop] = _nativeScrollbarMinSize.x;\r\n                                viewportElementCSS[_strMarginMinus + _strTop] = -_nativeScrollbarMinSize.x;\r\n\r\n                                viewportElementCSS[_strPaddingMinus + isRTLRight] = _nativeScrollbarMinSize.y;\r\n                                viewportElementCSS[_strMarginMinus + isRTLRight] = -_nativeScrollbarMinSize.y;\r\n                            }\r\n                            else {\r\n                                viewportElementCSS[_strPaddingMinus + _strTop] =\r\n                                    viewportElementCSS[_strMarginMinus + _strTop] =\r\n                                    viewportElementCSS[_strPaddingMinus + isRTLRight] =\r\n                                    viewportElementCSS[_strMarginMinus + isRTLRight] = _strEmpty;\r\n                            }\r\n                            viewportElementCSS[_strPaddingMinus + isRTLLeft] =\r\n                                viewportElementCSS[_strMarginMinus + isRTLLeft] = _strEmpty;\r\n\r\n                            //if there is any overflow (x OR y axis) and this overflow shall be hidden, make overflow hidden, else overflow visible\r\n                            if ((hasOverflow.x && hideOverflow.x) || (hasOverflow.y && hideOverflow.y) || hideOverflowForceTextarea) {\r\n                                //only hide if is Textarea\r\n                                if (_isTextarea && hideOverflowForceTextarea) {\r\n                                    paddingElementCSS[strOverflowX] =\r\n                                        paddingElementCSS[strOverflowY] = strHidden;\r\n                                }\r\n                            }\r\n                            else {\r\n                                if (!clipAlways || (overflowBehaviorIsVH.x || overflowBehaviorIsVS.x || overflowBehaviorIsVH.y || overflowBehaviorIsVS.y)) {\r\n                                    //only un-hide if Textarea\r\n                                    if (_isTextarea) {\r\n                                        paddingElementCSS[strOverflowX] =\r\n                                            paddingElementCSS[strOverflowY] = _strEmpty;\r\n                                    }\r\n                                    viewportElementCSS[strOverflowX] =\r\n                                        viewportElementCSS[strOverflowY] = strVisible;\r\n                                }\r\n                            }\r\n\r\n                            _paddingElement.css(paddingElementCSS);\r\n                            _viewportElement.css(viewportElementCSS);\r\n                            viewportElementCSS = {};\r\n\r\n                            //force soft redraw in webkit because without the scrollbars will may appear because DOM wont be redrawn under special conditions\r\n                            if ((hasOverflow.c || boxSizingChanged || widthAutoChanged || heightAutoChanged) && !(_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)) {\r\n                                var elementStyle = _contentElementNative[LEXICON.s];\r\n                                var dump;\r\n                                elementStyle.webkitTransform = 'scale(1)';\r\n                                elementStyle.display = 'run-in';\r\n                                dump = _contentElementNative[LEXICON.oH];\r\n                                elementStyle.display = _strEmpty; //|| dump; //use dump to prevent it from deletion if minify\r\n                                elementStyle.webkitTransform = _strEmpty;\r\n                            }\r\n                            /*\r\n                            //force hard redraw in webkit if native overlaid scrollbars shall appear\r\n                            if (ignoreOverlayScrollbarHidingChanged && ignoreOverlayScrollbarHiding) {\r\n                                _hostElement.hide();\r\n                                var dump = _hostElementNative[LEXICON.oH];\r\n                                _hostElement.show();\r\n                            }\r\n                            */\r\n                        }\r\n\r\n                        //change to direction RTL and width auto Bugfix in Webkit\r\n                        //without this fix, the DOM still thinks the scrollbar is LTR and thus the content is shifted to the left\r\n                        contentElementCSS = {};\r\n                        if (cssDirectionChanged || widthAutoChanged || heightAutoChanged) {\r\n                            if (_isRTL && widthAuto) {\r\n                                var floatTmp = _contentElement.css(_strFloat);\r\n                                var posLeftWithoutFloat = MATH.round(_contentElement.css(_strFloat, _strEmpty).css(_strLeft, _strEmpty).position().left);\r\n                                _contentElement.css(_strFloat, floatTmp);\r\n                                var posLeftWithFloat = MATH.round(_contentElement.position().left);\r\n\r\n                                if (posLeftWithoutFloat !== posLeftWithFloat)\r\n                                    contentElementCSS[_strLeft] = posLeftWithoutFloat;\r\n                            }\r\n                            else {\r\n                                contentElementCSS[_strLeft] = _strEmpty;\r\n                            }\r\n                        }\r\n                        _contentElement.css(contentElementCSS);\r\n\r\n                        //handle scroll position\r\n                        if (_isTextarea && contentSizeChanged) {\r\n                            var textareaInfo = getTextareaInfo();\r\n                            if (textareaInfo) {\r\n                                var textareaRowsChanged = _textareaInfoCache === undefined ? true : textareaInfo._rows !== _textareaInfoCache._rows;\r\n                                var cursorRow = textareaInfo._cursorRow;\r\n                                var cursorCol = textareaInfo._cursorColumn;\r\n                                var widestRow = textareaInfo._widestRow;\r\n                                var lastRow = textareaInfo._rows;\r\n                                var lastCol = textareaInfo._columns;\r\n                                var cursorPos = textareaInfo._cursorPosition;\r\n                                var cursorMax = textareaInfo._cursorMax;\r\n                                var cursorIsLastPosition = (cursorPos >= cursorMax && _textareaHasFocus);\r\n                                var textareaScrollAmount = {\r\n                                    x: (!textareaAutoWrapping && (cursorCol === lastCol && cursorRow === widestRow)) ? _overflowAmountCache.x : -1,\r\n                                    y: (textareaAutoWrapping ? cursorIsLastPosition || textareaRowsChanged && (previousOverflowAmount ? (currScroll.y === previousOverflowAmount.y) : false) : (cursorIsLastPosition || textareaRowsChanged) && cursorRow === lastRow) ? _overflowAmountCache.y : -1\r\n                                };\r\n                                currScroll.x = textareaScrollAmount.x > -1 ? (_isRTL && _normalizeRTLCache && _rtlScrollBehavior.i ? 0 : textareaScrollAmount.x) : currScroll.x; //if inverted, scroll to 0 -> normalized this means to max scroll offset.\r\n                                currScroll.y = textareaScrollAmount.y > -1 ? textareaScrollAmount.y : currScroll.y;\r\n                            }\r\n                            _textareaInfoCache = textareaInfo;\r\n                        }\r\n                        if (_isRTL && _rtlScrollBehavior.i && _nativeScrollbarIsOverlaid.y && hasOverflow.x && _normalizeRTLCache)\r\n                            currScroll.x += _contentBorderSize.w || 0;\r\n                        if (widthAuto)\r\n                            _hostElement[_strScrollLeft](0);\r\n                        if (heightAuto)\r\n                            _hostElement[_strScrollTop](0);\r\n                        _viewportElement[_strScrollLeft](currScroll.x)[_strScrollTop](currScroll.y);\r\n\r\n                        //scrollbars management:\r\n                        var scrollbarsVisibilityVisible = scrollbarsVisibility === 'v';\r\n                        var scrollbarsVisibilityHidden = scrollbarsVisibility === 'h';\r\n                        var scrollbarsVisibilityAuto = scrollbarsVisibility === 'a';\r\n                        var refreshScrollbarsVisibility = function (showX, showY) {\r\n                            showY = showY === undefined ? showX : showY;\r\n                            refreshScrollbarAppearance(true, showX, canScroll.x)\r\n                            refreshScrollbarAppearance(false, showY, canScroll.y)\r\n                        };\r\n\r\n                        //manage class name which indicates scrollable overflow\r\n                        addRemoveClass(_hostElement, _classNameHostOverflow, hideOverflow.x || hideOverflow.y);\r\n                        addRemoveClass(_hostElement, _classNameHostOverflowX, hideOverflow.x);\r\n                        addRemoveClass(_hostElement, _classNameHostOverflowY, hideOverflow.y);\r\n\r\n                        //add or remove rtl class name for styling purposes except when its body, then the scrollbar stays\r\n                        if (cssDirectionChanged && !_isBody) {\r\n                            addRemoveClass(_hostElement, _classNameHostRTL, _isRTL);\r\n                        }\r\n\r\n                        //manage the resize feature (CSS3 resize \"polyfill\" for this plugin)\r\n                        if (_isBody)\r\n                            addClass(_hostElement, _classNameHostResizeDisabled);\r\n                        if (resizeChanged) {\r\n                            addRemoveClass(_hostElement, _classNameHostResizeDisabled, _resizeNone);\r\n                            addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResize, !_resizeNone);\r\n                            addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeB, _resizeBoth);\r\n                            addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeH, _resizeHorizontal);\r\n                            addRemoveClass(_scrollbarCornerElement, _classNameScrollbarCornerResizeV, _resizeVertical);\r\n                        }\r\n\r\n                        //manage the scrollbars general visibility + the scrollbar interactivity (unusable class name)\r\n                        if (scrollbarsVisibilityChanged || overflowBehaviorChanged || hideOverflow.c || hasOverflow.c || ignoreOverlayScrollbarHidingChanged) {\r\n                            if (ignoreOverlayScrollbarHiding) {\r\n                                if (ignoreOverlayScrollbarHidingChanged) {\r\n                                    removeClass(_hostElement, _classNameHostScrolling);\r\n                                    if (ignoreOverlayScrollbarHiding) {\r\n                                        refreshScrollbarsVisibility(false);\r\n                                    }\r\n                                }\r\n                            }\r\n                            else if (scrollbarsVisibilityAuto) {\r\n                                refreshScrollbarsVisibility(canScroll.x, canScroll.y);\r\n                            }\r\n                            else if (scrollbarsVisibilityVisible) {\r\n                                refreshScrollbarsVisibility(true);\r\n                            }\r\n                            else if (scrollbarsVisibilityHidden) {\r\n                                refreshScrollbarsVisibility(false);\r\n                            }\r\n                        }\r\n\r\n                        //manage the scrollbars auto hide feature (auto hide them after specific actions)\r\n                        if (scrollbarsAutoHideChanged || ignoreOverlayScrollbarHidingChanged) {\r\n                            setupHostMouseTouchEvents(!_scrollbarsAutoHideLeave && !_scrollbarsAutoHideMove);\r\n                            refreshScrollbarsAutoHide(_scrollbarsAutoHideNever, !_scrollbarsAutoHideNever);\r\n                        }\r\n\r\n                        //manage scrollbars handle length & offset - don't remove!\r\n                        if (hostSizeChanged || overflowAmount.c || heightAutoChanged || widthAutoChanged || resizeChanged || boxSizingChanged || paddingAbsoluteChanged || ignoreOverlayScrollbarHidingChanged || cssDirectionChanged) {\r\n                            refreshScrollbarHandleLength(true);\r\n                            refreshScrollbarHandleOffset(true);\r\n                            refreshScrollbarHandleLength(false);\r\n                            refreshScrollbarHandleOffset(false);\r\n                        }\r\n\r\n                        //manage interactivity\r\n                        if (scrollbarsClickScrollingChanged)\r\n                            refreshScrollbarsInteractive(true, scrollbarsClickScrolling);\r\n                        if (scrollbarsDragScrollingChanged)\r\n                            refreshScrollbarsInteractive(false, scrollbarsDragScrolling);\r\n\r\n                        //callbacks:\r\n                        dispatchCallback('onDirectionChanged', {\r\n                            isRTL: _isRTL,\r\n                            dir: cssDirection\r\n                        }, cssDirectionChanged);\r\n                        dispatchCallback('onHostSizeChanged', {\r\n                            width: _hostSizeCache.w,\r\n                            height: _hostSizeCache.h\r\n                        }, hostSizeChanged);\r\n                        dispatchCallback('onContentSizeChanged', {\r\n                            width: _contentScrollSizeCache.w,\r\n                            height: _contentScrollSizeCache.h\r\n                        }, contentSizeChanged);\r\n                        dispatchCallback('onOverflowChanged', {\r\n                            x: hasOverflow.x,\r\n                            y: hasOverflow.y,\r\n                            xScrollable: hideOverflow.xs,\r\n                            yScrollable: hideOverflow.ys,\r\n                            clipped: hideOverflow.x || hideOverflow.y\r\n                        }, hasOverflow.c || hideOverflow.c);\r\n                        dispatchCallback('onOverflowAmountChanged', {\r\n                            x: overflowAmount.x,\r\n                            y: overflowAmount.y\r\n                        }, overflowAmount.c);\r\n                    }\r\n\r\n                    //fix body min size\r\n                    if (_isBody && _bodyMinSizeCache && (_hasOverflowCache.c || _bodyMinSizeCache.c)) {\r\n                        //its possible that no min size was measured until now, because the content arrange element was just added now, in this case, measure now the min size.\r\n                        if (!_bodyMinSizeCache.f)\r\n                            bodyMinSizeChanged();\r\n                        if (_nativeScrollbarIsOverlaid.y && _hasOverflowCache.x)\r\n                            _contentElement.css(_strMinMinus + _strWidth, _bodyMinSizeCache.w + _overlayScrollbarDummySize.y);\r\n                        if (_nativeScrollbarIsOverlaid.x && _hasOverflowCache.y)\r\n                            _contentElement.css(_strMinMinus + _strHeight, _bodyMinSizeCache.h + _overlayScrollbarDummySize.x);\r\n                        _bodyMinSizeCache.c = false;\r\n                    }\r\n\r\n                    if (_initialized && changedOptions.updateOnLoad) {\r\n                        updateElementsOnLoad();\r\n                    }\r\n\r\n                    //freezeResizeObserver(_sizeObserverElement, false);\r\n                    //freezeResizeObserver(_sizeAutoObserverElement, false);\r\n\r\n                    dispatchCallback('onUpdated', { forced: force });\r\n                }\r\n\r\n                /**\r\n                 * Updates the found elements of which the load event shall be handled.\r\n                 */\r\n                function updateElementsOnLoad() {\r\n                    if (!_isTextarea) {\r\n                        eachUpdateOnLoad(function (i, updateOnLoadSelector) {\r\n                            _contentElement.find(updateOnLoadSelector).each(function (i, el) {\r\n                                // if element doesn't have a updateOnLoadCallback applied\r\n                                if (COMPATIBILITY.inA(el, _updateOnLoadElms) < 0) {\r\n                                    _updateOnLoadElms.push(el);\r\n                                    FRAMEWORK(el)\r\n                                        .off(_updateOnLoadEventName, updateOnLoadCallback)\r\n                                        .on(_updateOnLoadEventName, updateOnLoadCallback);\r\n                                }\r\n                            });\r\n                        });\r\n                    }\r\n                }\r\n\r\n                //==== Options ====//\r\n\r\n                /**\r\n                 * Sets new options but doesn't call the update method.\r\n                 * @param newOptions The object which contains the new options.\r\n                 * @returns {*} A object which contains the changed options.\r\n                 */\r\n                function setOptions(newOptions) {\r\n                    var validatedOpts = _pluginsOptions._validate(newOptions, _pluginsOptions._template, true, _currentOptions)\r\n\r\n                    _currentOptions = extendDeep({}, _currentOptions, validatedOpts._default);\r\n                    _currentPreparedOptions = extendDeep({}, _currentPreparedOptions, validatedOpts._prepared);\r\n\r\n                    return validatedOpts._prepared;\r\n                }\r\n\r\n\r\n                //==== Structure ====//\r\n\r\n                /**\r\n                 * Builds or destroys the wrapper and helper DOM elements.\r\n                 * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n                 */\r\n                /**\r\n                 * Builds or destroys the wrapper and helper DOM elements.\r\n                 * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n                 */\r\n                function setupStructureDOM(destroy) {\r\n                    var strParent = 'parent';\r\n                    var classNameResizeObserverHost = 'os-resize-observer-host';\r\n                    var classNameTextareaElementFull = _classNameTextareaElement + _strSpace + _classNameTextInherit;\r\n                    var textareaClass = _isTextarea ? _strSpace + _classNameTextInherit : _strEmpty;\r\n                    var adoptAttrs = _currentPreparedOptions.textarea.inheritedAttrs;\r\n                    var adoptAttrsMap = {};\r\n                    var applyAdoptedAttrs = function () {\r\n                        var applyAdoptedAttrsElm = destroy ? _targetElement : _hostElement;\r\n                        each(adoptAttrsMap, function (key, value) {\r\n                            if (type(value) == TYPES.s) {\r\n                                if (key == LEXICON.c)\r\n                                    applyAdoptedAttrsElm.addClass(value);\r\n                                else\r\n                                    applyAdoptedAttrsElm.attr(key, value);\r\n                            }\r\n                        });\r\n                    };\r\n                    var hostElementClassNames = [\r\n                        _classNameHostElement,\r\n                        _classNameHostElementForeign,\r\n                        _classNameHostTextareaElement,\r\n                        _classNameHostResizeDisabled,\r\n                        _classNameHostRTL,\r\n                        _classNameHostScrollbarHorizontalHidden,\r\n                        _classNameHostScrollbarVerticalHidden,\r\n                        _classNameHostTransition,\r\n                        _classNameHostScrolling,\r\n                        _classNameHostOverflow,\r\n                        _classNameHostOverflowX,\r\n                        _classNameHostOverflowY,\r\n                        _classNameThemeNone,\r\n                        _classNameTextareaElement,\r\n                        _classNameTextInherit,\r\n                        _classNameCache].join(_strSpace);\r\n                    var hostElementCSS = {};\r\n\r\n                    //get host element as first element, because that's the most upper element and required for the other elements\r\n                    _hostElement = _hostElement || (_isTextarea ? (_domExists ? _targetElement[strParent]()[strParent]()[strParent]()[strParent]() : FRAMEWORK(generateDiv(_classNameHostTextareaElement))) : _targetElement);\r\n                    _contentElement = _contentElement || selectOrGenerateDivByClass(_classNameContentElement + textareaClass);\r\n                    _viewportElement = _viewportElement || selectOrGenerateDivByClass(_classNameViewportElement + textareaClass);\r\n                    _paddingElement = _paddingElement || selectOrGenerateDivByClass(_classNamePaddingElement + textareaClass);\r\n                    _sizeObserverElement = _sizeObserverElement || selectOrGenerateDivByClass(classNameResizeObserverHost);\r\n                    _textareaCoverElement = _textareaCoverElement || (_isTextarea ? selectOrGenerateDivByClass(_classNameTextareaCoverElement) : undefined);\r\n\r\n                    //add this class to workaround class changing issues with UI frameworks especially Vue\r\n                    if (_domExists)\r\n                        addClass(_hostElement, _classNameHostElementForeign);\r\n\r\n                    //on destroy, remove all generated class names from the host element before collecting the adopted attributes \r\n                    //to prevent adopting generated class names\r\n                    if (destroy)\r\n                        removeClass(_hostElement, hostElementClassNames);\r\n\r\n                    //collect all adopted attributes\r\n                    adoptAttrs = type(adoptAttrs) == TYPES.s ? adoptAttrs.split(_strSpace) : adoptAttrs;\r\n                    if (COMPATIBILITY.isA(adoptAttrs) && _isTextarea) {\r\n                        each(adoptAttrs, function (i, v) {\r\n                            if (type(v) == TYPES.s) {\r\n                                adoptAttrsMap[v] = destroy ? _hostElement.attr(v) : _targetElement.attr(v);\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                    if (!destroy) {\r\n                        if (_isTextarea) {\r\n                            if (!_currentPreparedOptions.sizeAutoCapable) {\r\n                                hostElementCSS[_strWidth] = _targetElement.css(_strWidth);\r\n                                hostElementCSS[_strHeight] = _targetElement.css(_strHeight);\r\n                            }\r\n\r\n                            if (!_domExists)\r\n                                _targetElement.addClass(_classNameTextInherit).wrap(_hostElement);\r\n\r\n                            //jQuery clones elements in wrap functions, so we have to select them again\r\n                            _hostElement = _targetElement[strParent]().css(hostElementCSS);\r\n                        }\r\n\r\n                        if (!_domExists) {\r\n                            //add the correct class to the target element\r\n                            addClass(_targetElement, _isTextarea ? classNameTextareaElementFull : _classNameHostElement);\r\n\r\n                            //wrap the content into the generated elements to create the required DOM\r\n                            _hostElement.wrapInner(_contentElement)\r\n                                .wrapInner(_viewportElement)\r\n                                .wrapInner(_paddingElement)\r\n                                .prepend(_sizeObserverElement);\r\n\r\n                            //jQuery clones elements in wrap functions, so we have to select them again\r\n                            _contentElement = findFirst(_hostElement, _strDot + _classNameContentElement);\r\n                            _viewportElement = findFirst(_hostElement, _strDot + _classNameViewportElement);\r\n                            _paddingElement = findFirst(_hostElement, _strDot + _classNamePaddingElement);\r\n\r\n                            if (_isTextarea) {\r\n                                _contentElement.prepend(_textareaCoverElement);\r\n                                applyAdoptedAttrs();\r\n                            }\r\n                        }\r\n\r\n                        if (_nativeScrollbarStyling)\r\n                            addClass(_viewportElement, _classNameViewportNativeScrollbarsInvisible);\r\n                        if (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y)\r\n                            addClass(_viewportElement, _classNameViewportNativeScrollbarsOverlaid);\r\n                        if (_isBody)\r\n                            addClass(_htmlElement, _classNameHTMLElement);\r\n\r\n                        _sizeObserverElementNative = _sizeObserverElement[0];\r\n                        _hostElementNative = _hostElement[0];\r\n                        _paddingElementNative = _paddingElement[0];\r\n                        _viewportElementNative = _viewportElement[0];\r\n                        _contentElementNative = _contentElement[0];\r\n\r\n                        updateViewportAttrsFromTarget();\r\n                    }\r\n                    else {\r\n                        if (_domExists && _initialized) {\r\n                            //clear size observer\r\n                            _sizeObserverElement.children().remove();\r\n\r\n                            //remove the style property and classes from already generated elements\r\n                            each([_paddingElement, _viewportElement, _contentElement, _textareaCoverElement], function (i, elm) {\r\n                                if (elm) {\r\n                                    removeClass(elm.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\r\n                                }\r\n                            });\r\n\r\n                            //add classes to the host element which was removed previously to match the expected DOM\r\n                            addClass(_hostElement, _isTextarea ? _classNameHostTextareaElement : _classNameHostElement);\r\n                        }\r\n                        else {\r\n                            //remove size observer\r\n                            remove(_sizeObserverElement);\r\n\r\n                            //unwrap the content to restore DOM\r\n                            _contentElement.contents()\r\n                                .unwrap()\r\n                                .unwrap()\r\n                                .unwrap();\r\n\r\n                            if (_isTextarea) {\r\n                                _targetElement.unwrap();\r\n                                remove(_hostElement);\r\n                                remove(_textareaCoverElement);\r\n                                applyAdoptedAttrs();\r\n                            }\r\n                        }\r\n\r\n                        if (_isTextarea)\r\n                            _targetElement.removeAttr(LEXICON.s);\r\n\r\n                        if (_isBody)\r\n                            removeClass(_htmlElement, _classNameHTMLElement);\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Adds or removes all wrapper elements interactivity events.\r\n                 * @param destroy Indicates whether the Events shall be added or removed.\r\n                 */\r\n                function setupStructureEvents() {\r\n                    var textareaKeyDownRestrictedKeyCodes = [\r\n                        112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123,    //F1 to F12\r\n                        33, 34,                                                   //page up, page down\r\n                        37, 38, 39, 40,                                           //left, up, right, down arrows\r\n                        16, 17, 18, 19, 20, 144                                   //Shift, Ctrl, Alt, Pause, CapsLock, NumLock\r\n                    ];\r\n                    var textareaKeyDownKeyCodesList = [];\r\n                    var textareaUpdateIntervalID;\r\n                    var scrollStopTimeoutId;\r\n                    var scrollStopDelay = 175;\r\n                    var strFocus = 'focus';\r\n\r\n                    function updateTextarea(doClearInterval) {\r\n                        textareaUpdate();\r\n                        _base.update(_strAuto);\r\n                        if (doClearInterval && _autoUpdateRecommended)\r\n                            clearInterval(textareaUpdateIntervalID);\r\n                    }\r\n                    function textareaOnScroll(event) {\r\n                        _targetElement[_strScrollLeft](_rtlScrollBehavior.i && _normalizeRTLCache ? 9999999 : 0);\r\n                        _targetElement[_strScrollTop](0);\r\n                        COMPATIBILITY.prvD(event);\r\n                        COMPATIBILITY.stpP(event);\r\n                        return false;\r\n                    }\r\n                    function textareaOnDrop(event) {\r\n                        setTimeout(function () {\r\n                            if (!_destroyed)\r\n                                updateTextarea();\r\n                        }, 50);\r\n                    }\r\n                    function textareaOnFocus() {\r\n                        _textareaHasFocus = true;\r\n                        addClass(_hostElement, strFocus);\r\n                    }\r\n                    function textareaOnFocusout() {\r\n                        _textareaHasFocus = false;\r\n                        textareaKeyDownKeyCodesList = [];\r\n                        removeClass(_hostElement, strFocus);\r\n                        updateTextarea(true);\r\n                    }\r\n                    function textareaOnKeyDown(event) {\r\n                        var keyCode = event.keyCode;\r\n\r\n                        if (inArray(keyCode, textareaKeyDownRestrictedKeyCodes) < 0) {\r\n                            if (!textareaKeyDownKeyCodesList[LEXICON.l]) {\r\n                                updateTextarea();\r\n                                textareaUpdateIntervalID = setInterval(updateTextarea, 1000 / 60);\r\n                            }\r\n                            if (inArray(keyCode, textareaKeyDownKeyCodesList) < 0)\r\n                                textareaKeyDownKeyCodesList.push(keyCode);\r\n                        }\r\n                    }\r\n                    function textareaOnKeyUp(event) {\r\n                        var keyCode = event.keyCode;\r\n                        var index = inArray(keyCode, textareaKeyDownKeyCodesList);\r\n\r\n                        if (inArray(keyCode, textareaKeyDownRestrictedKeyCodes) < 0) {\r\n                            if (index > -1)\r\n                                textareaKeyDownKeyCodesList.splice(index, 1);\r\n                            if (!textareaKeyDownKeyCodesList[LEXICON.l])\r\n                                updateTextarea(true);\r\n                        }\r\n                    }\r\n                    function contentOnTransitionEnd(event) {\r\n                        if (_autoUpdateCache === true)\r\n                            return;\r\n                        event = event.originalEvent || event;\r\n                        if (isSizeAffectingCSSProperty(event.propertyName))\r\n                            _base.update(_strAuto);\r\n                    }\r\n                    function viewportOnScroll(event) {\r\n                        if (!_sleeping) {\r\n                            if (scrollStopTimeoutId !== undefined)\r\n                                clearTimeout(scrollStopTimeoutId);\r\n                            else {\r\n                                if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove)\r\n                                    refreshScrollbarsAutoHide(true);\r\n\r\n                                if (!nativeOverlayScrollbarsAreActive())\r\n                                    addClass(_hostElement, _classNameHostScrolling);\r\n\r\n                                dispatchCallback('onScrollStart', event);\r\n                            }\r\n\r\n                            //if a scrollbars handle gets dragged, the mousemove event is responsible for refreshing the handle offset\r\n                            //because if CSS scroll-snap is used, the handle offset gets only refreshed on every snap point\r\n                            //this looks laggy & clunky, it looks much better if the offset refreshes with the mousemove\r\n                            if (!_scrollbarsHandlesDefineScrollPos) {\r\n                                refreshScrollbarHandleOffset(true);\r\n                                refreshScrollbarHandleOffset(false);\r\n                            }\r\n                            dispatchCallback('onScroll', event);\r\n\r\n                            scrollStopTimeoutId = setTimeout(function () {\r\n                                if (!_destroyed) {\r\n                                    //OnScrollStop:\r\n                                    clearTimeout(scrollStopTimeoutId);\r\n                                    scrollStopTimeoutId = undefined;\r\n\r\n                                    if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove)\r\n                                        refreshScrollbarsAutoHide(false);\r\n\r\n                                    if (!nativeOverlayScrollbarsAreActive())\r\n                                        removeClass(_hostElement, _classNameHostScrolling);\r\n\r\n                                    dispatchCallback('onScrollStop', event);\r\n                                }\r\n                            }, scrollStopDelay);\r\n                        }\r\n                    }\r\n\r\n\r\n                    if (_isTextarea) {\r\n                        if (_msieVersion > 9 || !_autoUpdateRecommended) {\r\n                            addDestroyEventListener(_targetElement, 'input', updateTextarea);\r\n                        }\r\n                        else {\r\n                            addDestroyEventListener(_targetElement,\r\n                                [_strKeyDownEvent, _strKeyUpEvent],\r\n                                [textareaOnKeyDown, textareaOnKeyUp]);\r\n                        }\r\n\r\n                        addDestroyEventListener(_targetElement,\r\n                            [_strScroll, 'drop', strFocus, strFocus + 'out'],\r\n                            [textareaOnScroll, textareaOnDrop, textareaOnFocus, textareaOnFocusout]);\r\n                    }\r\n                    else {\r\n                        addDestroyEventListener(_contentElement, _strTransitionEndEvent, contentOnTransitionEnd);\r\n                    }\r\n                    addDestroyEventListener(_viewportElement, _strScroll, viewportOnScroll, true);\r\n                }\r\n\r\n\r\n                //==== Scrollbars ====//\r\n\r\n                /**\r\n                 * Builds or destroys all scrollbar DOM elements (scrollbar, track, handle)\r\n                 * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n                 */\r\n                function setupScrollbarsDOM(destroy) {\r\n                    var selectOrGenerateScrollbarDOM = function (isHorizontal) {\r\n                        var scrollbarClassName = isHorizontal ? _classNameScrollbarHorizontal : _classNameScrollbarVertical;\r\n                        var scrollbar = selectOrGenerateDivByClass(_classNameScrollbar + _strSpace + scrollbarClassName, true);\r\n                        var track = selectOrGenerateDivByClass(_classNameScrollbarTrack, scrollbar);\r\n                        var handle = selectOrGenerateDivByClass(_classNameScrollbarHandle, scrollbar);\r\n\r\n                        if (!_domExists && !destroy) {\r\n                            scrollbar.append(track);\r\n                            track.append(handle);\r\n                        }\r\n\r\n                        return {\r\n                            _scrollbar: scrollbar,\r\n                            _track: track,\r\n                            _handle: handle\r\n                        };\r\n                    };\r\n                    function resetScrollbarDOM(isHorizontal) {\r\n                        var scrollbarVars = getScrollbarVars(isHorizontal);\r\n                        var scrollbar = scrollbarVars._scrollbar;\r\n                        var track = scrollbarVars._track;\r\n                        var handle = scrollbarVars._handle;\r\n\r\n                        if (_domExists && _initialized) {\r\n                            each([scrollbar, track, handle], function (i, elm) {\r\n                                removeClass(elm.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\r\n                            });\r\n                        }\r\n                        else {\r\n                            remove(scrollbar || selectOrGenerateScrollbarDOM(isHorizontal)._scrollbar);\r\n                        }\r\n                    }\r\n                    var horizontalElements;\r\n                    var verticalElements;\r\n\r\n                    if (!destroy) {\r\n                        horizontalElements = selectOrGenerateScrollbarDOM(true);\r\n                        verticalElements = selectOrGenerateScrollbarDOM();\r\n\r\n                        _scrollbarHorizontalElement = horizontalElements._scrollbar;\r\n                        _scrollbarHorizontalTrackElement = horizontalElements._track;\r\n                        _scrollbarHorizontalHandleElement = horizontalElements._handle;\r\n                        _scrollbarVerticalElement = verticalElements._scrollbar;\r\n                        _scrollbarVerticalTrackElement = verticalElements._track;\r\n                        _scrollbarVerticalHandleElement = verticalElements._handle;\r\n\r\n                        if (!_domExists) {\r\n                            _paddingElement.after(_scrollbarVerticalElement);\r\n                            _paddingElement.after(_scrollbarHorizontalElement);\r\n                        }\r\n                    }\r\n                    else {\r\n                        resetScrollbarDOM(true);\r\n                        resetScrollbarDOM();\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Initializes all scrollbar interactivity events. (track and handle dragging, clicking, scrolling)\r\n                 * @param isHorizontal True if the target scrollbar is the horizontal scrollbar, false if the target scrollbar is the vertical scrollbar.\r\n                 */\r\n                function setupScrollbarEvents(isHorizontal) {\r\n                    var scrollbarVars = getScrollbarVars(isHorizontal);\r\n                    var scrollbarVarsInfo = scrollbarVars._info;\r\n                    var insideIFrame = _windowElementNative.top !== _windowElementNative;\r\n                    var xy = scrollbarVars._x_y;\r\n                    var XY = scrollbarVars._X_Y;\r\n                    var scroll = _strScroll + scrollbarVars._Left_Top;\r\n                    var strActive = 'active';\r\n                    var strSnapHandle = 'snapHandle';\r\n                    var strClickEvent = 'click';\r\n                    var scrollDurationFactor = 1;\r\n                    var increaseDecreaseScrollAmountKeyCodes = [16, 17]; //shift, ctrl\r\n                    var trackTimeout;\r\n                    var mouseDownScroll;\r\n                    var mouseDownOffset;\r\n                    var mouseDownInvertedScale;\r\n\r\n                    function getPointerPosition(event) {\r\n                        return _msieVersion && insideIFrame ? event['screen' + XY] : COMPATIBILITY.page(event)[xy]; //use screen coordinates in EDGE & IE because the page values are incorrect in frames.\r\n                    }\r\n                    function getPreparedScrollbarsOption(name) {\r\n                        return _currentPreparedOptions.scrollbars[name];\r\n                    }\r\n                    function increaseTrackScrollAmount() {\r\n                        scrollDurationFactor = 0.5;\r\n                    }\r\n                    function decreaseTrackScrollAmount() {\r\n                        scrollDurationFactor = 1;\r\n                    }\r\n                    function stopClickEventPropagation(event) {\r\n                        COMPATIBILITY.stpP(event);\r\n                    }\r\n                    function documentKeyDown(event) {\r\n                        if (inArray(event.keyCode, increaseDecreaseScrollAmountKeyCodes) > -1)\r\n                            increaseTrackScrollAmount();\r\n                    }\r\n                    function documentKeyUp(event) {\r\n                        if (inArray(event.keyCode, increaseDecreaseScrollAmountKeyCodes) > -1)\r\n                            decreaseTrackScrollAmount();\r\n                    }\r\n                    function onMouseTouchDownContinue(event) {\r\n                        var originalEvent = event.originalEvent || event;\r\n                        var isTouchEvent = originalEvent.touches !== undefined;\r\n                        return _sleeping || _destroyed || nativeOverlayScrollbarsAreActive() || !_scrollbarsDragScrollingCache || (isTouchEvent && !getPreparedScrollbarsOption('touchSupport')) ? false : COMPATIBILITY.mBtn(event) === 1 || isTouchEvent;\r\n                    }\r\n                    function documentDragMove(event) {\r\n                        if (onMouseTouchDownContinue(event)) {\r\n                            var trackLength = scrollbarVarsInfo._trackLength;\r\n                            var handleLength = scrollbarVarsInfo._handleLength;\r\n                            var scrollRange = scrollbarVarsInfo._maxScroll;\r\n                            var scrollRaw = (getPointerPosition(event) - mouseDownOffset) * mouseDownInvertedScale;\r\n                            var scrollDeltaPercent = scrollRaw / (trackLength - handleLength);\r\n                            var scrollDelta = (scrollRange * scrollDeltaPercent);\r\n                            scrollDelta = isFinite(scrollDelta) ? scrollDelta : 0;\r\n                            if (_isRTL && isHorizontal && !_rtlScrollBehavior.i)\r\n                                scrollDelta *= -1;\r\n\r\n                            _viewportElement[scroll](MATH.round(mouseDownScroll + scrollDelta));\r\n\r\n                            if (_scrollbarsHandlesDefineScrollPos)\r\n                                refreshScrollbarHandleOffset(isHorizontal, mouseDownScroll + scrollDelta);\r\n\r\n                            if (!_supportPassiveEvents)\r\n                                COMPATIBILITY.prvD(event);\r\n                        }\r\n                        else\r\n                            documentMouseTouchUp(event);\r\n                    }\r\n                    function documentMouseTouchUp(event) {\r\n                        event = event || event.originalEvent;\r\n\r\n                        setupResponsiveEventListener(_documentElement,\r\n                            [_strMouseTouchMoveEvent, _strMouseTouchUpEvent, _strKeyDownEvent, _strKeyUpEvent, _strSelectStartEvent],\r\n                            [documentDragMove, documentMouseTouchUp, documentKeyDown, documentKeyUp, documentOnSelectStart],\r\n                            true);\r\n                        COMPATIBILITY.rAF()(function() {\r\n                            setupResponsiveEventListener(_documentElement, strClickEvent, stopClickEventPropagation, true, { _capture: true });\r\n                        });\r\n                        \r\n                            \r\n                        if (_scrollbarsHandlesDefineScrollPos)\r\n                            refreshScrollbarHandleOffset(isHorizontal, true);\r\n\r\n                        _scrollbarsHandlesDefineScrollPos = false;\r\n                        removeClass(_bodyElement, _classNameDragging);\r\n                        removeClass(scrollbarVars._handle, strActive);\r\n                        removeClass(scrollbarVars._track, strActive);\r\n                        removeClass(scrollbarVars._scrollbar, strActive);\r\n\r\n                        mouseDownScroll = undefined;\r\n                        mouseDownOffset = undefined;\r\n                        mouseDownInvertedScale = 1;\r\n\r\n                        decreaseTrackScrollAmount();\r\n\r\n                        if (trackTimeout !== undefined) {\r\n                            _base.scrollStop();\r\n                            clearTimeout(trackTimeout);\r\n                            trackTimeout = undefined;\r\n                        }\r\n\r\n                        if (event) {\r\n                            var rect = _hostElementNative[LEXICON.bCR]();\r\n                            var mouseInsideHost = event.clientX >= rect.left && event.clientX <= rect.right && event.clientY >= rect.top && event.clientY <= rect.bottom;\r\n\r\n                            //if mouse is outside host element\r\n                            if (!mouseInsideHost)\r\n                                hostOnMouseLeave();\r\n\r\n                            if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove)\r\n                                refreshScrollbarsAutoHide(false);\r\n                        }\r\n                    }\r\n                    function onHandleMouseTouchDown(event) {\r\n                        if (onMouseTouchDownContinue(event))\r\n                            onHandleMouseTouchDownAction(event);\r\n                    }\r\n                    function onHandleMouseTouchDownAction(event) {\r\n                        mouseDownScroll = _viewportElement[scroll]();\r\n                        mouseDownScroll = isNaN(mouseDownScroll) ? 0 : mouseDownScroll;\r\n                        if (_isRTL && isHorizontal && !_rtlScrollBehavior.n || !_isRTL)\r\n                            mouseDownScroll = mouseDownScroll < 0 ? 0 : mouseDownScroll;\r\n\r\n                        mouseDownInvertedScale = getHostElementInvertedScale()[xy];\r\n                        mouseDownOffset = getPointerPosition(event);\r\n\r\n                        _scrollbarsHandlesDefineScrollPos = !getPreparedScrollbarsOption(strSnapHandle);\r\n                        addClass(_bodyElement, _classNameDragging);\r\n                        addClass(scrollbarVars._handle, strActive);\r\n                        addClass(scrollbarVars._scrollbar, strActive);\r\n\r\n                        setupResponsiveEventListener(_documentElement,\r\n                            [_strMouseTouchMoveEvent, _strMouseTouchUpEvent, _strSelectStartEvent],\r\n                            [documentDragMove, documentMouseTouchUp, documentOnSelectStart]);\r\n                        COMPATIBILITY.rAF()(function() {\r\n                            setupResponsiveEventListener(_documentElement, strClickEvent, stopClickEventPropagation, false, { _capture: true });\r\n                        });\r\n                        \r\n\r\n                        if (_msieVersion || !_documentMixed)\r\n                            COMPATIBILITY.prvD(event);\r\n                        COMPATIBILITY.stpP(event);\r\n                    }\r\n                    function onTrackMouseTouchDown(event) {\r\n                        if (onMouseTouchDownContinue(event)) {\r\n                            var handleToViewportRatio = scrollbarVars._info._handleLength / Math.round(MATH.min(1, _viewportSize[scrollbarVars._w_h] / _contentScrollSizeCache[scrollbarVars._w_h]) * scrollbarVars._info._trackLength);\r\n                            var scrollDistance = MATH.round(_viewportSize[scrollbarVars._w_h] * handleToViewportRatio);\r\n                            var scrollBaseDuration = 270 * handleToViewportRatio;\r\n                            var scrollFirstIterationDelay = 400 * handleToViewportRatio;\r\n                            var trackOffset = scrollbarVars._track.offset()[scrollbarVars._left_top];\r\n                            var ctrlKey = event.ctrlKey;\r\n                            var instantScroll = event.shiftKey;\r\n                            var instantScrollTransition = instantScroll && ctrlKey;\r\n                            var isFirstIteration = true;\r\n                            var easing = 'linear';\r\n                            var decreaseScroll;\r\n                            var finishedCondition;\r\n                            var scrollActionFinsished = function (transition) {\r\n                                if (_scrollbarsHandlesDefineScrollPos)\r\n                                    refreshScrollbarHandleOffset(isHorizontal, transition);\r\n                            };\r\n                            var scrollActionInstantFinished = function () {\r\n                                scrollActionFinsished();\r\n                                onHandleMouseTouchDownAction(event);\r\n                            };\r\n                            var scrollAction = function () {\r\n                                if (!_destroyed) {\r\n                                    var mouseOffset = (mouseDownOffset - trackOffset) * mouseDownInvertedScale;\r\n                                    var handleOffset = scrollbarVarsInfo._handleOffset;\r\n                                    var trackLength = scrollbarVarsInfo._trackLength;\r\n                                    var handleLength = scrollbarVarsInfo._handleLength;\r\n                                    var scrollRange = scrollbarVarsInfo._maxScroll;\r\n                                    var currScroll = scrollbarVarsInfo._currentScroll;\r\n                                    var scrollDuration = scrollBaseDuration * scrollDurationFactor;\r\n                                    var timeoutDelay = isFirstIteration ? MATH.max(scrollFirstIterationDelay, scrollDuration) : scrollDuration;\r\n                                    var instantScrollPosition = scrollRange * ((mouseOffset - (handleLength / 2)) / (trackLength - handleLength)); // 100% * positionPercent\r\n                                    var rtlIsNormal = _isRTL && isHorizontal && ((!_rtlScrollBehavior.i && !_rtlScrollBehavior.n) || _normalizeRTLCache);\r\n                                    var decreaseScrollCondition = rtlIsNormal ? handleOffset < mouseOffset : handleOffset > mouseOffset;\r\n                                    var scrollObj = {};\r\n                                    var animationObj = {\r\n                                        easing: easing,\r\n                                        step: function (now) {\r\n                                            if (_scrollbarsHandlesDefineScrollPos) {\r\n                                                _viewportElement[scroll](now); //https://github.com/jquery/jquery/issues/4340\r\n                                                refreshScrollbarHandleOffset(isHorizontal, now);\r\n                                            }\r\n                                        }\r\n                                    };\r\n                                    instantScrollPosition = isFinite(instantScrollPosition) ? instantScrollPosition : 0;\r\n                                    instantScrollPosition = _isRTL && isHorizontal && !_rtlScrollBehavior.i ? (scrollRange - instantScrollPosition) : instantScrollPosition;\r\n\r\n                                    //_base.scrollStop();\r\n\r\n                                    if (instantScroll) {\r\n                                        _viewportElement[scroll](instantScrollPosition); //scroll instantly to new position\r\n                                        if (instantScrollTransition) {\r\n                                            //get the scroll position after instant scroll (in case CSS Snap Points are used) to get the correct snapped scroll position\r\n                                            //and the animation stops at the correct point\r\n                                            instantScrollPosition = _viewportElement[scroll]();\r\n                                            //scroll back to the position before instant scrolling so animation can be performed\r\n                                            _viewportElement[scroll](currScroll);\r\n\r\n                                            instantScrollPosition = rtlIsNormal && _rtlScrollBehavior.i ? (scrollRange - instantScrollPosition) : instantScrollPosition;\r\n                                            instantScrollPosition = rtlIsNormal && _rtlScrollBehavior.n ? -instantScrollPosition : instantScrollPosition;\r\n\r\n                                            scrollObj[xy] = instantScrollPosition;\r\n                                            _base.scroll(scrollObj, extendDeep(animationObj, {\r\n                                                duration: 130,\r\n                                                complete: scrollActionInstantFinished\r\n                                            }));\r\n                                        }\r\n                                        else\r\n                                            scrollActionInstantFinished();\r\n                                    }\r\n                                    else {\r\n                                        decreaseScroll = isFirstIteration ? decreaseScrollCondition : decreaseScroll;\r\n                                        finishedCondition = rtlIsNormal\r\n                                            ? (decreaseScroll ? handleOffset + handleLength >= mouseOffset : handleOffset <= mouseOffset)\r\n                                            : (decreaseScroll ? handleOffset <= mouseOffset : handleOffset + handleLength >= mouseOffset);\r\n\r\n                                        if (finishedCondition) {\r\n                                            clearTimeout(trackTimeout);\r\n                                            _base.scrollStop();\r\n                                            trackTimeout = undefined;\r\n                                            scrollActionFinsished(true);\r\n                                        }\r\n                                        else {\r\n                                            trackTimeout = setTimeout(scrollAction, timeoutDelay);\r\n\r\n                                            scrollObj[xy] = (decreaseScroll ? '-=' : '+=') + scrollDistance;\r\n                                            _base.scroll(scrollObj, extendDeep(animationObj, {\r\n                                                duration: scrollDuration\r\n                                            }));\r\n                                        }\r\n                                        isFirstIteration = false;\r\n                                    }\r\n                                }\r\n                            };\r\n                            if (ctrlKey)\r\n                                increaseTrackScrollAmount();\r\n\r\n                            mouseDownInvertedScale = getHostElementInvertedScale()[xy];\r\n                            mouseDownOffset = COMPATIBILITY.page(event)[xy];\r\n\r\n                            _scrollbarsHandlesDefineScrollPos = !getPreparedScrollbarsOption(strSnapHandle);\r\n                            addClass(_bodyElement, _classNameDragging);\r\n                            addClass(scrollbarVars._track, strActive);\r\n                            addClass(scrollbarVars._scrollbar, strActive);\r\n\r\n                            setupResponsiveEventListener(_documentElement,\r\n                                [_strMouseTouchUpEvent, _strKeyDownEvent, _strKeyUpEvent, _strSelectStartEvent],\r\n                                [documentMouseTouchUp, documentKeyDown, documentKeyUp, documentOnSelectStart]);\r\n\r\n                            scrollAction();\r\n                            COMPATIBILITY.prvD(event);\r\n                            COMPATIBILITY.stpP(event);\r\n                        }\r\n                    }\r\n                    function onTrackMouseTouchEnter(event) {\r\n                        //make sure both scrollbars will stay visible if one scrollbar is hovered if autoHide is \"scroll\" or \"move\".\r\n                        _scrollbarsHandleHovered = true;\r\n                        if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove)\r\n                            refreshScrollbarsAutoHide(true);\r\n                    }\r\n                    function onTrackMouseTouchLeave(event) {\r\n                        _scrollbarsHandleHovered = false;\r\n                        if (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove)\r\n                            refreshScrollbarsAutoHide(false);\r\n                    }\r\n                    function onScrollbarMouseTouchDown(event) {\r\n                        COMPATIBILITY.stpP(event);\r\n                    }\r\n\r\n                    addDestroyEventListener(scrollbarVars._handle,\r\n                        _strMouseTouchDownEvent,\r\n                        onHandleMouseTouchDown);\r\n                    addDestroyEventListener(scrollbarVars._track,\r\n                        [_strMouseTouchDownEvent, _strMouseEnter, _strMouseLeave],\r\n                        [onTrackMouseTouchDown, onTrackMouseTouchEnter, onTrackMouseTouchLeave]);\r\n                    addDestroyEventListener(scrollbarVars._scrollbar,\r\n                        _strMouseTouchDownEvent,\r\n                        onScrollbarMouseTouchDown);\r\n\r\n                    if (_supportTransition) {\r\n                        addDestroyEventListener(scrollbarVars._scrollbar, _strTransitionEndEvent, function (event) {\r\n                            if (event.target !== scrollbarVars._scrollbar[0])\r\n                                return;\r\n                            refreshScrollbarHandleLength(isHorizontal);\r\n                            refreshScrollbarHandleOffset(isHorizontal);\r\n                        });\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Shows or hides the given scrollbar and applied a class name which indicates if the scrollbar is scrollable or not.\r\n                 * @param isHorizontal True if the horizontal scrollbar is the target, false if the vertical scrollbar is the target.\r\n                 * @param shallBeVisible True if the scrollbar shall be shown, false if hidden.\r\n                 * @param canScroll True if the scrollbar is scrollable, false otherwise.\r\n                 */\r\n                function refreshScrollbarAppearance(isHorizontal, shallBeVisible, canScroll) {\r\n                    var scrollbarHiddenClassName = isHorizontal ? _classNameHostScrollbarHorizontalHidden : _classNameHostScrollbarVerticalHidden;\r\n                    var scrollbarElement = isHorizontal ? _scrollbarHorizontalElement : _scrollbarVerticalElement;\r\n\r\n                    addRemoveClass(_hostElement, scrollbarHiddenClassName, !shallBeVisible);\r\n                    addRemoveClass(scrollbarElement, _classNameScrollbarUnusable, !canScroll);\r\n                }\r\n\r\n                /**\r\n                 * Autoshows / autohides both scrollbars with.\r\n                 * @param shallBeVisible True if the scrollbars shall be autoshown (only the case if they are hidden by a autohide), false if the shall be auto hidden.\r\n                 * @param delayfree True if the scrollbars shall be hidden without a delay, false or undefined otherwise.\r\n                 */\r\n                function refreshScrollbarsAutoHide(shallBeVisible, delayfree) {\r\n                    clearTimeout(_scrollbarsAutoHideTimeoutId);\r\n                    if (shallBeVisible) {\r\n                        //if(_hasOverflowCache.x && _hideOverflowCache.xs)\r\n                        removeClass(_scrollbarHorizontalElement, _classNameScrollbarAutoHidden);\r\n                        //if(_hasOverflowCache.y && _hideOverflowCache.ys)\r\n                        removeClass(_scrollbarVerticalElement, _classNameScrollbarAutoHidden);\r\n                    }\r\n                    else {\r\n                        var anyActive;\r\n                        var strActive = 'active';\r\n                        var hide = function () {\r\n                            if (!_scrollbarsHandleHovered && !_destroyed) {\r\n                                anyActive = _scrollbarHorizontalHandleElement.hasClass(strActive) || _scrollbarVerticalHandleElement.hasClass(strActive);\r\n                                if (!anyActive && (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove || _scrollbarsAutoHideLeave))\r\n                                    addClass(_scrollbarHorizontalElement, _classNameScrollbarAutoHidden);\r\n                                if (!anyActive && (_scrollbarsAutoHideScroll || _scrollbarsAutoHideMove || _scrollbarsAutoHideLeave))\r\n                                    addClass(_scrollbarVerticalElement, _classNameScrollbarAutoHidden);\r\n                            }\r\n                        };\r\n                        if (_scrollbarsAutoHideDelay > 0 && delayfree !== true)\r\n                            _scrollbarsAutoHideTimeoutId = setTimeout(hide, _scrollbarsAutoHideDelay);\r\n                        else\r\n                            hide();\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Refreshes the handle length of the given scrollbar.\r\n                 * @param isHorizontal True if the horizontal scrollbar handle shall be refreshed, false if the vertical one shall be refreshed.\r\n                 */\r\n                function refreshScrollbarHandleLength(isHorizontal) {\r\n                    var handleCSS = {};\r\n                    var scrollbarVars = getScrollbarVars(isHorizontal);\r\n                    var scrollbarVarsInfo = scrollbarVars._info;\r\n                    var digit = 1000000;\r\n                    //get and apply intended handle length\r\n                    var handleRatio = MATH.min(1, _viewportSize[scrollbarVars._w_h] / _contentScrollSizeCache[scrollbarVars._w_h]);\r\n                    handleCSS[scrollbarVars._width_height] = (MATH.floor(handleRatio * 100 * digit) / digit) + '%'; //the last * digit / digit is for flooring to the 4th digit\r\n\r\n                    if (!nativeOverlayScrollbarsAreActive())\r\n                        scrollbarVars._handle.css(handleCSS);\r\n\r\n                    //measure the handle length to respect min & max length\r\n                    scrollbarVarsInfo._handleLength = scrollbarVars._handle[0]['offset' + scrollbarVars._Width_Height];\r\n                    scrollbarVarsInfo._handleLengthRatio = handleRatio;\r\n                }\r\n\r\n                /**\r\n                 * Refreshes the handle offset of the given scrollbar.\r\n                 * @param isHorizontal True if the horizontal scrollbar handle shall be refreshed, false if the vertical one shall be refreshed.\r\n                 * @param scrollOrTransition The scroll position of the given scrollbar axis to which the handle shall be moved or a boolean which indicates whether a transition shall be applied. If undefined or boolean if the current scroll-offset is taken. (if isHorizontal ? scrollLeft : scrollTop)\r\n                 */\r\n                function refreshScrollbarHandleOffset(isHorizontal, scrollOrTransition) {\r\n                    var transition = type(scrollOrTransition) == TYPES.b;\r\n                    var transitionDuration = 250;\r\n                    var isRTLisHorizontal = _isRTL && isHorizontal;\r\n                    var scrollbarVars = getScrollbarVars(isHorizontal);\r\n                    var scrollbarVarsInfo = scrollbarVars._info;\r\n                    var strTranslateBrace = 'translate(';\r\n                    var strTransform = VENDORS._cssProperty('transform');\r\n                    var strTransition = VENDORS._cssProperty('transition');\r\n                    var nativeScroll = isHorizontal ? _viewportElement[_strScrollLeft]() : _viewportElement[_strScrollTop]();\r\n                    var currentScroll = scrollOrTransition === undefined || transition ? nativeScroll : scrollOrTransition;\r\n\r\n                    //measure the handle length to respect min & max length\r\n                    var handleLength = scrollbarVarsInfo._handleLength;\r\n                    var trackLength = scrollbarVars._track[0]['offset' + scrollbarVars._Width_Height];\r\n                    var handleTrackDiff = trackLength - handleLength;\r\n                    var handleCSS = {};\r\n                    var transformOffset;\r\n                    var translateValue;\r\n\r\n                    //DONT use the variable '_contentScrollSizeCache[scrollbarVars._w_h]' instead of '_viewportElement[0]['scroll' + scrollbarVars._Width_Height]'\r\n                    // because its a bit behind during the small delay when content size updates\r\n                    //(delay = mutationObserverContentLag, if its 0 then this var could be used)\r\n                    var maxScroll = (_viewportElementNative[_strScroll + scrollbarVars._Width_Height] - _viewportElementNative['client' + scrollbarVars._Width_Height]) * (_rtlScrollBehavior.n && isRTLisHorizontal ? -1 : 1); //* -1 if rtl scroll max is negative\r\n                    var getScrollRatio = function (base) {\r\n                        return isNaN(base / maxScroll) ? 0 : MATH.max(0, MATH.min(1, base / maxScroll));\r\n                    };\r\n                    var getHandleOffset = function (scrollRatio) {\r\n                        var offset = handleTrackDiff * scrollRatio;\r\n                        offset = isNaN(offset) ? 0 : offset;\r\n                        offset = (isRTLisHorizontal && !_rtlScrollBehavior.i) ? (trackLength - handleLength - offset) : offset;\r\n                        offset = MATH.max(0, offset);\r\n                        return offset;\r\n                    };\r\n                    var scrollRatio = getScrollRatio(nativeScroll);\r\n                    var unsnappedScrollRatio = getScrollRatio(currentScroll);\r\n                    var handleOffset = getHandleOffset(unsnappedScrollRatio);\r\n                    var snappedHandleOffset = getHandleOffset(scrollRatio);\r\n\r\n                    scrollbarVarsInfo._maxScroll = maxScroll;\r\n                    scrollbarVarsInfo._currentScroll = nativeScroll;\r\n                    scrollbarVarsInfo._currentScrollRatio = scrollRatio;\r\n\r\n                    if (_supportTransform) {\r\n                        transformOffset = isRTLisHorizontal ? -(trackLength - handleLength - handleOffset) : handleOffset; //in px\r\n                        //transformOffset = (transformOffset / trackLength * 100) * (trackLength / handleLength); //in %\r\n                        translateValue = isHorizontal ? strTranslateBrace + transformOffset + 'px, 0)' : strTranslateBrace + '0, ' + transformOffset + 'px)';\r\n\r\n                        handleCSS[strTransform] = translateValue;\r\n\r\n                        //apply or clear up transition\r\n                        if (_supportTransition)\r\n                            handleCSS[strTransition] = transition && MATH.abs(handleOffset - scrollbarVarsInfo._handleOffset) > 1 ? getCSSTransitionString(scrollbarVars._handle) + ', ' + (strTransform + _strSpace + transitionDuration + 'ms') : _strEmpty;\r\n                    }\r\n                    else\r\n                        handleCSS[scrollbarVars._left_top] = handleOffset;\r\n\r\n\r\n                    //only apply css if offset has changed and overflow exists.\r\n                    if (!nativeOverlayScrollbarsAreActive()) {\r\n                        scrollbarVars._handle.css(handleCSS);\r\n\r\n                        //clear up transition\r\n                        if (_supportTransform && _supportTransition && transition) {\r\n                            scrollbarVars._handle.one(_strTransitionEndEvent, function () {\r\n                                if (!_destroyed)\r\n                                    scrollbarVars._handle.css(strTransition, _strEmpty);\r\n                            });\r\n                        }\r\n                    }\r\n\r\n                    scrollbarVarsInfo._handleOffset = handleOffset;\r\n                    scrollbarVarsInfo._snappedHandleOffset = snappedHandleOffset;\r\n                    scrollbarVarsInfo._trackLength = trackLength;\r\n                }\r\n\r\n                /**\r\n                 * Refreshes the interactivity of the given scrollbar element.\r\n                 * @param isTrack True if the track element is the target, false if the handle element is the target.\r\n                 * @param value True for interactivity false for no interactivity.\r\n                 */\r\n                function refreshScrollbarsInteractive(isTrack, value) {\r\n                    var action = value ? 'removeClass' : 'addClass';\r\n                    var element1 = isTrack ? _scrollbarHorizontalTrackElement : _scrollbarHorizontalHandleElement;\r\n                    var element2 = isTrack ? _scrollbarVerticalTrackElement : _scrollbarVerticalHandleElement;\r\n                    var className = isTrack ? _classNameScrollbarTrackOff : _classNameScrollbarHandleOff;\r\n\r\n                    element1[action](className);\r\n                    element2[action](className);\r\n                }\r\n\r\n                /**\r\n                 * Returns a object which is used for fast access for specific variables.\r\n                 * @param isHorizontal True if the horizontal scrollbar vars shall be accessed, false if the vertical scrollbar vars shall be accessed.\r\n                 * @returns {{wh: string, WH: string, lt: string, _wh: string, _lt: string, t: *, h: *, c: {}, s: *}}\r\n                 */\r\n                function getScrollbarVars(isHorizontal) {\r\n                    return {\r\n                        _width_height: isHorizontal ? _strWidth : _strHeight,\r\n                        _Width_Height: isHorizontal ? 'Width' : 'Height',\r\n                        _left_top: isHorizontal ? _strLeft : _strTop,\r\n                        _Left_Top: isHorizontal ? 'Left' : 'Top',\r\n                        _x_y: isHorizontal ? _strX : _strY,\r\n                        _X_Y: isHorizontal ? 'X' : 'Y',\r\n                        _w_h: isHorizontal ? 'w' : 'h',\r\n                        _l_t: isHorizontal ? 'l' : 't',\r\n                        _track: isHorizontal ? _scrollbarHorizontalTrackElement : _scrollbarVerticalTrackElement,\r\n                        _handle: isHorizontal ? _scrollbarHorizontalHandleElement : _scrollbarVerticalHandleElement,\r\n                        _scrollbar: isHorizontal ? _scrollbarHorizontalElement : _scrollbarVerticalElement,\r\n                        _info: isHorizontal ? _scrollHorizontalInfo : _scrollVerticalInfo\r\n                    };\r\n                }\r\n\r\n\r\n                //==== Scrollbar Corner ====//\r\n\r\n                /**\r\n                 * Builds or destroys the scrollbar corner DOM element.\r\n                 * @param destroy Indicates whether the DOM shall be build or destroyed.\r\n                 */\r\n                function setupScrollbarCornerDOM(destroy) {\r\n                    _scrollbarCornerElement = _scrollbarCornerElement || selectOrGenerateDivByClass(_classNameScrollbarCorner, true);\r\n\r\n                    if (!destroy) {\r\n                        if (!_domExists) {\r\n                            _hostElement.append(_scrollbarCornerElement);\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (_domExists && _initialized) {\r\n                            removeClass(_scrollbarCornerElement.removeAttr(LEXICON.s), _classNamesDynamicDestroy);\r\n                        }\r\n                        else {\r\n                            remove(_scrollbarCornerElement);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                /**\r\n                 * Initializes all scrollbar corner interactivity events.\r\n                 */\r\n                function setupScrollbarCornerEvents() {\r\n                    var insideIFrame = _windowElementNative.top !== _windowElementNative;\r\n                    var mouseDownPosition = {};\r\n                    var mouseDownSize = {};\r\n                    var mouseDownInvertedScale = {};\r\n                    var reconnectMutationObserver;\r\n\r\n                    function documentDragMove(event) {\r\n                        if (onMouseTouchDownContinue(event)) {\r\n                            var pageOffset = getCoordinates(event);\r\n                            var hostElementCSS = {};\r\n                            if (_resizeHorizontal || _resizeBoth)\r\n                                hostElementCSS[_strWidth] = (mouseDownSize.w + (pageOffset.x - mouseDownPosition.x) * mouseDownInvertedScale.x);\r\n                            if (_resizeVertical || _resizeBoth)\r\n                                hostElementCSS[_strHeight] = (mouseDownSize.h + (pageOffset.y - mouseDownPosition.y) * mouseDownInvertedScale.y);\r\n                            _hostElement.css(hostElementCSS);\r\n                            COMPATIBILITY.stpP(event);\r\n                        }\r\n                        else {\r\n                            documentMouseTouchUp(event);\r\n                        }\r\n                    }\r\n                    function documentMouseTouchUp(event) {\r\n                        var eventIsTrusted = event !== undefined;\r\n\r\n                        setupResponsiveEventListener(_documentElement,\r\n                            [_strSelectStartEvent, _strMouseTouchMoveEvent, _strMouseTouchUpEvent],\r\n                            [documentOnSelectStart, documentDragMove, documentMouseTouchUp],\r\n                            true);\r\n\r\n                        removeClass(_bodyElement, _classNameDragging);\r\n                        if (_scrollbarCornerElement.releaseCapture)\r\n                            _scrollbarCornerElement.releaseCapture();\r\n\r\n                        if (eventIsTrusted) {\r\n                            if (reconnectMutationObserver)\r\n                                connectMutationObservers();\r\n                            _base.update(_strAuto);\r\n                        }\r\n                        reconnectMutationObserver = false;\r\n                    }\r\n                    function onMouseTouchDownContinue(event) {\r\n                        var originalEvent = event.originalEvent || event;\r\n                        var isTouchEvent = originalEvent.touches !== undefined;\r\n                        return _sleeping || _destroyed ? false : COMPATIBILITY.mBtn(event) === 1 || isTouchEvent;\r\n                    }\r\n                    function getCoordinates(event) {\r\n                        return _msieVersion && insideIFrame ? { x: event.screenX, y: event.screenY } : COMPATIBILITY.page(event);\r\n                    }\r\n\r\n                    addDestroyEventListener(_scrollbarCornerElement, _strMouseTouchDownEvent, function (event) {\r\n                        if (onMouseTouchDownContinue(event) && !_resizeNone) {\r\n                            if (_mutationObserversConnected) {\r\n                                reconnectMutationObserver = true;\r\n                                disconnectMutationObservers();\r\n                            }\r\n\r\n                            mouseDownPosition = getCoordinates(event);\r\n\r\n                            mouseDownSize.w = _hostElementNative[LEXICON.oW] - (!_isBorderBox ? _paddingX : 0);\r\n                            mouseDownSize.h = _hostElementNative[LEXICON.oH] - (!_isBorderBox ? _paddingY : 0);\r\n                            mouseDownInvertedScale = getHostElementInvertedScale();\r\n\r\n                            setupResponsiveEventListener(_documentElement,\r\n                                [_strSelectStartEvent, _strMouseTouchMoveEvent, _strMouseTouchUpEvent],\r\n                                [documentOnSelectStart, documentDragMove, documentMouseTouchUp]);\r\n\r\n                            addClass(_bodyElement, _classNameDragging);\r\n                            if (_scrollbarCornerElement.setCapture)\r\n                                _scrollbarCornerElement.setCapture();\r\n\r\n                            COMPATIBILITY.prvD(event);\r\n                            COMPATIBILITY.stpP(event);\r\n                        }\r\n                    });\r\n                }\r\n\r\n\r\n                //==== Utils ====//\r\n\r\n                /**\r\n                 * Calls the callback with the given name. The Context of this callback is always _base (this).\r\n                 * @param name The name of the target which shall be called.\r\n                 * @param args The args with which the callback shall be called.\r\n                 * @param dependent Boolean which decides whether the callback shall be fired, undefined is like a \"true\" value.\r\n                 */\r\n                function dispatchCallback(name, args, dependent) {\r\n                    if (dependent === false)\r\n                        return;\r\n                    if (_initialized) {\r\n                        var callback = _currentPreparedOptions.callbacks[name];\r\n                        var extensionOnName = name;\r\n                        var ext;\r\n\r\n                        if (extensionOnName.substr(0, 2) === 'on')\r\n                            extensionOnName = extensionOnName.substr(2, 1).toLowerCase() + extensionOnName.substr(3);\r\n\r\n                        if (type(callback) == TYPES.f)\r\n                            callback.call(_base, args);\r\n\r\n                        each(_extensions, function () {\r\n                            ext = this;\r\n                            if (type(ext.on) == TYPES.f)\r\n                                ext.on(extensionOnName, args);\r\n                        });\r\n                    }\r\n                    else if (!_destroyed)\r\n                        _callbacksInitQeueue.push({ n: name, a: args });\r\n                }\r\n\r\n                /**\r\n                 * Sets the \"top, right, bottom, left\" properties, with a given prefix, of the given css object.\r\n                 * @param targetCSSObject The css object to which the values shall be applied.\r\n                 * @param prefix The prefix of the \"top, right, bottom, left\" css properties. (example: 'padding-' is a valid prefix)\r\n                 * @param values A array of values which shall be applied to the \"top, right, bottom, left\" -properties. The array order is [top, right, bottom, left].\r\n                 * If this argument is undefined the value '' (empty string) will be applied to all properties.\r\n                 */\r\n                function setTopRightBottomLeft(targetCSSObject, prefix, values) {\r\n                    prefix = prefix || _strEmpty;\r\n                    values = values || [_strEmpty, _strEmpty, _strEmpty, _strEmpty];\r\n\r\n                    targetCSSObject[prefix + _strTop] = values[0];\r\n                    targetCSSObject[prefix + _strRight] = values[1];\r\n                    targetCSSObject[prefix + _strBottom] = values[2];\r\n                    targetCSSObject[prefix + _strLeft] = values[3];\r\n                }\r\n\r\n                /**\r\n                 * Gets the \"top, right, bottom, left\" CSS properties of the CSS property with the given prefix from the host element.\r\n                 * @param prefix The prefix of the \"top, right, bottom, left\" css properties. (example: 'padding-' is a valid prefix)\r\n                 * @param suffix The suffix of the \"top, right, bottom, left\" css properties. (example: 'border-' is a valid prefix with '-width' is a valid suffix)\r\n                 * @param zeroX True if the x axis shall be 0.\r\n                 * @param zeroY True if the y axis shall be 0.\r\n                 * @returns {{}} The object which contains the numbers of the read CSS properties.\r\n                 */\r\n                function getTopRightBottomLeftHost(prefix, suffix, zeroX, zeroY) {\r\n                    suffix = suffix || _strEmpty;\r\n                    prefix = prefix || _strEmpty;\r\n                    return {\r\n                        t: zeroY ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strTop + suffix)),\r\n                        r: zeroX ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strRight + suffix)),\r\n                        b: zeroY ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strBottom + suffix)),\r\n                        l: zeroX ? 0 : parseToZeroOrNumber(_hostElement.css(prefix + _strLeft + suffix))\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * Returns the computed CSS transition string from the given element.\r\n                 * @param element The element from which the transition string shall be returned.\r\n                 * @returns {string} The CSS transition string from the given element.\r\n                 */\r\n                function getCSSTransitionString(element) {\r\n                    var transitionStr = VENDORS._cssProperty('transition');\r\n                    var assembledValue = element.css(transitionStr);\r\n                    if (assembledValue)\r\n                        return assembledValue;\r\n                    var regExpString = '\\\\s*(' + '([^,(]+(\\\\(.+?\\\\))?)+' + ')[\\\\s,]*';\r\n                    var regExpMain = new RegExp(regExpString);\r\n                    var regExpValidate = new RegExp('^(' + regExpString + ')+$');\r\n                    var properties = 'property duration timing-function delay'.split(' ');\r\n                    var result = [];\r\n                    var strResult;\r\n                    var valueArray;\r\n                    var i = 0;\r\n                    var j;\r\n                    var splitCssStyleByComma = function (str) {\r\n                        strResult = [];\r\n                        if (!str.match(regExpValidate))\r\n                            return str;\r\n                        while (str.match(regExpMain)) {\r\n                            strResult.push(RegExp.$1);\r\n                            str = str.replace(regExpMain, _strEmpty);\r\n                        }\r\n\r\n                        return strResult;\r\n                    };\r\n                    for (; i < properties[LEXICON.l]; i++) {\r\n                        valueArray = splitCssStyleByComma(element.css(transitionStr + '-' + properties[i]));\r\n                        for (j = 0; j < valueArray[LEXICON.l]; j++)\r\n                            result[j] = (result[j] ? result[j] + _strSpace : _strEmpty) + valueArray[j];\r\n                    }\r\n                    return result.join(', ');\r\n                }\r\n\r\n                /**\r\n                 * Generates a Regular Expression which matches with a string which starts with 'os-host'.\r\n                 * @param {boolean} withCurrClassNameOption The Regular Expression also matches if the string is the current ClassName option (multiple values splitted by space possible).\r\n                 * @param {boolean} withOldClassNameOption The Regular Expression also matches if the string is the old ClassName option (multiple values splitted by space possible).\r\n                 */\r\n                function createHostClassNameRegExp(withCurrClassNameOption, withOldClassNameOption) {\r\n                    var i;\r\n                    var split;\r\n                    var appendix;\r\n                    var appendClasses = function (classes, condition) {\r\n                        appendix = '';\r\n                        if (condition && typeof classes == TYPES.s) {\r\n                            split = classes.split(_strSpace);\r\n                            for (i = 0; i < split[LEXICON.l]; i++)\r\n                                appendix += '|' + split[i] + '$';\r\n                            // split[i].replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') for escaping regex characters\r\n                        }\r\n                        return appendix;\r\n                    };\r\n\r\n                    return new RegExp(\r\n                        '(^' + _classNameHostElement + '([-_].+|)$)' +\r\n                        appendClasses(_classNameCache, withCurrClassNameOption) +\r\n                        appendClasses(_oldClassName, withOldClassNameOption), 'g');\r\n                }\r\n\r\n                /**\r\n                 * Calculates the host-elements inverted scale. (invertedScale = 1 / scale)\r\n                 * @returns {{x: number, y: number}} The scale of the host-element.\r\n                 */\r\n                function getHostElementInvertedScale() {\r\n                    var rect = _paddingElementNative[LEXICON.bCR]();\r\n                    return {\r\n                        x: _supportTransform ? 1 / (MATH.round(rect.width) / _paddingElementNative[LEXICON.oW]) || 1 : 1,\r\n                        y: _supportTransform ? 1 / (MATH.round(rect.height) / _paddingElementNative[LEXICON.oH]) || 1 : 1\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * Checks whether the given object is a HTMLElement.\r\n                 * @param o The object which shall be checked.\r\n                 * @returns {boolean} True the given object is a HTMLElement, false otherwise.\r\n                 */\r\n                function isHTMLElement(o) {\r\n                    var strOwnerDocument = 'ownerDocument';\r\n                    var strHTMLElement = 'HTMLElement';\r\n                    var wnd = o && o[strOwnerDocument] ? (o[strOwnerDocument].parentWindow || window) : window;\r\n                    return (\r\n                        typeof wnd[strHTMLElement] == TYPES.o ? o instanceof wnd[strHTMLElement] : //DOM2\r\n                            o && typeof o == TYPES.o && o !== null && o.nodeType === 1 && typeof o.nodeName == TYPES.s\r\n                    );\r\n                }\r\n\r\n                /**\r\n                 * Compares 2 arrays and returns the differences between them as a array.\r\n                 * @param a1 The first array which shall be compared.\r\n                 * @param a2 The second array which shall be compared.\r\n                 * @returns {Array} The differences between the two arrays.\r\n                 */\r\n                function getArrayDifferences(a1, a2) {\r\n                    var a = [];\r\n                    var diff = [];\r\n                    var i;\r\n                    var k;\r\n                    for (i = 0; i < a1.length; i++)\r\n                        a[a1[i]] = true;\r\n                    for (i = 0; i < a2.length; i++) {\r\n                        if (a[a2[i]])\r\n                            delete a[a2[i]];\r\n                        else\r\n                            a[a2[i]] = true;\r\n                    }\r\n                    for (k in a)\r\n                        diff.push(k);\r\n                    return diff;\r\n                }\r\n\r\n                /**\r\n                 * Returns Zero or the number to which the value can be parsed.\r\n                 * @param value The value which shall be parsed.\r\n                 * @param toFloat Indicates whether the number shall be parsed to a float.\r\n                 */\r\n                function parseToZeroOrNumber(value, toFloat) {\r\n                    var num = toFloat ? parseFloat(value) : parseInt(value, 10);\r\n                    return isNaN(num) ? 0 : num;\r\n                }\r\n\r\n                /**\r\n                 * Gets several information of the textarea and returns them as a object or undefined if the browser doesn't support it.\r\n                 * @returns {{cursorRow: Number, cursorCol, rows: Number, cols: number, wRow: number, pos: number, max : number}} or undefined if not supported.\r\n                 */\r\n                function getTextareaInfo() {\r\n                    //read needed values\r\n                    var textareaCursorPosition = _targetElementNative.selectionStart;\r\n                    if (textareaCursorPosition === undefined)\r\n                        return;\r\n\r\n                    var textareaValue = _targetElement.val();\r\n                    var textareaLength = textareaValue[LEXICON.l];\r\n                    var textareaRowSplit = textareaValue.split('\\n');\r\n                    var textareaLastRow = textareaRowSplit[LEXICON.l];\r\n                    var textareaCurrentCursorRowSplit = textareaValue.substr(0, textareaCursorPosition).split('\\n');\r\n                    var widestRow = 0;\r\n                    var textareaLastCol = 0;\r\n                    var cursorRow = textareaCurrentCursorRowSplit[LEXICON.l];\r\n                    var cursorCol = textareaCurrentCursorRowSplit[textareaCurrentCursorRowSplit[LEXICON.l] - 1][LEXICON.l];\r\n                    var rowCols;\r\n                    var i;\r\n\r\n                    //get widest Row and the last column of the textarea\r\n                    for (i = 0; i < textareaRowSplit[LEXICON.l]; i++) {\r\n                        rowCols = textareaRowSplit[i][LEXICON.l];\r\n                        if (rowCols > textareaLastCol) {\r\n                            widestRow = i + 1;\r\n                            textareaLastCol = rowCols;\r\n                        }\r\n                    }\r\n\r\n                    return {\r\n                        _cursorRow: cursorRow, //cursorRow\r\n                        _cursorColumn: cursorCol, //cursorCol\r\n                        _rows: textareaLastRow, //rows\r\n                        _columns: textareaLastCol, //cols\r\n                        _widestRow: widestRow, //wRow\r\n                        _cursorPosition: textareaCursorPosition, //pos\r\n                        _cursorMax: textareaLength //max\r\n                    };\r\n                }\r\n\r\n                /**\r\n                 * Determines whether native overlay scrollbars are active.\r\n                 * @returns {boolean} True if native overlay scrollbars are active, false otherwise.\r\n                 */\r\n                function nativeOverlayScrollbarsAreActive() {\r\n                    return (_ignoreOverlayScrollbarHidingCache && (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y));\r\n                }\r\n\r\n                /**\r\n                 * Gets the element which is used to measure the content size.\r\n                 * @returns {*} TextareaCover if target element is textarea else the ContentElement.\r\n                 */\r\n                function getContentMeasureElement() {\r\n                    return _isTextarea ? _textareaCoverElement[0] : _contentElementNative;\r\n                }\r\n\r\n                /**\r\n                 * Generates a string which represents a HTML div with the given classes or attributes.\r\n                 * @param classesOrAttrs The class of the div as string or a object which represents the attributes of the div. (The class attribute can also be written as \"className\".)\r\n                 * @param content The content of the div as string.\r\n                 * @returns {string} The concated string which represents a HTML div and its content.\r\n                 */\r\n                function generateDiv(classesOrAttrs, content) {\r\n                    return '<div ' + (classesOrAttrs ? type(classesOrAttrs) == TYPES.s ?\r\n                        'class=\"' + classesOrAttrs + '\"' :\r\n                        (function () {\r\n                            var key;\r\n                            var attrs = _strEmpty;\r\n                            if (FRAMEWORK.isPlainObject(classesOrAttrs)) {\r\n                                for (key in classesOrAttrs)\r\n                                    attrs += (key === 'c' ? 'class' : key) + '=\"' + classesOrAttrs[key] + '\" ';\r\n                            }\r\n                            return attrs;\r\n                        })() :\r\n                        _strEmpty) +\r\n                        '>' +\r\n                        (content || _strEmpty) +\r\n                        '</div>';\r\n                }\r\n\r\n                /**\r\n                 * Selects or generates a div with the given class attribute.\r\n                 * @param className The class names (divided by spaces) of the div which shall be selected or generated.\r\n                 * @param selectParentOrOnlyChildren The parent element from which of the element shall be selected. (if undefined or boolean its hostElement)\r\n                 * If its a boolean it decides whether only the children of the host element shall be selected.\r\n                 * @returns {*} The generated or selected element.\r\n                 */\r\n                function selectOrGenerateDivByClass(className, selectParentOrOnlyChildren) {\r\n                    var onlyChildren = type(selectParentOrOnlyChildren) == TYPES.b;\r\n                    var selectParent = onlyChildren ? _hostElement : (selectParentOrOnlyChildren || _hostElement);\r\n\r\n                    return (_domExists && !selectParent[LEXICON.l])\r\n                        ? null\r\n                        : _domExists\r\n                            ? selectParent[onlyChildren ? 'children' : 'find'](_strDot + className.replace(/\\s/g, _strDot)).eq(0)\r\n                            : FRAMEWORK(generateDiv(className))\r\n                }\r\n\r\n                /**\r\n                 * Gets the value of the given property from the given object.\r\n                 * @param obj The object from which the property value shall be got.\r\n                 * @param path The property of which the value shall be got.\r\n                 * @returns {*} Returns the value of the searched property or undefined of the property wasn't found.\r\n                 */\r\n                function getObjectPropVal(obj, path) {\r\n                    var splits = path.split(_strDot);\r\n                    var i = 0;\r\n                    var val;\r\n                    for (; i < splits.length; i++) {\r\n                        if (!obj[LEXICON.hOP](splits[i]))\r\n                            return;\r\n                        val = obj[splits[i]];\r\n                        if (i < splits.length && type(val) == TYPES.o)\r\n                            obj = val;\r\n                    }\r\n                    return val;\r\n                }\r\n\r\n                /**\r\n                 * Sets the value of the given property from the given object.\r\n                 * @param obj The object from which the property value shall be set.\r\n                 * @param path The property of which the value shall be set.\r\n                 * @param val The value of the property which shall be set.\r\n                 */\r\n                function setObjectPropVal(obj, path, val) {\r\n                    var splits = path.split(_strDot);\r\n                    var splitsLength = splits.length;\r\n                    var i = 0;\r\n                    var extendObj = {};\r\n                    var extendObjRoot = extendObj;\r\n                    for (; i < splitsLength; i++)\r\n                        extendObj = extendObj[splits[i]] = i + 1 < splitsLength ? {} : val;\r\n                    FRAMEWORK.extend(obj, extendObjRoot, true);\r\n                }\r\n\r\n                /**\t\r\n                 * Runs a action for each selector inside the updateOnLoad option.\t\r\n                 * @param {Function} action The action for each updateOnLoad selector, the arguments the function takes is the index and the value (the selector).\t\r\n                 */\r\n                function eachUpdateOnLoad(action) {\r\n                    var updateOnLoad = _currentPreparedOptions.updateOnLoad;\r\n                    updateOnLoad = type(updateOnLoad) == TYPES.s ? updateOnLoad.split(_strSpace) : updateOnLoad;\r\n\r\n                    if (COMPATIBILITY.isA(updateOnLoad) && !_destroyed) {\r\n                        each(updateOnLoad, action);\r\n                    }\r\n                }\r\n\r\n\r\n                //==== Utils Cache ====//\r\n\r\n                /**\r\n                 * Compares two values or objects and returns true if they aren't equal.\r\n                 * @param current The first value or object which shall be compared.\r\n                 * @param cache The second value or object which shall be compared.\r\n                 * @param force If true the returned value is always true.\r\n                 * @returns {boolean} True if both values or objects aren't equal or force is true, false otherwise.\r\n                 */\r\n                function checkCache(current, cache, force) {\r\n                    if (force)\r\n                        return force;\r\n                    if (type(current) == TYPES.o && type(cache) == TYPES.o) {\r\n                        for (var prop in current) {\r\n                            if (prop !== 'c') {\r\n                                if (current[LEXICON.hOP](prop) && cache[LEXICON.hOP](prop)) {\r\n                                    if (checkCache(current[prop], cache[prop]))\r\n                                        return true;\r\n                                }\r\n                                else {\r\n                                    return true;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        return current !== cache;\r\n                    }\r\n                    return false;\r\n                }\r\n\r\n\r\n                //==== Shortcuts ====//\r\n\r\n                /**\r\n                 * jQuery extend method shortcut with a appended \"true\" as first argument.\r\n                 */\r\n                function extendDeep() {\r\n                    return FRAMEWORK.extend.apply(this, [true].concat([].slice.call(arguments)));\r\n                }\r\n\r\n                /**\r\n                 * jQuery addClass method shortcut.\r\n                 */\r\n                function addClass(el, classes) {\r\n                    return _frameworkProto.addClass.call(el, classes);\r\n                }\r\n\r\n                /**\r\n                 * jQuery removeClass method shortcut.\r\n                 */\r\n                function removeClass(el, classes) {\r\n                    return _frameworkProto.removeClass.call(el, classes);\r\n                }\r\n\r\n                /**\r\n                 * Adds or removes the given classes dependent on the boolean value. True for add, false for remove.\r\n                 */\r\n                function addRemoveClass(el, classes, doAdd) {\r\n                    return doAdd ? addClass(el, classes) : removeClass(el, classes);\r\n                }\r\n\r\n                /**\r\n                 * jQuery remove method shortcut.\r\n                 */\r\n                function remove(el) {\r\n                    return _frameworkProto.remove.call(el);\r\n                }\r\n\r\n                /**\r\n                 * Finds the first child element with the given selector of the given element.\r\n                 * @param el The root element from which the selector shall be valid.\r\n                 * @param selector The selector of the searched element.\r\n                 * @returns {*} The first element which is a child of the given element and matches the givens selector.\r\n                 */\r\n                function findFirst(el, selector) {\r\n                    return _frameworkProto.find.call(el, selector).eq(0);\r\n                }\r\n\r\n\r\n                //==== API ====//\r\n\r\n                /**\r\n                 * Puts the instance to sleep. It wont respond to any changes in the DOM and won't update. Scrollbar Interactivity is also disabled as well as the resize handle.\r\n                 * This behavior can be reset by calling the update method.\r\n                 */\r\n                _base.sleep = function () {\r\n                    _sleeping = true;\r\n                };\r\n\r\n                /**\r\n                 * Updates the plugin and DOM to the current options.\r\n                 * This method should only be called if a update is 100% required.\r\n                 * @param force True if every property shall be updated and the cache shall be ignored.\r\n                 * !INTERNAL USAGE! : force can be a string \"auto\", \"sync\" or \"zoom\" too\r\n                 * if \"auto\" then before a real update the content size and host element attributes gets checked, and if they changed only then the update method will be called.\r\n                 * if \"sync\" then the async update process (MutationObserver or UpdateLoop) gets synchronized and a corresponding update takes place if one was needed due to pending changes.\r\n                 * if \"zoom\" then a update takes place where it's assumed that content and host size changed\r\n                 * @returns {boolean|undefined} \r\n                 * If force is \"sync\" then a boolean is returned which indicates whether a update was needed due to pending changes.\r\n                 * If force is \"auto\" then a boolean is returned whether a update was needed due to attribute or size changes.\r\n                 * undefined otherwise.\r\n                 */\r\n                _base.update = function (force) {\r\n                    if (_destroyed)\r\n                        return;\r\n\r\n                    var attrsChanged;\r\n                    var contentSizeC;\r\n                    var isString = type(force) == TYPES.s;\r\n                    var doUpdateAuto;\r\n                    var mutHost;\r\n                    var mutContent;\r\n\r\n                    if (isString) {\r\n                        if (force === _strAuto) {\r\n                            attrsChanged = meaningfulAttrsChanged();\r\n                            contentSizeC = updateAutoContentSizeChanged();\r\n                            doUpdateAuto = attrsChanged || contentSizeC;\r\n                            if (doUpdateAuto) {\r\n                                update({\r\n                                    _contentSizeChanged: contentSizeC,\r\n                                    _changedOptions: _initialized ? undefined : _currentPreparedOptions\r\n                                });\r\n                            }\r\n                        }\r\n                        else if (force === _strSync) {\r\n                            if (_mutationObserversConnected) {\r\n                                mutHost = _mutationObserverHostCallback(_mutationObserverHost.takeRecords());\r\n                                mutContent = _mutationObserverContentCallback(_mutationObserverContent.takeRecords());\r\n                            }\r\n                            else {\r\n                                mutHost = _base.update(_strAuto);\r\n                            }\r\n                        }\r\n                        else if (force === 'zoom') {\r\n                            update({\r\n                                _hostSizeChanged: true,\r\n                                _contentSizeChanged: true\r\n                            });\r\n                        }\r\n                    }\r\n                    else {\r\n                        force = _sleeping || force;\r\n                        _sleeping = false;\r\n                        if (!_base.update(_strSync) || force)\r\n                            update({ _force: force });\r\n                    }\r\n\r\n                    updateElementsOnLoad();\r\n\r\n                    return doUpdateAuto || mutHost || mutContent;\r\n                };\r\n\r\n                /**\r\n                 Gets or sets the current options. The update method will be called automatically if new options were set.\r\n                 * @param newOptions If new options are given, then the new options will be set, if new options aren't given (undefined or a not a plain object) then the current options will be returned.\r\n                 * @param value If new options is a property path string, then this value will be used to set the option to which the property path string leads.\r\n                 * @returns {*}\r\n                 */\r\n                _base.options = function (newOptions, value) {\r\n                    var option = {};\r\n                    var changedOps;\r\n\r\n                    //return current options if newOptions are undefined or empty\r\n                    if (FRAMEWORK.isEmptyObject(newOptions) || !FRAMEWORK.isPlainObject(newOptions)) {\r\n                        if (type(newOptions) == TYPES.s) {\r\n                            if (arguments.length > 1) {\r\n                                setObjectPropVal(option, newOptions, value);\r\n                                changedOps = setOptions(option);\r\n                            }\r\n                            else\r\n                                return getObjectPropVal(_currentOptions, newOptions);\r\n                        }\r\n                        else\r\n                            return _currentOptions;\r\n                    }\r\n                    else {\r\n                        changedOps = setOptions(newOptions);\r\n                    }\r\n\r\n                    if (!FRAMEWORK.isEmptyObject(changedOps)) {\r\n                        update({ _changedOptions: changedOps });\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Restore the DOM, disconnects all observers, remove all resize observers and put the instance to sleep.\r\n                 */\r\n                _base.destroy = function () {\r\n                    if (_destroyed)\r\n                        return;\r\n\r\n                    //remove this instance from auto update loop\r\n                    autoUpdateLoop.remove(_base);\r\n\r\n                    //disconnect all mutation observers\r\n                    disconnectMutationObservers();\r\n\r\n                    //remove all resize observers\r\n                    setupResizeObserver(_sizeObserverElement);\r\n                    setupResizeObserver(_sizeAutoObserverElement);\r\n\r\n                    //remove all extensions\r\n                    for (var extName in _extensions)\r\n                        _base.removeExt(extName);\r\n\r\n                    //remove all 'destroy' events\r\n                    while (_destroyEvents[LEXICON.l] > 0)\r\n                        _destroyEvents.pop()();\r\n\r\n                    //remove all events from host element\r\n                    setupHostMouseTouchEvents(true);\r\n\r\n                    //remove all helper / detection elements\r\n                    if (_contentGlueElement)\r\n                        remove(_contentGlueElement);\r\n                    if (_contentArrangeElement)\r\n                        remove(_contentArrangeElement);\r\n                    if (_sizeAutoObserverAdded)\r\n                        remove(_sizeAutoObserverElement);\r\n\r\n                    //remove all generated DOM\r\n                    setupScrollbarsDOM(true);\r\n                    setupScrollbarCornerDOM(true);\r\n                    setupStructureDOM(true);\r\n\r\n                    //remove all generated image load events\r\n                    for (var i = 0; i < _updateOnLoadElms[LEXICON.l]; i++)\r\n                        FRAMEWORK(_updateOnLoadElms[i]).off(_updateOnLoadEventName, updateOnLoadCallback);\r\n                    _updateOnLoadElms = undefined;\r\n\r\n                    _destroyed = true;\r\n                    _sleeping = true;\r\n\r\n                    //remove this instance from the instances list\r\n                    INSTANCES(pluginTargetElement, 0);\r\n                    dispatchCallback('onDestroyed');\r\n\r\n                    //remove all properties and methods\r\n                    //for (var property in _base)\r\n                    //    delete _base[property];\r\n                    //_base = undefined;\r\n                };\r\n\r\n                /**\r\n                 * Scrolls to a given position or element.\r\n                 * @param coordinates\r\n                 * 1. Can be \"coordinates\" which looks like:\r\n                 *    { x : ?, y : ? } OR          Object with x and y properties\r\n                 *    { left : ?, top : ? } OR     Object with left and top properties\r\n                 *    { l : ?, t : ? } OR          Object with l and t properties\r\n                 *    [ ?, ? ] OR                  Array where the first two element are the coordinates (first is x, second is y)\r\n                 *    ?                            A single value which stays for both axis\r\n                 *    A value can be a number, a string or a calculation.\r\n                 *\r\n                 *    Operators:\r\n                 *    [NONE]  The current scroll will be overwritten by the value.\r\n                 *    '+='    The value will be added to the current scroll offset\r\n                 *    '-='    The value will be subtracted from the current scroll offset\r\n                 *    '*='    The current scroll wil be multiplicated by the value.\r\n                 *    '/='    The current scroll wil be divided by the value.\r\n                 *\r\n                 *    Units:\r\n                 *    [NONE]  The value is the final scroll amount.                   final = (value * 1)\r\n                 *    'px'    Same as none\r\n                 *    '%'     The value is dependent on the current scroll value.     final = ((currentScrollValue / 100) * value)\r\n                 *    'vw'    The value is multiplicated by the viewport width.       final = (value * viewportWidth)\r\n                 *    'vh'    The value is multiplicated by the viewport height.      final = (value * viewportHeight)\r\n                 *\r\n                 *    example final values:\r\n                 *    200, '200px', '50%', '1vw', '1vh', '+=200', '/=1vw', '*=2px', '-=5vh', '+=33%', '+= 50% - 2px', '-= 1vw - 50%'\r\n                 *\r\n                 * 2. Can be a HTML or jQuery element:\r\n                 *    The final scroll offset is the offset (without margin) of the given HTML / jQuery element.\r\n                 *\r\n                 * 3. Can be a object with a HTML or jQuery element with additional settings:\r\n                 *    {\r\n                 *      el : [HTMLElement, jQuery element],             MUST be specified, else this object isn't valid.\r\n                 *      scroll : [string, array, object],               Default value is 'always'.\r\n                 *      block : [string, array, object],                Default value is 'begin'.\r\n                 *      margin : [number, boolean, array, object]       Default value is false.\r\n                 *    }\r\n                 *\r\n                 *    Possible scroll settings are:\r\n                 *    'always'      Scrolls always.\r\n                 *    'ifneeded'    Scrolls only if the element isnt fully in view.\r\n                 *    'never'       Scrolls never.\r\n                 *\r\n                 *    Possible block settings are:\r\n                 *    'begin'   Both axis shall be docked to the \"begin\" edge. - The element will be docked to the top and left edge of the viewport.\r\n                 *    'end'     Both axis shall be docked to the \"end\" edge. - The element will be docked to the bottom and right edge of the viewport. (If direction is RTL to the bottom and left edge.)\r\n                 *    'center'  Both axis shall be docked to \"center\". - The element will be centered in the viewport.\r\n                 *    'nearest' The element will be docked to the nearest edge(s).\r\n                 *\r\n                 *    Possible margin settings are: -- The actual margin of the element wont be affect, this option affects only the final scroll offset.\r\n                 *    [BOOLEAN]                                         If true the css margin of the element will be used, if false no margin will be used.\r\n                 *    [NUMBER]                                          The margin will be used for all edges.\r\n                 *\r\n                 * @param duration The duration of the scroll animation, OR a jQuery animation configuration object.\r\n                 * @param easing The animation easing.\r\n                 * @param complete The animation complete callback.\r\n                 * @returns {{\r\n                 *   position: {x: number, y: number},\r\n                 *   ratio: {x: number, y: number},\r\n                 *   max: {x: number, y: number},\r\n                 *   handleOffset: {x: number, y: number},\r\n                 *   handleLength: {x: number, y: number},\r\n                 *   handleLengthRatio: {x: number, y: number}, t\r\n                 *   rackLength: {x: number, y: number},\r\n                 *   isRTL: boolean,\r\n                 *   isRTLNormalized: boolean\r\n                 *  }}\r\n                 */\r\n                _base.scroll = function (coordinates, duration, easing, complete) {\r\n                    if (arguments.length === 0 || coordinates === undefined) {\r\n                        var infoX = _scrollHorizontalInfo;\r\n                        var infoY = _scrollVerticalInfo;\r\n                        var normalizeInvert = _normalizeRTLCache && _isRTL && _rtlScrollBehavior.i;\r\n                        var normalizeNegate = _normalizeRTLCache && _isRTL && _rtlScrollBehavior.n;\r\n                        var scrollX = infoX._currentScroll;\r\n                        var scrollXRatio = infoX._currentScrollRatio;\r\n                        var maxScrollX = infoX._maxScroll;\r\n                        scrollXRatio = normalizeInvert ? 1 - scrollXRatio : scrollXRatio;\r\n                        scrollX = normalizeInvert ? maxScrollX - scrollX : scrollX;\r\n                        scrollX *= normalizeNegate ? -1 : 1;\r\n                        maxScrollX *= normalizeNegate ? -1 : 1;\r\n\r\n                        return {\r\n                            position: {\r\n                                x: scrollX,\r\n                                y: infoY._currentScroll\r\n                            },\r\n                            ratio: {\r\n                                x: scrollXRatio,\r\n                                y: infoY._currentScrollRatio\r\n                            },\r\n                            max: {\r\n                                x: maxScrollX,\r\n                                y: infoY._maxScroll\r\n                            },\r\n                            handleOffset: {\r\n                                x: infoX._handleOffset,\r\n                                y: infoY._handleOffset\r\n                            },\r\n                            handleLength: {\r\n                                x: infoX._handleLength,\r\n                                y: infoY._handleLength\r\n                            },\r\n                            handleLengthRatio: {\r\n                                x: infoX._handleLengthRatio,\r\n                                y: infoY._handleLengthRatio\r\n                            },\r\n                            trackLength: {\r\n                                x: infoX._trackLength,\r\n                                y: infoY._trackLength\r\n                            },\r\n                            snappedHandleOffset: {\r\n                                x: infoX._snappedHandleOffset,\r\n                                y: infoY._snappedHandleOffset\r\n                            },\r\n                            isRTL: _isRTL,\r\n                            isRTLNormalized: _normalizeRTLCache\r\n                        };\r\n                    }\r\n\r\n                    _base.update(_strSync);\r\n\r\n                    var normalizeRTL = _normalizeRTLCache;\r\n                    var coordinatesXAxisProps = [_strX, _strLeft, 'l'];\r\n                    var coordinatesYAxisProps = [_strY, _strTop, 't'];\r\n                    var coordinatesOperators = ['+=', '-=', '*=', '/='];\r\n                    var durationIsObject = type(duration) == TYPES.o;\r\n                    var completeCallback = durationIsObject ? duration.complete : complete;\r\n                    var i;\r\n                    var finalScroll = {};\r\n                    var specialEasing = {};\r\n                    var doScrollLeft;\r\n                    var doScrollTop;\r\n                    var animationOptions;\r\n                    var strEnd = 'end';\r\n                    var strBegin = 'begin';\r\n                    var strCenter = 'center';\r\n                    var strNearest = 'nearest';\r\n                    var strAlways = 'always';\r\n                    var strNever = 'never';\r\n                    var strIfNeeded = 'ifneeded';\r\n                    var strLength = LEXICON.l;\r\n                    var settingsAxis;\r\n                    var settingsScroll;\r\n                    var settingsBlock;\r\n                    var settingsMargin;\r\n                    var finalElement;\r\n                    var elementObjSettingsAxisValues = [_strX, _strY, 'xy', 'yx'];\r\n                    var elementObjSettingsBlockValues = [strBegin, strEnd, strCenter, strNearest];\r\n                    var elementObjSettingsScrollValues = [strAlways, strNever, strIfNeeded];\r\n                    var coordinatesIsElementObj = coordinates[LEXICON.hOP]('el');\r\n                    var possibleElement = coordinatesIsElementObj ? coordinates.el : coordinates;\r\n                    var possibleElementIsJQuery = possibleElement instanceof FRAMEWORK || JQUERY ? possibleElement instanceof JQUERY : false;\r\n                    var possibleElementIsHTMLElement = possibleElementIsJQuery ? false : isHTMLElement(possibleElement);\r\n                    var updateScrollbarInfos = function () {\r\n                        if (doScrollLeft)\r\n                            refreshScrollbarHandleOffset(true);\r\n                        if (doScrollTop)\r\n                            refreshScrollbarHandleOffset(false);\r\n                    };\r\n                    var proxyCompleteCallback = type(completeCallback) != TYPES.f ? undefined : function () {\r\n                        updateScrollbarInfos();\r\n                        completeCallback();\r\n                    };\r\n                    function checkSettingsStringValue(currValue, allowedValues) {\r\n                        for (i = 0; i < allowedValues[strLength]; i++) {\r\n                            if (currValue === allowedValues[i])\r\n                                return true;\r\n                        }\r\n                        return false;\r\n                    }\r\n                    function getRawScroll(isX, coordinates) {\r\n                        var coordinateProps = isX ? coordinatesXAxisProps : coordinatesYAxisProps;\r\n                        coordinates = type(coordinates) == TYPES.s || type(coordinates) == TYPES.n ? [coordinates, coordinates] : coordinates;\r\n\r\n                        if (COMPATIBILITY.isA(coordinates))\r\n                            return isX ? coordinates[0] : coordinates[1];\r\n                        else if (type(coordinates) == TYPES.o) {\r\n                            //decides RTL normalization \"hack\" with .n\r\n                            //normalizeRTL = type(coordinates.n) == TYPES.b ? coordinates.n : normalizeRTL; \r\n                            for (i = 0; i < coordinateProps[strLength]; i++)\r\n                                if (coordinateProps[i] in coordinates)\r\n                                    return coordinates[coordinateProps[i]];\r\n                        }\r\n                    }\r\n                    function getFinalScroll(isX, rawScroll) {\r\n                        var isString = type(rawScroll) == TYPES.s;\r\n                        var operator;\r\n                        var amount;\r\n                        var scrollInfo = isX ? _scrollHorizontalInfo : _scrollVerticalInfo;\r\n                        var currScroll = scrollInfo._currentScroll;\r\n                        var maxScroll = scrollInfo._maxScroll;\r\n                        var mult = ' * ';\r\n                        var finalValue;\r\n                        var isRTLisX = _isRTL && isX;\r\n                        var normalizeShortcuts = isRTLisX && _rtlScrollBehavior.n && !normalizeRTL;\r\n                        var strReplace = 'replace';\r\n                        var evalFunc = eval;\r\n                        var possibleOperator;\r\n                        if (isString) {\r\n                            //check operator\r\n                            if (rawScroll[strLength] > 2) {\r\n                                possibleOperator = rawScroll.substr(0, 2);\r\n                                if (inArray(possibleOperator, coordinatesOperators) > -1)\r\n                                    operator = possibleOperator;\r\n                            }\r\n\r\n                            //calculate units and shortcuts\r\n                            rawScroll = operator ? rawScroll.substr(2) : rawScroll;\r\n                            rawScroll = rawScroll\r\n                            [strReplace](/min/g, 0) //'min' = 0%\r\n                            [strReplace](/</g, 0)   //'<'   = 0%\r\n                            [strReplace](/max/g, (normalizeShortcuts ? '-' : _strEmpty) + _strHundredPercent)    //'max' = 100%\r\n                            [strReplace](/>/g, (normalizeShortcuts ? '-' : _strEmpty) + _strHundredPercent)      //'>'   = 100%\r\n                            [strReplace](/px/g, _strEmpty)\r\n                            [strReplace](/%/g, mult + (maxScroll * (isRTLisX && _rtlScrollBehavior.n ? -1 : 1) / 100.0))\r\n                            [strReplace](/vw/g, mult + _viewportSize.w)\r\n                            [strReplace](/vh/g, mult + _viewportSize.h);\r\n                            amount = parseToZeroOrNumber(isNaN(rawScroll) ? parseToZeroOrNumber(evalFunc(rawScroll), true).toFixed() : rawScroll);\r\n                        }\r\n                        else {\r\n                            amount = rawScroll;\r\n                        }\r\n\r\n                        if (amount !== undefined && !isNaN(amount) && type(amount) == TYPES.n) {\r\n                            var normalizeIsRTLisX = normalizeRTL && isRTLisX;\r\n                            var operatorCurrScroll = currScroll * (normalizeIsRTLisX && _rtlScrollBehavior.n ? -1 : 1);\r\n                            var invert = normalizeIsRTLisX && _rtlScrollBehavior.i;\r\n                            var negate = normalizeIsRTLisX && _rtlScrollBehavior.n;\r\n                            operatorCurrScroll = invert ? (maxScroll - operatorCurrScroll) : operatorCurrScroll;\r\n                            switch (operator) {\r\n                                case '+=':\r\n                                    finalValue = operatorCurrScroll + amount;\r\n                                    break;\r\n                                case '-=':\r\n                                    finalValue = operatorCurrScroll - amount;\r\n                                    break;\r\n                                case '*=':\r\n                                    finalValue = operatorCurrScroll * amount;\r\n                                    break;\r\n                                case '/=':\r\n                                    finalValue = operatorCurrScroll / amount;\r\n                                    break;\r\n                                default:\r\n                                    finalValue = amount;\r\n                                    break;\r\n                            }\r\n                            finalValue = invert ? maxScroll - finalValue : finalValue;\r\n                            finalValue *= negate ? -1 : 1;\r\n                            finalValue = isRTLisX && _rtlScrollBehavior.n ? MATH.min(0, MATH.max(maxScroll, finalValue)) : MATH.max(0, MATH.min(maxScroll, finalValue));\r\n                        }\r\n                        return finalValue === currScroll ? undefined : finalValue;\r\n                    }\r\n                    function getPerAxisValue(value, valueInternalType, defaultValue, allowedValues) {\r\n                        var resultDefault = [defaultValue, defaultValue];\r\n                        var valueType = type(value);\r\n                        var valueArrLength;\r\n                        var valueArrItem;\r\n\r\n                        //value can be [ string, or array of two strings ]\r\n                        if (valueType == valueInternalType) {\r\n                            value = [value, value];\r\n                        }\r\n                        else if (valueType == TYPES.a) {\r\n                            valueArrLength = value[strLength];\r\n                            if (valueArrLength > 2 || valueArrLength < 1)\r\n                                value = resultDefault;\r\n                            else {\r\n                                if (valueArrLength === 1)\r\n                                    value[1] = defaultValue;\r\n                                for (i = 0; i < valueArrLength; i++) {\r\n                                    valueArrItem = value[i];\r\n                                    if (type(valueArrItem) != valueInternalType || !checkSettingsStringValue(valueArrItem, allowedValues)) {\r\n                                        value = resultDefault;\r\n                                        break;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        else if (valueType == TYPES.o)\r\n                            value = [value[_strX] || defaultValue, value[_strY] || defaultValue];\r\n                        else\r\n                            value = resultDefault;\r\n                        return { x: value[0], y: value[1] };\r\n                    }\r\n                    function generateMargin(marginTopRightBottomLeftArray) {\r\n                        var result = [];\r\n                        var currValue;\r\n                        var currValueType;\r\n                        var valueDirections = [_strTop, _strRight, _strBottom, _strLeft];\r\n                        for (i = 0; i < marginTopRightBottomLeftArray[strLength]; i++) {\r\n                            if (i === valueDirections[strLength])\r\n                                break;\r\n                            currValue = marginTopRightBottomLeftArray[i];\r\n                            currValueType = type(currValue);\r\n                            if (currValueType == TYPES.b)\r\n                                result.push(currValue ? parseToZeroOrNumber(finalElement.css(_strMarginMinus + valueDirections[i])) : 0);\r\n                            else\r\n                                result.push(currValueType == TYPES.n ? currValue : 0);\r\n                        }\r\n                        return result;\r\n                    }\r\n\r\n                    if (possibleElementIsJQuery || possibleElementIsHTMLElement) {\r\n                        //get settings\r\n                        var margin = coordinatesIsElementObj ? coordinates.margin : 0;\r\n                        var axis = coordinatesIsElementObj ? coordinates.axis : 0;\r\n                        var scroll = coordinatesIsElementObj ? coordinates.scroll : 0;\r\n                        var block = coordinatesIsElementObj ? coordinates.block : 0;\r\n                        var marginDefault = [0, 0, 0, 0];\r\n                        var marginType = type(margin);\r\n                        var marginLength;\r\n                        finalElement = possibleElementIsJQuery ? possibleElement : FRAMEWORK(possibleElement);\r\n\r\n                        if (finalElement[strLength] > 0) {\r\n                            //margin can be [ boolean, number, array of 2, array of 4, object ]\r\n                            if (marginType == TYPES.n || marginType == TYPES.b)\r\n                                margin = generateMargin([margin, margin, margin, margin]);\r\n                            else if (marginType == TYPES.a) {\r\n                                marginLength = margin[strLength];\r\n                                if (marginLength === 2)\r\n                                    margin = generateMargin([margin[0], margin[1], margin[0], margin[1]]);\r\n                                else if (marginLength >= 4)\r\n                                    margin = generateMargin(margin);\r\n                                else\r\n                                    margin = marginDefault;\r\n                            }\r\n                            else if (marginType == TYPES.o)\r\n                                margin = generateMargin([margin[_strTop], margin[_strRight], margin[_strBottom], margin[_strLeft]]);\r\n                            else\r\n                                margin = marginDefault;\r\n\r\n                            //block = type(block) === TYPES.b ? block ? [ strNearest, strBegin ] : [ strNearest, strEnd ] : block;\r\n                            settingsAxis = checkSettingsStringValue(axis, elementObjSettingsAxisValues) ? axis : 'xy';\r\n                            settingsScroll = getPerAxisValue(scroll, TYPES.s, strAlways, elementObjSettingsScrollValues);\r\n                            settingsBlock = getPerAxisValue(block, TYPES.s, strBegin, elementObjSettingsBlockValues);\r\n                            settingsMargin = margin;\r\n\r\n                            var viewportScroll = {\r\n                                l: _scrollHorizontalInfo._currentScroll,\r\n                                t: _scrollVerticalInfo._currentScroll\r\n                            };\r\n                            // use padding element instead of viewport element because padding element has never padding, margin or position applied.\r\n                            var viewportOffset = _paddingElement.offset();\r\n\r\n                            //get coordinates\r\n                            var elementOffset = finalElement.offset();\r\n                            var doNotScroll = {\r\n                                x: settingsScroll.x == strNever || settingsAxis == _strY,\r\n                                y: settingsScroll.y == strNever || settingsAxis == _strX\r\n                            };\r\n                            elementOffset[_strTop] -= settingsMargin[0];\r\n                            elementOffset[_strLeft] -= settingsMargin[3];\r\n                            var elementScrollCoordinates = {\r\n                                x: MATH.round(elementOffset[_strLeft] - viewportOffset[_strLeft] + viewportScroll.l),\r\n                                y: MATH.round(elementOffset[_strTop] - viewportOffset[_strTop] + viewportScroll.t)\r\n                            };\r\n                            if (_isRTL) {\r\n                                if (!_rtlScrollBehavior.n && !_rtlScrollBehavior.i)\r\n                                    elementScrollCoordinates.x = MATH.round(viewportOffset[_strLeft] - elementOffset[_strLeft] + viewportScroll.l);\r\n                                if (_rtlScrollBehavior.n && normalizeRTL)\r\n                                    elementScrollCoordinates.x *= -1;\r\n                                if (_rtlScrollBehavior.i && normalizeRTL)\r\n                                    elementScrollCoordinates.x = MATH.round(viewportOffset[_strLeft] - elementOffset[_strLeft] + (_scrollHorizontalInfo._maxScroll - viewportScroll.l));\r\n                            }\r\n\r\n                            //measuring is required\r\n                            if (settingsBlock.x != strBegin || settingsBlock.y != strBegin || settingsScroll.x == strIfNeeded || settingsScroll.y == strIfNeeded || _isRTL) {\r\n                                var measuringElm = finalElement[0];\r\n                                var rawElementSize = _supportTransform ? measuringElm[LEXICON.bCR]() : {\r\n                                    width: measuringElm[LEXICON.oW],\r\n                                    height: measuringElm[LEXICON.oH]\r\n                                };\r\n                                var elementSize = {\r\n                                    w: rawElementSize[_strWidth] + settingsMargin[3] + settingsMargin[1],\r\n                                    h: rawElementSize[_strHeight] + settingsMargin[0] + settingsMargin[2]\r\n                                };\r\n                                var finalizeBlock = function (isX) {\r\n                                    var vars = getScrollbarVars(isX);\r\n                                    var wh = vars._w_h;\r\n                                    var lt = vars._left_top;\r\n                                    var xy = vars._x_y;\r\n                                    var blockIsEnd = settingsBlock[xy] == (isX ? _isRTL ? strBegin : strEnd : strEnd);\r\n                                    var blockIsCenter = settingsBlock[xy] == strCenter;\r\n                                    var blockIsNearest = settingsBlock[xy] == strNearest;\r\n                                    var scrollNever = settingsScroll[xy] == strNever;\r\n                                    var scrollIfNeeded = settingsScroll[xy] == strIfNeeded;\r\n                                    var vpSize = _viewportSize[wh];\r\n                                    var vpOffset = viewportOffset[lt];\r\n                                    var elSize = elementSize[wh];\r\n                                    var elOffset = elementOffset[lt];\r\n                                    var divide = blockIsCenter ? 2 : 1;\r\n                                    var elementCenterOffset = elOffset + (elSize / 2);\r\n                                    var viewportCenterOffset = vpOffset + (vpSize / 2);\r\n                                    var isInView =\r\n                                        elSize <= vpSize\r\n                                        && elOffset >= vpOffset\r\n                                        && elOffset + elSize <= vpOffset + vpSize;\r\n\r\n                                    if (scrollNever)\r\n                                        doNotScroll[xy] = true;\r\n                                    else if (!doNotScroll[xy]) {\r\n                                        if (blockIsNearest || scrollIfNeeded) {\r\n                                            doNotScroll[xy] = scrollIfNeeded ? isInView : false;\r\n                                            blockIsEnd = elSize < vpSize ? elementCenterOffset > viewportCenterOffset : elementCenterOffset < viewportCenterOffset;\r\n                                        }\r\n                                        elementScrollCoordinates[xy] -= blockIsEnd || blockIsCenter ? ((vpSize / divide) - (elSize / divide)) * (isX && _isRTL && normalizeRTL ? -1 : 1) : 0;\r\n                                    }\r\n                                };\r\n                                finalizeBlock(true);\r\n                                finalizeBlock(false);\r\n                            }\r\n\r\n                            if (doNotScroll.y)\r\n                                delete elementScrollCoordinates.y;\r\n                            if (doNotScroll.x)\r\n                                delete elementScrollCoordinates.x;\r\n\r\n                            coordinates = elementScrollCoordinates;\r\n                        }\r\n                    }\r\n\r\n                    finalScroll[_strScrollLeft] = getFinalScroll(true, getRawScroll(true, coordinates));\r\n                    finalScroll[_strScrollTop] = getFinalScroll(false, getRawScroll(false, coordinates));\r\n                    doScrollLeft = finalScroll[_strScrollLeft] !== undefined;\r\n                    doScrollTop = finalScroll[_strScrollTop] !== undefined;\r\n\r\n                    if ((doScrollLeft || doScrollTop) && (duration > 0 || durationIsObject)) {\r\n                        if (durationIsObject) {\r\n                            duration.complete = proxyCompleteCallback;\r\n                            _viewportElement.animate(finalScroll, duration);\r\n                        }\r\n                        else {\r\n                            animationOptions = {\r\n                                duration: duration,\r\n                                complete: proxyCompleteCallback\r\n                            };\r\n                            if (COMPATIBILITY.isA(easing) || FRAMEWORK.isPlainObject(easing)) {\r\n                                specialEasing[_strScrollLeft] = easing[0] || easing.x;\r\n                                specialEasing[_strScrollTop] = easing[1] || easing.y;\r\n                                animationOptions.specialEasing = specialEasing;\r\n                            }\r\n                            else {\r\n                                animationOptions.easing = easing;\r\n                            }\r\n                            _viewportElement.animate(finalScroll, animationOptions);\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (doScrollLeft)\r\n                            _viewportElement[_strScrollLeft](finalScroll[_strScrollLeft]);\r\n                        if (doScrollTop)\r\n                            _viewportElement[_strScrollTop](finalScroll[_strScrollTop]);\r\n                        updateScrollbarInfos();\r\n                    }\r\n                };\r\n\r\n                /**\r\n                 * Stops all scroll animations.\r\n                 * @returns {*} The current OverlayScrollbars instance (for chaining).\r\n                 */\r\n                _base.scrollStop = function (param1, param2, param3) {\r\n                    _viewportElement.stop(param1, param2, param3);\r\n                    return _base;\r\n                };\r\n\r\n                /**\r\n                 * Returns all relevant elements.\r\n                 * @param elementName The name of the element which shall be returned.\r\n                 * @returns {{target: *, host: *, padding: *, viewport: *, content: *, scrollbarHorizontal: {scrollbar: *, track: *, handle: *}, scrollbarVertical: {scrollbar: *, track: *, handle: *}, scrollbarCorner: *} | *}\r\n                 */\r\n                _base.getElements = function (elementName) {\r\n                    var obj = {\r\n                        target: _targetElementNative,\r\n                        host: _hostElementNative,\r\n                        padding: _paddingElementNative,\r\n                        viewport: _viewportElementNative,\r\n                        content: _contentElementNative,\r\n                        scrollbarHorizontal: {\r\n                            scrollbar: _scrollbarHorizontalElement[0],\r\n                            track: _scrollbarHorizontalTrackElement[0],\r\n                            handle: _scrollbarHorizontalHandleElement[0]\r\n                        },\r\n                        scrollbarVertical: {\r\n                            scrollbar: _scrollbarVerticalElement[0],\r\n                            track: _scrollbarVerticalTrackElement[0],\r\n                            handle: _scrollbarVerticalHandleElement[0]\r\n                        },\r\n                        scrollbarCorner: _scrollbarCornerElement[0]\r\n                    };\r\n                    return type(elementName) == TYPES.s ? getObjectPropVal(obj, elementName) : obj;\r\n                };\r\n\r\n                /**\r\n                 * Returns a object which describes the current state of this instance.\r\n                 * @param stateProperty A specific property from the state object which shall be returned.\r\n                 * @returns {{widthAuto, heightAuto, overflowAmount, hideOverflow, hasOverflow, contentScrollSize, viewportSize, hostSize, autoUpdate} | *}\r\n                 */\r\n                _base.getState = function (stateProperty) {\r\n                    function prepare(obj) {\r\n                        if (!FRAMEWORK.isPlainObject(obj))\r\n                            return obj;\r\n                        var extended = extendDeep({}, obj);\r\n                        var changePropertyName = function (from, to) {\r\n                            if (extended[LEXICON.hOP](from)) {\r\n                                extended[to] = extended[from];\r\n                                delete extended[from];\r\n                            }\r\n                        };\r\n                        changePropertyName('w', _strWidth); //change w to width\r\n                        changePropertyName('h', _strHeight); //change h to height\r\n                        delete extended.c; //delete c (the 'changed' prop)\r\n                        return extended;\r\n                    };\r\n                    var obj = {\r\n                        destroyed: !!prepare(_destroyed),\r\n                        sleeping: !!prepare(_sleeping),\r\n                        autoUpdate: prepare(!_mutationObserversConnected),\r\n                        widthAuto: prepare(_widthAutoCache),\r\n                        heightAuto: prepare(_heightAutoCache),\r\n                        padding: prepare(_cssPaddingCache),\r\n                        overflowAmount: prepare(_overflowAmountCache),\r\n                        hideOverflow: prepare(_hideOverflowCache),\r\n                        hasOverflow: prepare(_hasOverflowCache),\r\n                        contentScrollSize: prepare(_contentScrollSizeCache),\r\n                        viewportSize: prepare(_viewportSize),\r\n                        hostSize: prepare(_hostSizeCache),\r\n                        documentMixed: prepare(_documentMixed)\r\n                    };\r\n                    return type(stateProperty) == TYPES.s ? getObjectPropVal(obj, stateProperty) : obj;\r\n                };\r\n\r\n                /**\r\n                 * Gets all or specific extension instance.\r\n                 * @param extName The name of the extension from which the instance shall be got.\r\n                 * @returns {{}} The instance of the extension with the given name or undefined if the instance couldn't be found.\r\n                 */\r\n                _base.ext = function (extName) {\r\n                    var result;\r\n                    var privateMethods = _extensionsPrivateMethods.split(' ');\r\n                    var i = 0;\r\n                    if (type(extName) == TYPES.s) {\r\n                        if (_extensions[LEXICON.hOP](extName)) {\r\n                            result = extendDeep({}, _extensions[extName]);\r\n                            for (; i < privateMethods.length; i++)\r\n                                delete result[privateMethods[i]];\r\n                        }\r\n                    }\r\n                    else {\r\n                        result = {};\r\n                        for (i in _extensions)\r\n                            result[i] = extendDeep({}, _base.ext(i));\r\n                    }\r\n                    return result;\r\n                };\r\n\r\n                /**\r\n                 * Adds a extension to this instance.\r\n                 * @param extName The name of the extension which shall be added.\r\n                 * @param extensionOptions The extension options which shall be used.\r\n                 * @returns {{}} The instance of the added extension or undefined if the extension couldn't be added properly.\r\n                 */\r\n                _base.addExt = function (extName, extensionOptions) {\r\n                    var registeredExtensionObj = _plugin.extension(extName);\r\n                    var instance;\r\n                    var instanceAdded;\r\n                    var instanceContract;\r\n                    var contractResult;\r\n                    var contractFulfilled = true;\r\n                    if (registeredExtensionObj) {\r\n                        if (!_extensions[LEXICON.hOP](extName)) {\r\n                            instance = registeredExtensionObj.extensionFactory.call(_base,\r\n                                extendDeep({}, registeredExtensionObj.defaultOptions),\r\n                                FRAMEWORK,\r\n                                COMPATIBILITY);\r\n\r\n                            if (instance) {\r\n                                instanceContract = instance.contract;\r\n                                if (type(instanceContract) == TYPES.f) {\r\n                                    contractResult = instanceContract(window);\r\n                                    contractFulfilled = type(contractResult) == TYPES.b ? contractResult : contractFulfilled;\r\n                                }\r\n                                if (contractFulfilled) {\r\n                                    _extensions[extName] = instance;\r\n                                    instanceAdded = instance.added;\r\n                                    if (type(instanceAdded) == TYPES.f)\r\n                                        instanceAdded(extensionOptions);\r\n\r\n                                    return _base.ext(extName);\r\n                                }\r\n                            }\r\n                        }\r\n                        else\r\n                            return _base.ext(extName);\r\n                    }\r\n                    else\r\n                        console.warn(\"A extension with the name \\\"\" + extName + \"\\\" isn't registered.\");\r\n                };\r\n\r\n                /**\r\n                 * Removes a extension from this instance.\r\n                 * @param extName The name of the extension which shall be removed.\r\n                 * @returns {boolean} True if the extension was removed, false otherwise e.g. if the extension wasn't added before.\r\n                 */\r\n                _base.removeExt = function (extName) {\r\n                    var instance = _extensions[extName];\r\n                    var instanceRemoved;\r\n                    if (instance) {\r\n                        delete _extensions[extName];\r\n\r\n                        instanceRemoved = instance.removed;\r\n                        if (type(instanceRemoved) == TYPES.f)\r\n                            instanceRemoved();\r\n\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                };\r\n\r\n                /**\r\n                 * Constructs the plugin.\r\n                 * @param targetElement The element to which the plugin shall be applied.\r\n                 * @param options The initial options of the plugin.\r\n                 * @param extensions The extension(s) which shall be added right after the initialization.\r\n                 * @returns {boolean} True if the plugin was successfully initialized, false otherwise.\r\n                 */\r\n                function construct(targetElement, options, extensions) {\r\n                    _defaultOptions = globals.defaultOptions;\r\n                    _nativeScrollbarStyling = globals.nativeScrollbarStyling;\r\n                    _nativeScrollbarSize = extendDeep({}, globals.nativeScrollbarSize);\r\n                    _nativeScrollbarIsOverlaid = extendDeep({}, globals.nativeScrollbarIsOverlaid);\r\n                    _overlayScrollbarDummySize = extendDeep({}, globals.overlayScrollbarDummySize);\r\n                    _rtlScrollBehavior = extendDeep({}, globals.rtlScrollBehavior);\r\n\r\n                    //parse & set options but don't update\r\n                    setOptions(extendDeep({}, _defaultOptions, options));\r\n\r\n                    _cssCalc = globals.cssCalc;\r\n                    _msieVersion = globals.msie;\r\n                    _autoUpdateRecommended = globals.autoUpdateRecommended;\r\n                    _supportTransition = globals.supportTransition;\r\n                    _supportTransform = globals.supportTransform;\r\n                    _supportPassiveEvents = globals.supportPassiveEvents;\r\n                    _supportResizeObserver = globals.supportResizeObserver;\r\n                    _supportMutationObserver = globals.supportMutationObserver;\r\n                    _restrictedMeasuring = globals.restrictedMeasuring;\r\n                    _documentElement = FRAMEWORK(targetElement.ownerDocument);\r\n                    _documentElementNative = _documentElement[0];\r\n                    _windowElement = FRAMEWORK(_documentElementNative.defaultView || _documentElementNative.parentWindow);\r\n                    _windowElementNative = _windowElement[0];\r\n                    _htmlElement = findFirst(_documentElement, 'html');\r\n                    _bodyElement = findFirst(_htmlElement, 'body');\r\n                    _targetElement = FRAMEWORK(targetElement);\r\n                    _targetElementNative = _targetElement[0];\r\n                    _isTextarea = _targetElement.is('textarea');\r\n                    _isBody = _targetElement.is('body');\r\n                    _documentMixed = _documentElementNative !== document;\r\n\r\n                    /* On a div Element The if checks only whether:\r\n                     * - the targetElement has the class \"os-host\"\r\n                     * - the targetElement has a a child with the class \"os-padding\"\r\n                     * \r\n                     * If that's the case, its assumed the DOM has already the following structure:\r\n                     * (The \".os-host\" element is the targetElement)\r\n                     *\r\n                     *  <div class=\"os-host\">\r\n                     *      <div class=\"os-resize-observer-host\"></div>\r\n                     *      <div class=\"os-padding\">\r\n                     *          <div class=\"os-viewport\">\r\n                     *              <div class=\"os-content\"></div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar os-scrollbar-horizontal \">\r\n                     *          <div class=\"os-scrollbar-track\">\r\n                     *              <div class=\"os-scrollbar-handle\"></div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar os-scrollbar-vertical\">\r\n                     *          <div class=\"os-scrollbar-track\">\r\n                     *              <div class=\"os-scrollbar-handle\"></div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar-corner\"></div>\r\n                     *  </div>\r\n                     *\r\n                     * =====================================================================================\r\n                     * \r\n                     * On a Textarea Element The if checks only whether:\r\n                     * - the targetElement has the class \"os-textarea\" \r\n                     * - the targetElement is inside a element with the class \"os-content\" \r\n                     * \r\n                     * If that's the case, its assumed the DOM has already the following structure:\r\n                     * (The \".os-textarea\" (textarea) element is the targetElement)\r\n                     *\r\n                     *  <div class=\"os-host-textarea\">\r\n                     *      <div class=\"os-resize-observer-host\"></div>\r\n                     *      <div class=\"os-padding os-text-inherit\">\r\n                     *          <div class=\"os-viewport os-text-inherit\">\r\n                     *              <div class=\"os-content os-text-inherit\">\r\n                     *                  <div class=\"os-textarea-cover\"></div>\r\n                     *                  <textarea class=\"os-textarea os-text-inherit\"></textarea>\r\n                     *              </div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar os-scrollbar-horizontal \">\r\n                     *          <div class=\"os-scrollbar-track\">\r\n                     *              <div class=\"os-scrollbar-handle\"></div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar os-scrollbar-vertical\">\r\n                     *          <div class=\"os-scrollbar-track\">\r\n                     *              <div class=\"os-scrollbar-handle\"></div>\r\n                     *          </div>\r\n                     *      </div>\r\n                     *      <div class=\"os-scrollbar-corner\"></div>\r\n                     *  </div>\r\n                     */\r\n                    _domExists = _isTextarea\r\n                        ? _targetElement.hasClass(_classNameTextareaElement) && _targetElement.parent().hasClass(_classNameContentElement)\r\n                        : _targetElement.hasClass(_classNameHostElement) && _targetElement.children(_strDot + _classNamePaddingElement)[LEXICON.l];\r\n\r\n                    var initBodyScroll;\r\n                    var bodyMouseTouchDownListener;\r\n\r\n                    //check if the plugin hasn't to be initialized\r\n                    if (_nativeScrollbarIsOverlaid.x && _nativeScrollbarIsOverlaid.y && !_currentPreparedOptions.nativeScrollbarsOverlaid.initialize) {\r\n                        _initialized = true; // workaround so the onInitializationWithdrawn callback below is fired\r\n                        dispatchCallback('onInitializationWithdrawn');\r\n                        if (_domExists) {\r\n                            setupStructureDOM(true);\r\n                            setupScrollbarsDOM(true);\r\n                            setupScrollbarCornerDOM(true);\r\n                        }\r\n\r\n                        _initialized = false;\r\n                        _destroyed = true;\r\n                        _sleeping = true;\r\n\r\n                        return _base;\r\n                    }\r\n\r\n                    if (_isBody) {\r\n                        initBodyScroll = {};\r\n                        initBodyScroll.l = MATH.max(_targetElement[_strScrollLeft](), _htmlElement[_strScrollLeft](), _windowElement[_strScrollLeft]());\r\n                        initBodyScroll.t = MATH.max(_targetElement[_strScrollTop](), _htmlElement[_strScrollTop](), _windowElement[_strScrollTop]());\r\n\r\n                        bodyMouseTouchDownListener = function () {\r\n                            _viewportElement.removeAttr(LEXICON.ti);\r\n                            setupResponsiveEventListener(_viewportElement, _strMouseTouchDownEvent, bodyMouseTouchDownListener, true, true);\r\n                        }\r\n                    }\r\n\r\n                    //build OverlayScrollbars DOM\r\n                    setupStructureDOM();\r\n                    setupScrollbarsDOM();\r\n                    setupScrollbarCornerDOM();\r\n\r\n                    //create OverlayScrollbars events\r\n                    setupStructureEvents();\r\n                    setupScrollbarEvents(true);\r\n                    setupScrollbarEvents(false);\r\n                    setupScrollbarCornerEvents();\r\n\r\n                    //create mutation observers\r\n                    createMutationObservers();\r\n\r\n                    //build resize observer for the host element\r\n                    setupResizeObserver(_sizeObserverElement, hostOnResized);\r\n\r\n                    if (_isBody) {\r\n                        //apply the body scroll to handle it right in the update method\r\n                        _viewportElement[_strScrollLeft](initBodyScroll.l)[_strScrollTop](initBodyScroll.t);\r\n\r\n                        //set the focus on the viewport element so you dont have to click on the page to use keyboard keys (up / down / space) for scrolling\r\n                        if (document.activeElement == targetElement && _viewportElementNative.focus) {\r\n                            //set a tabindex to make the viewportElement focusable\r\n                            _viewportElement.attr(LEXICON.ti, '-1');\r\n                            _viewportElementNative.focus();\r\n\r\n                            /* the tabindex has to be removed due to;\r\n                             * If you set the tabindex attribute on an <div>, then its child content cannot be scrolled with the arrow keys unless you set tabindex on the content, too\r\n                             * https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex\r\n                             */\r\n                            setupResponsiveEventListener(_viewportElement, _strMouseTouchDownEvent, bodyMouseTouchDownListener, false, true);\r\n                        }\r\n                    }\r\n\r\n                    //update for the first time & initialize cache\r\n                    _base.update(_strAuto);\r\n\r\n                    //the plugin is initialized now!\r\n                    _initialized = true;\r\n                    dispatchCallback('onInitialized');\r\n\r\n                    //call all callbacks which would fire before the initialized was complete\r\n                    each(_callbacksInitQeueue, function (index, value) { dispatchCallback(value.n, value.a); });\r\n                    _callbacksInitQeueue = [];\r\n\r\n                    //add extensions\r\n                    if (type(extensions) == TYPES.s)\r\n                        extensions = [extensions];\r\n                    if (COMPATIBILITY.isA(extensions))\r\n                        each(extensions, function (index, value) { _base.addExt(value); });\r\n                    else if (FRAMEWORK.isPlainObject(extensions))\r\n                        each(extensions, function (key, value) { _base.addExt(key, value); });\r\n\r\n                    //add the transition class for transitions AFTER the first update & AFTER the applied extensions (for preventing unwanted transitions)\r\n                    setTimeout(function () {\r\n                        if (_supportTransition && !_destroyed)\r\n                            addClass(_hostElement, _classNameHostTransition);\r\n                    }, 333);\r\n\r\n                    return _base;\r\n                }\r\n\r\n                if (_plugin.valid(construct(pluginTargetElement, options, extensions))) {\r\n                    INSTANCES(pluginTargetElement, _base);\r\n                }\r\n\r\n                return _base;\r\n            }\r\n\r\n            /**\r\n             * Initializes a new OverlayScrollbarsInstance object or changes options if already initialized or returns the current instance.\r\n             * @param pluginTargetElements The elements to which the Plugin shall be initialized.\r\n             * @param options The custom options with which the plugin shall be initialized.\r\n             * @param extensions The extension(s) which shall be added right after initialization.\r\n             * @returns {*}\r\n             */\r\n            _plugin = window[PLUGINNAME] = function (pluginTargetElements, options, extensions) {\r\n                if (arguments[LEXICON.l] === 0)\r\n                    return this;\r\n\r\n                var arr = [];\r\n                var optsIsPlainObj = FRAMEWORK.isPlainObject(options);\r\n                var inst;\r\n                var result;\r\n\r\n                //pluginTargetElements is null or undefined\r\n                if (!pluginTargetElements)\r\n                    return optsIsPlainObj || !options ? result : arr;\r\n\r\n                /*\r\n                   pluginTargetElements will be converted to:\r\n                   1. A jQueryElement Array\r\n                   2. A HTMLElement Array\r\n                   3. A Array with a single HTML Element\r\n                   so pluginTargetElements is always a array.\r\n                */\r\n                pluginTargetElements = pluginTargetElements[LEXICON.l] != undefined ? pluginTargetElements : [pluginTargetElements[0] || pluginTargetElements];\r\n                initOverlayScrollbarsStatics();\r\n\r\n                if (pluginTargetElements[LEXICON.l] > 0) {\r\n                    if (optsIsPlainObj) {\r\n                        FRAMEWORK.each(pluginTargetElements, function (i, v) {\r\n                            inst = v;\r\n                            if (inst !== undefined)\r\n                                arr.push(OverlayScrollbarsInstance(inst, options, extensions, _pluginsGlobals, _pluginsAutoUpdateLoop));\r\n                        });\r\n                    }\r\n                    else {\r\n                        FRAMEWORK.each(pluginTargetElements, function (i, v) {\r\n                            inst = INSTANCES(v);\r\n                            if ((options === '!' && _plugin.valid(inst)) || (COMPATIBILITY.type(options) == TYPES.f && options(v, inst)))\r\n                                arr.push(inst);\r\n                            else if (options === undefined)\r\n                                arr.push(inst);\r\n                        });\r\n                    }\r\n                    result = arr[LEXICON.l] === 1 ? arr[0] : arr;\r\n                }\r\n                return result;\r\n            };\r\n\r\n            /**\r\n             * Returns a object which contains global information about the plugin and each instance of it.\r\n             * The returned object is just a copy, that means that changes to the returned object won't have any effect to the original object.\r\n             */\r\n            _plugin.globals = function () {\r\n                initOverlayScrollbarsStatics();\r\n                var globals = FRAMEWORK.extend(true, {}, _pluginsGlobals);\r\n                delete globals['msie'];\r\n                return globals;\r\n            };\r\n\r\n            /**\r\n             * Gets or Sets the default options for each new plugin initialization.\r\n             * @param newDefaultOptions The object with which the default options shall be extended.\r\n             */\r\n            _plugin.defaultOptions = function (newDefaultOptions) {\r\n                initOverlayScrollbarsStatics();\r\n                var currDefaultOptions = _pluginsGlobals.defaultOptions;\r\n                if (newDefaultOptions === undefined)\r\n                    return FRAMEWORK.extend(true, {}, currDefaultOptions);\r\n\r\n                //set the new default options\r\n                _pluginsGlobals.defaultOptions = FRAMEWORK.extend(true, {}, currDefaultOptions, _pluginsOptions._validate(newDefaultOptions, _pluginsOptions._template, true, currDefaultOptions)._default);\r\n            };\r\n\r\n            /**\r\n             * Checks whether the passed instance is a non-destroyed OverlayScrollbars instance.\r\n             * @param osInstance The potential OverlayScrollbars instance which shall be checked.\r\n             * @returns {boolean} True if the passed value is a non-destroyed OverlayScrollbars instance, false otherwise.\r\n             */\r\n            _plugin.valid = function (osInstance) {\r\n                return osInstance instanceof _plugin && !osInstance.getState().destroyed;\r\n            };\r\n\r\n            /**\r\n             * Registers, Unregisters or returns a extension.\r\n             * Register: Pass the name and the extension. (defaultOptions is optional)\r\n             * Unregister: Pass the name and anything except a function as extension parameter.\r\n             * Get extension: Pass the name of the extension which shall be got.\r\n             * Get all extensions: Pass no arguments.\r\n             * @param extensionName The name of the extension which shall be registered, unregistered or returned.\r\n             * @param extension A function which generates the instance of the extension or anything other to remove a already registered extension.\r\n             * @param defaultOptions The default options which shall be used for the registered extension.\r\n             */\r\n            _plugin.extension = function (extensionName, extension, defaultOptions) {\r\n                var extNameTypeString = COMPATIBILITY.type(extensionName) == TYPES.s;\r\n                var argLen = arguments[LEXICON.l];\r\n                var i = 0;\r\n                if (argLen < 1 || !extNameTypeString) {\r\n                    //return a copy of all extension objects\r\n                    return FRAMEWORK.extend(true, { length: _pluginsExtensions[LEXICON.l] }, _pluginsExtensions);\r\n                }\r\n                else if (extNameTypeString) {\r\n                    if (COMPATIBILITY.type(extension) == TYPES.f) {\r\n                        //register extension\r\n                        _pluginsExtensions.push({\r\n                            name: extensionName,\r\n                            extensionFactory: extension,\r\n                            defaultOptions: defaultOptions\r\n                        });\r\n                    }\r\n                    else {\r\n                        for (; i < _pluginsExtensions[LEXICON.l]; i++) {\r\n                            if (_pluginsExtensions[i].name === extensionName) {\r\n                                if (argLen > 1)\r\n                                    _pluginsExtensions.splice(i, 1); //remove extension\r\n                                else\r\n                                    return FRAMEWORK.extend(true, {}, _pluginsExtensions[i]); //return extension with the given name\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n\r\n            return _plugin;\r\n        })();\r\n\r\n        if (JQUERY && JQUERY.fn) {\r\n            /**\r\n             * The jQuery initialization interface.\r\n             * @param options The initial options for the construction of the plugin. To initialize the plugin, this option has to be a object! If it isn't a object, the instance(s) are returned and the plugin wont be initialized.\r\n             * @param extensions The extension(s) which shall be added right after initialization.\r\n             * @returns {*} After initialization it returns the jQuery element array, else it returns the instance(s) of the elements which are selected.\r\n             */\r\n            JQUERY.fn.overlayScrollbars = function (options, extensions) {\r\n                var _elements = this;\r\n                if (JQUERY.isPlainObject(options)) {\r\n                    JQUERY.each(_elements, function () { PLUGIN(this, options, extensions); });\r\n                    return _elements;\r\n                }\r\n                else\r\n                    return PLUGIN(_elements, options);\r\n            };\r\n        }\r\n        return PLUGIN;\r\n    }\r\n));","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport React from 'react';\nvar getDefaultStyle = function (visible) { return ({\n    display: visible ? 'flex' : 'none'\n}); };\nvar ThreeDots = function (_a) {\n    var _b = _a.height, height = _b === void 0 ? 80 : _b, _c = _a.width, width = _c === void 0 ? 80 : _c, _d = _a.radius, radius = _d === void 0 ? 9 : _d, _e = _a.color, color = _e === void 0 ? 'green' : _e, _f = _a.ariaLabel, ariaLabel = _f === void 0 ? 'three-dots-loading' : _f, wrapperStyle = _a.wrapperStyle, wrapperClass = _a.wrapperClass, _g = _a.visible, visible = _g === void 0 ? true : _g;\n    return (React.createElement(\"div\", { style: __assign(__assign({}, getDefaultStyle(visible)), wrapperStyle), className: wrapperClass, \"data-testid\": \"three-dots-loading\" },\n        React.createElement(\"svg\", { width: width, height: height, viewBox: \"0 0 120 30\", xmlns: \"http://www.w3.org/2000/svg\", fill: color, \"aria-label\": ariaLabel, \"data-testid\": \"three-dots-svg\" },\n            React.createElement(\"circle\", { cx: \"15\", cy: \"15\", r: Number(radius) + 6 },\n                React.createElement(\"animate\", { attributeName: \"r\", from: \"15\", to: \"15\", begin: \"0s\", dur: \"0.8s\", values: \"15;9;15\", calcMode: \"linear\", repeatCount: \"indefinite\" }),\n                React.createElement(\"animate\", { attributeName: \"fill-opacity\", from: \"1\", to: \"1\", begin: \"0s\", dur: \"0.8s\", values: \"1;.5;1\", calcMode: \"linear\", repeatCount: \"indefinite\" })),\n            React.createElement(\"circle\", { cx: \"60\", cy: \"15\", r: radius, attributeName: \"fill-opacity\", from: \"1\", to: \"0.3\" },\n                React.createElement(\"animate\", { attributeName: \"r\", from: \"9\", to: \"9\", begin: \"0s\", dur: \"0.8s\", values: \"9;15;9\", calcMode: \"linear\", repeatCount: \"indefinite\" }),\n                React.createElement(\"animate\", { attributeName: \"fill-opacity\", from: \"0.5\", to: \"0.5\", begin: \"0s\", dur: \"0.8s\", values: \".5;1;.5\", calcMode: \"linear\", repeatCount: \"indefinite\" })),\n            React.createElement(\"circle\", { cx: \"105\", cy: \"15\", r: Number(radius) + 6 },\n                React.createElement(\"animate\", { attributeName: \"r\", from: \"15\", to: \"15\", begin: \"0s\", dur: \"0.8s\", values: \"15;9;15\", calcMode: \"linear\", repeatCount: \"indefinite\" }),\n                React.createElement(\"animate\", { attributeName: \"fill-opacity\", from: \"1\", to: \"1\", begin: \"0s\", dur: \"0.8s\", values: \"1;.5;1\", calcMode: \"linear\", repeatCount: \"indefinite\" })))));\n};\nexport default ThreeDots;\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n"],"names":["global","window","this","define","document","undefined","PLUGINNAME","TYPES","o","f","a","s","b","n","u","z","LEXICON","c","i","l","p","ti","oH","cH","sH","oW","cW","sW","hOP","bCR","VENDORS","jsCache","cssCache","cssPrefixes","jsPrefixes","firstLetterToUpper","str","charAt","toUpperCase","slice","_cssPrefixes","_jsPrefixes","_cssProperty","name","result","resultPossibilities","v","currVendorWithoutDashes","uppercasedName","elmStyle","createElement","length","replace","_cssPropertyValue","property","values","suffix","prop","dummyStyle","possbleValues","split","preparedSuffix","cssText","_jsAPI","isInterface","fallback","toLowerCase","COMPATIBILITY","windowSize","x","innerWidth","documentElement","body","innerHeight","bind","func","thisObj","proto","aArgs","Array","call","arguments","fNOP","fBound","apply","concat","wW","wH","mO","rO","rAF","setTimeout","cAF","id","clearTimeout","now","Date","getTime","stpP","event","stopPropagation","cancelBubble","prvD","preventDefault","cancelable","returnValue","page","strPage","strClient","strX","strY","eventDoc","originalEvent","target","srcElement","ownerDocument","doc","touches","touch","y","scrollLeft","clientLeft","scrollTop","clientTop","mBtn","button","which","inA","item","arr","e","isA","def","isArray","type","obj","Object","toString","MATH","Math","JQUERY","jQuery","EASING","_easingsMath","PI","cos","sin","w","pow","t","sqrt","asin","abs","swing","d","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","FRAMEWORK","_rnothtmlwhite","_strSpace","_strEmpty","_strScrollLeft","_strScrollTop","_animations","_type","_cssNumber","animationIterationCount","columnCount","fillOpacity","flexGrow","flexShrink","fontWeight","lineHeight","opacity","order","orphans","widows","zIndex","zoom","extend","src","copyIsArray","copy","options","clone","deep","FakejQuery","isPlainObject","inArray","fromIndex","isFunction","isEmptyObject","key","hasOwnProperty","hasOwnConstructor","hasIsPrototypeOf","constructor","each","callback","isArrayLike","stripAndCollapse","value","match","join","matches","elem","selector","nodeList","parentNode","querySelectorAll","insertAdjacentElement","el","strategy","child","insertAdjacentHTML","nodeType","setCSSVal","val","parseCSSVal","startNextAnimationInQ","animObj","removeFromQ","index","nextAnim","q","splice","animate","props","duration","easing","complete","setAnimationValue","guaranteedNext","progress","step","specialEasing","hasOptions","from","to","start","push","css","timeNow","end","percent","fromVal","toVal","easedVal","timeStart","frame","elapsed","qPos","qObj","stop","max","parseFloat","pos","speacialEasing","startTime","clearQ","jumpToEnd","elementIsVisible","getClientRects","elms","base","elements","innerHTML","children","self","on","eventName","handler","eventNameLength","addEventListener","detachEvent","attachEvent","off","removeEventListener","one","oneEventName","oneHandler","trigger","createEvent","initEvent","dispatchEvent","fireEvent","append","prepend","before","after","remove","removeChild","unwrap","parent","parents","firstChild","insertBefore","wrapAll","wrapperHTML","nodes","wrapper","deepest","previousSibling","childNodes","appendChild","nextSibling","wrapInner","contents","wrap","styles","cptStyle","getCptStyle","getComputedStyle","currentStyle","getPropertyValue","hasClass","className","classList","classNamePrepared","contains","indexOf","addClass","classes","cur","curValue","clazz","finalValue","supportClassList","elmClassList","add","removeClass","hide","display","show","attr","attrName","getAttribute","setAttribute","removeAttr","removeAttribute","offset","rect","pageXOffset","pageYOffset","top","left","position","offsetTop","offsetLeft","first","eq","last","find","ch","is","childs","jump","INSTANCES","_targets","_instancePropertyString","instance","argLen","PLUGIN","_plugin","_pluginsGlobals","_pluginsAutoUpdateLoop","_pluginsExtensions","_pluginsOptions","possibleTemplateTypes","restrictedStringsSplit","restrictedStringsPossibilitiesSplit","classNameAllowedValues","numberAllowedValues","booleanNullAllowedValues","booleanTrueTemplate","booleanFalseTemplate","callbackTemplate","overflowBehaviorAllowedValues","optionsDefaultsAndTemplate","resize","sizeAutoCapable","clipAlways","normalizeRTL","paddingAbsolute","autoUpdate","autoUpdateInterval","updateOnLoad","nativeScrollbarsOverlaid","showNativeScrollbars","initialize","overflowBehavior","scrollbars","visibility","autoHide","autoHideDelay","dragScrolling","clickScrolling","touchSupport","snapHandle","textarea","dynWidth","dynHeight","inheritedAttrs","callbacks","onInitialized","onInitializationWithdrawn","onDestroyed","onScrollStart","onScroll","onScrollStop","onOverflowChanged","onOverflowAmountChanged","onDirectionChanged","onContentSizeChanged","onHostSizeChanged","onUpdated","convert","template","recursive","valType","_defaults","_template","_validate","writeErrors","diffObj","validatedOptions","validatedOptionsPrepared","objectCopy","isEmptyObj","checkObjectProps","data","diffData","prevPropName","restrictedStringValuesSplit","restrictedStringValuesPossibilitiesSplit","isRestrictedValue","mainPossibility","currType","j","isValid","isDiff","templateValue","templateValueType","templateIsComplex","templateTypes","dataDiffValue","dataValue","dataValueType","propPrefix","error","errorPossibleTypes","errorRestrictedStrings","console","warn","JSON","stringify","_default","_prepared","initOverlayScrollbarsStatics","OverlayScrollbarsGlobals","OverlayScrollbarsAutoUpdateLoop","defaultOptions","_base","strOverflow","strHidden","strScroll","bodyElement","scrollbarDummyElement","scrollbarDummyElement0","dummyContainerChild","nativeScrollbarSize","calcNativeScrollbarSize","nativeScrollbarIsOverlaid","msie","ua","navigator","userAgent","strIndexOf","strSubString","trident","edge","rv","parseIntFunc","parseInt","measureElement","autoUpdateLoop","autoUpdateRecommended","nativeScrollbarStyling","ex","overlayScrollbarDummySize","cssCalc","restrictedMeasuring","scrollSize","h","scrollSize2","rtlScrollBehavior","dummyContainerOffset","dummyContainerChildOffset","dummyContainerChildOffsetAfterScroll","supportTransform","supportTransition","supportPassiveEvents","supportsPassive","defineProperty","get","supportResizeObserver","supportMutationObserver","windowWidth","windowHeight","windowDpr","getWindowDPR","onResize","newW","newH","deltaW","deltaH","newScrollbarSize","deltaWRatio","round","deltaHRatio","absDeltaW","absDeltaH","absDeltaWRatio","absDeltaHRatio","newDPR","deltaIsBigger","difference","differenceIsBiggerThanOne","isZoom","oldScrollbarSize","update","valOne","valTwo","absValOne","absValTwo","dDPI","screen","deviceXDPI","sDPI","logicalXDPI","devicePixelRatio","globals","_loopID","_inArray","_getNow","_strAutoUpdate","_strAutoUpdateInterval","_strLength","_loopingInstances","_loopingInstancesIntervalCache","_loopIsActive","_loopIntervalDefault","_loopInterval","_loopTimeOld","loop","lowestInterval","instanceOptions","instanceAutoUpdateAllowed","instanceAutoUpdateInterval","timeNew","timeDelta","min","OverlayScrollbarsInstance","pluginTargetElement","extensions","_frameworkProto","isHTMLElement","inst","_nativeScrollbarIsOverlaid","_overlayScrollbarDummySize","_rtlScrollBehavior","_autoUpdateRecommended","_msieVersion","_nativeScrollbarStyling","_cssCalc","_nativeScrollbarSize","_supportTransition","_supportTransform","_supportPassiveEvents","_supportResizeObserver","_supportMutationObserver","_initialized","_destroyed","_isTextarea","_isBody","_documentMixed","_domExists","_isBorderBox","_sizeAutoObserverAdded","_paddingX","_paddingY","_borderX","_borderY","_marginX","_marginY","_isRTL","_sleeping","_defaultOptions","_currentOptions","_currentPreparedOptions","_lastUpdateTime","_swallowedUpdateTimeout","_windowElement","_documentElement","_htmlElement","_bodyElement","_targetElement","_hostElement","_sizeAutoObserverElement","_sizeObserverElement","_paddingElement","_viewportElement","_contentElement","_contentArrangeElement","_contentGlueElement","_textareaCoverElement","_scrollbarCornerElement","_scrollbarHorizontalElement","_scrollbarHorizontalTrackElement","_scrollbarHorizontalHandleElement","_scrollbarVerticalElement","_scrollbarVerticalTrackElement","_scrollbarVerticalHandleElement","_windowElementNative","_documentElementNative","_targetElementNative","_hostElementNative","_sizeAutoObserverElementNative","_sizeObserverElementNative","_paddingElementNative","_viewportElementNative","_contentElementNative","_hostSizeCache","_contentScrollSizeCache","_arrangeContentSizeCache","_hasOverflowCache","_hideOverflowCache","_widthAutoCache","_heightAutoCache","_cssBoxSizingCache","_cssPaddingCache","_cssBorderCache","_cssMarginCache","_cssDirectionCache","_cssDirectionDetectedCache","_paddingAbsoluteCache","_clipAlwaysCache","_contentGlueSizeCache","_overflowBehaviorCache","_overflowAmountCache","_ignoreOverlayScrollbarHidingCache","_autoUpdateCache","_sizeAutoCapableCache","_contentElementScrollSizeChangeDetectedCache","_hostElementSizeChangeDetectedCache","_scrollbarsVisibilityCache","_scrollbarsAutoHideCache","_scrollbarsClickScrollingCache","_scrollbarsDragScrollingCache","_resizeCache","_normalizeRTLCache","_classNameCache","_oldClassName","_textareaAutoWrappingCache","_textareaInfoCache","_textareaSizeCache","_textareaDynHeightCache","_textareaDynWidthCache","_bodyMinSizeCache","_mutationObserverHost","_mutationObserverContent","_mutationObserverHostCallback","_mutationObserverContentCallback","_mutationObserversConnected","_textareaHasFocus","_scrollbarsAutoHideTimeoutId","_scrollbarsAutoHideMoveTimeoutId","_scrollbarsAutoHideDelay","_scrollbarsAutoHideNever","_scrollbarsAutoHideScroll","_scrollbarsAutoHideMove","_scrollbarsAutoHideLeave","_scrollbarsHandleHovered","_scrollbarsHandlesDefineScrollPos","_resizeNone","_resizeBoth","_resizeHorizontal","_resizeVertical","_contentBorderSize","_scrollHorizontalInfo","_scrollVerticalInfo","_viewportSize","_nativeScrollbarMinSize","_strMinusHidden","_strMarginMinus","_strPaddingMinus","_strBorderMinus","_strTop","_strRight","_strBottom","_strLeft","_strMinMinus","_strMaxMinus","_strWidth","_strHeight","_strFloat","_strAuto","_strSync","_strScroll","_strHundredPercent","_strX","_strY","_strDot","_strScrollbar","_strMinusHorizontal","_strMinusVertical","_strMouseTouchDownEvent","_strMouseTouchUpEvent","_strMouseTouchMoveEvent","_strMouseEnter","_strMouseLeave","_strKeyDownEvent","_strKeyUpEvent","_strSelectStartEvent","_strTransitionEndEvent","_strResizeObserverProperty","_cassNamesPrefix","_classNameHTMLElement","_classNameHostElement","_classNameHostElementForeign","_classNameHostTextareaElement","_classNameHostScrollbarHorizontalHidden","_classNameHostScrollbarVerticalHidden","_classNameHostTransition","_classNameHostRTL","_classNameHostResizeDisabled","_classNameHostScrolling","_classNameHostOverflow","_classNameHostOverflowX","_classNameHostOverflowY","_classNameTextareaElement","_classNameTextareaCoverElement","_classNamePaddingElement","_classNameViewportElement","_classNameViewportNativeScrollbarsInvisible","_classNameViewportNativeScrollbarsOverlaid","_classNameContentElement","_classNameContentArrangeElement","_classNameContentGlueElement","_classNameSizeAutoObserverElement","_classNameResizeObserverElement","_classNameResizeObserverItemElement","_classNameResizeObserverItemFinalElement","_classNameTextInherit","_classNameScrollbar","_classNameScrollbarTrack","_classNameScrollbarTrackOff","_classNameScrollbarHandle","_classNameScrollbarHandleOff","_classNameScrollbarUnusable","_classNameScrollbarAutoHidden","_classNameScrollbarCorner","_classNameScrollbarCornerResize","_classNameScrollbarCornerResizeB","_classNameScrollbarCornerResizeH","_classNameScrollbarCornerResizeV","_classNameScrollbarHorizontal","_classNameScrollbarVertical","_classNameDragging","_classNameThemeNone","_classNamesDynamicDestroy","_callbacksInitQeueue","_viewportAttrsFromTarget","_extensions","_extensionsPrivateMethods","_swallowedUpdateHints","_swallowUpdateLag","_updateOnLoadEventName","_updateOnLoadElms","_updateAutoCache","_mutationObserverAttrsTextarea","_mutationObserverAttrsHost","_destroyEvents","sleep","force","attrsChanged","contentSizeC","doUpdateAuto","mutHost","mutContent","meaningfulAttrsChanged","updateAutoContentSizeChanged","_contentSizeChanged","_changedOptions","takeRecords","_hostSizeChanged","_force","updateElementsOnLoad","newOptions","changedOps","option","getObjectPropVal","setObjectPropVal","setOptions","destroy","extName","disconnectMutationObservers","setupResizeObserver","removeExt","pop","setupHostMouseTouchEvents","setupScrollbarsDOM","setupScrollbarCornerDOM","setupStructureDOM","updateOnLoadCallback","dispatchCallback","scroll","coordinates","infoX","infoY","normalizeInvert","normalizeNegate","scrollX","_currentScroll","scrollXRatio","_currentScrollRatio","maxScrollX","_maxScroll","ratio","handleOffset","_handleOffset","handleLength","_handleLength","handleLengthRatio","_handleLengthRatio","trackLength","_trackLength","snappedHandleOffset","_snappedHandleOffset","isRTL","isRTLNormalized","doScrollLeft","doScrollTop","animationOptions","settingsAxis","settingsScroll","settingsBlock","settingsMargin","finalElement","coordinatesXAxisProps","coordinatesYAxisProps","coordinatesOperators","durationIsObject","completeCallback","finalScroll","strEnd","strBegin","strCenter","strNearest","strAlways","strNever","strIfNeeded","strLength","elementObjSettingsAxisValues","elementObjSettingsBlockValues","elementObjSettingsScrollValues","coordinatesIsElementObj","possibleElement","possibleElementIsJQuery","possibleElementIsHTMLElement","updateScrollbarInfos","refreshScrollbarHandleOffset","proxyCompleteCallback","checkSettingsStringValue","currValue","allowedValues","getRawScroll","isX","coordinateProps","getFinalScroll","rawScroll","operator","amount","possibleOperator","isString","scrollInfo","currScroll","maxScroll","mult","isRTLisX","normalizeShortcuts","strReplace","evalFunc","eval","substr","parseToZeroOrNumber","isNaN","toFixed","normalizeIsRTLisX","operatorCurrScroll","invert","negate","getPerAxisValue","valueInternalType","defaultValue","valueArrLength","valueArrItem","resultDefault","valueType","generateMargin","marginTopRightBottomLeftArray","currValueType","valueDirections","marginLength","margin","axis","block","marginDefault","marginType","viewportScroll","viewportOffset","elementOffset","doNotScroll","elementScrollCoordinates","measuringElm","rawElementSize","width","height","elementSize","finalizeBlock","vars","getScrollbarVars","wh","_w_h","lt","_left_top","xy","_x_y","blockIsEnd","blockIsCenter","blockIsNearest","scrollNever","scrollIfNeeded","vpSize","vpOffset","elSize","elOffset","divide","elementCenterOffset","viewportCenterOffset","isInView","scrollStop","param1","param2","param3","getElements","elementName","host","padding","viewport","content","scrollbarHorizontal","scrollbar","track","handle","scrollbarVertical","scrollbarCorner","getState","stateProperty","prepare","extended","extendDeep","changePropertyName","destroyed","sleeping","widthAuto","heightAuto","overflowAmount","hideOverflow","hasOverflow","contentScrollSize","viewportSize","hostSize","documentMixed","ext","privateMethods","addExt","extensionOptions","instanceAdded","instanceContract","contractResult","registeredExtensionObj","extension","contractFulfilled","extensionFactory","contract","added","instanceRemoved","removed","valid","construct","setupResponsiveEventListener","element","eventNames","listener","passiveOrOptions","collected","method","onOff","events","passiveOrOptionsIsObj","passive","_passive","capture","_capture","nativeParam","addDestroyEventListener","targetElement","onElementResizedCallback","resizeObserver","strAnimationStartEvent","strChildNodes","constScroll","generateDiv","observe","dir","style","isDirty","rAFId","currWidth","currHeight","observerElement","shrinkElement","expandElement","expandElementChild","widthCache","heightCache","factor","reset","onResized","expandChildCSS","observerElementCSS","setTopRightBottomLeft","isIE","findFirst","onload","wnd","contentDocument","defaultView","directionChanged","scrollLeftValue","resizeObserverObj","disconnect","createMutationObservers","mutationTarget","mutationAttrName","mutationIsClass","oldMutationVal","newClassVal","hostClassNameRegex","contentTimeout","sizeAuto","action","mutationObserverContentLag","mutationObserver","contentLastUpdate","mutations","doUpdate","isUnknownMutation","textareaUpdate","mutation","doUpdateForce","mutatedAttrs","attributeName","oldValue","createHostClassNameRegExp","filter","hostClassNamesChanged","updateViewportAttrsFromTarget","connectMutationObservers","attributes","attributeOldValue","attributeFilter","subtree","childList","characterData","hostOnResized","changed","checkCache","hostOnMouseEnter","refreshScrollbarsAutoHide","hostOnMouseLeave","hostOnMouseMove","documentOnSelectStart","elm","eachUpdateOnLoad","updateOnLoadSelector","bodyMinSizeChanged","bodyMinSize","oldClassNames","newClassNames","regex","currClasses","diff","getArrayDifferences","idx","mutationType","strClosest","float","bodyMinSizeC","contentElementScrollSize","contentMeasureElement","getContentMeasureElement","textareaValueLength","setCSS","curr","cache","changedAttrs","checks","_elem","_attrs","check","isSizeAffectingCSSProperty","propertyName","flexBasis","affectingPropsX","affectingPropsXContentBox","affectingPropsY","affectingPropsYContentBox","_strS","_strVS","checkX","sizeIsAffected","checkPropertyName","attrs","targetAttr","origWidth","origHeight","wrapAttrOff","minWidth","minHeight","doMeasure","_originalWidth","_originalHeight","_dynamicWidth","_dynamicHeight","updateHints","displayIsHidden","hostSizeChanged","contentSizeChanged","changedOptions","swallow","checkCacheAutoForce","currentPreparedOptionsScrollbars","currentPreparedOptionsTextarea","scrollbarsVisibility","scrollbarsVisibilityChanged","scrollbarsAutoHide","scrollbarsAutoHideChanged","scrollbarsClickScrolling","scrollbarsClickScrollingChanged","scrollbarsDragScrolling","scrollbarsDragScrollingChanged","classNameChanged","resizeChanged","paddingAbsoluteChanged","clipAlwaysChanged","sizeAutoCapableChanged","ignoreOverlayScrollbarHiding","ignoreOverlayScrollbarHidingChanged","autoUpdateChanged","overflowBehaviorChanged","textareaDynWidth","textareaDynWidthChanged","textareaDynHeight","textareaDynHeightChanged","oldSize","newSize","sizeAutoObserverElementBCRect","textareaAutoWrapping","textareaAutoWrappingChanged","cssDirection","cssDirectionChanged","boxSizing","boxSizingChanged","getTopRightBottomLeftHost","isRTLLeft","isRTLRight","widthAutoResizeDetection","widthAutoObserverDetection","right","tmpCurrHostWidth","tmpCurrContentGlueWidth","tmpNewHostWidth","widthAutoChanged","wasWidthAuto","bottom","heightAutoChanged","wasHeightAuto","border","contentElementCSS","contentGlueElementCSS","getHostSize","getViewportSize","paddingAbsoluteX","r","paddingAbsoluteY","paddingElementCSS","textareaCSS","paddingValues","textareaSize","textareaSizeChanged","textareaDynOrigSize","strOverflowX","strOverflowY","strVisible","viewportElementResetCSS","resetXTmp","ys","resetBottomTmp","xs","contentSize","hostAbsoluteRectSize","contentGlueSize","textareaCoverCSS","setContentGlueElementCSSfunction","horizontal","scrollbarVars","strWH","_width_height","autoSize","borderSize","paddingSize","marginSize","hideOverflowForceTextarea","previousOverflowAmount","overflowBehaviorIsVS","overflowBehaviorIsVH","overflowBehaviorIsS","canScroll","viewportRect","setOverflowVariables","xyI","widthHeight","scrollMax","_Left_Top","fractionalOverflowAmount","checkFractionalOverflowAmount","setContentElementCSS","borderDesign","contentArrangeElementCSS","arrangeContent","arrangeChanged","scrollbarVarsInverted","strDirection","invertedAutoSize","addRemoveClass","setViewportCSS","viewportElementCSS","XY","_X_Y","elementStyle","webkitTransform","floatTmp","posLeftWithoutFloat","textareaInfo","getTextareaInfo","textareaRowsChanged","_rows","cursorRow","_cursorRow","cursorCol","_cursorColumn","widestRow","_widestRow","lastRow","lastCol","_columns","cursorIsLastPosition","_cursorPosition","_cursorMax","textareaScrollAmount","scrollbarsVisibilityVisible","scrollbarsVisibilityHidden","scrollbarsVisibilityAuto","refreshScrollbarsVisibility","showX","showY","refreshScrollbarAppearance","refreshScrollbarHandleLength","refreshScrollbarsInteractive","xScrollable","yScrollable","clipped","forced","validatedOpts","strParent","classNameResizeObserverHost","classNameTextareaElementFull","textareaClass","adoptAttrs","adoptAttrsMap","applyAdoptedAttrs","applyAdoptedAttrsElm","hostElementClassNames","hostElementCSS","selectOrGenerateDivByClass","setupStructureEvents","textareaUpdateIntervalID","scrollStopTimeoutId","textareaKeyDownRestrictedKeyCodes","textareaKeyDownKeyCodesList","scrollStopDelay","strFocus","updateTextarea","doClearInterval","clearInterval","textareaOnScroll","textareaOnDrop","textareaOnFocus","textareaOnFocusout","textareaOnKeyDown","keyCode","setInterval","textareaOnKeyUp","contentOnTransitionEnd","viewportOnScroll","nativeOverlayScrollbarsAreActive","horizontalElements","verticalElements","selectOrGenerateScrollbarDOM","isHorizontal","_scrollbar","_track","_handle","resetScrollbarDOM","setupScrollbarEvents","trackTimeout","mouseDownScroll","mouseDownOffset","mouseDownInvertedScale","scrollbarVarsInfo","_info","insideIFrame","strActive","strSnapHandle","strClickEvent","scrollDurationFactor","increaseDecreaseScrollAmountKeyCodes","getPointerPosition","getPreparedScrollbarsOption","increaseTrackScrollAmount","decreaseTrackScrollAmount","stopClickEventPropagation","documentKeyDown","documentKeyUp","onMouseTouchDownContinue","isTouchEvent","documentDragMove","scrollDelta","isFinite","documentMouseTouchUp","clientX","clientY","onHandleMouseTouchDown","onHandleMouseTouchDownAction","getHostElementInvertedScale","onTrackMouseTouchDown","decreaseScroll","handleToViewportRatio","scrollDistance","scrollBaseDuration","scrollFirstIterationDelay","trackOffset","ctrlKey","instantScroll","shiftKey","instantScrollTransition","isFirstIteration","scrollActionFinsished","transition","scrollActionInstantFinished","scrollAction","mouseOffset","scrollRange","scrollDuration","timeoutDelay","instantScrollPosition","rtlIsNormal","decreaseScrollCondition","scrollObj","animationObj","onTrackMouseTouchEnter","onTrackMouseTouchLeave","onScrollbarMouseTouchDown","shallBeVisible","scrollbarElement","delayfree","anyActive","handleCSS","digit","handleRatio","floor","_Width_Height","scrollOrTransition","transformOffset","translateValue","transitionDuration","isRTLisHorizontal","strTranslateBrace","strTransform","strTransition","nativeScroll","currentScroll","handleTrackDiff","getScrollRatio","getHandleOffset","scrollRatio","getCSSTransitionString","isTrack","element2","_l_t","setupScrollbarCornerEvents","reconnectMutationObserver","mouseDownPosition","mouseDownSize","pageOffset","getCoordinates","eventIsTrusted","releaseCapture","screenX","screenY","setCapture","args","dependent","extensionOnName","targetCSSObject","prefix","zeroX","zeroY","transitionStr","assembledValue","strResult","valueArray","regExpString","regExpMain","RegExp","regExpValidate","properties","splitCssStyleByComma","$1","withCurrClassNameOption","withOldClassNameOption","appendix","appendClasses","condition","strOwnerDocument","strHTMLElement","parentWindow","nodeName","a1","a2","k","toFloat","num","textareaCursorPosition","selectionStart","rowCols","textareaValue","textareaLength","textareaRowSplit","textareaLastRow","textareaCurrentCursorRowSplit","textareaLastCol","classesOrAttrs","selectParentOrOnlyChildren","onlyChildren","selectParent","path","splits","splitsLength","extendObj","extendObjRoot","current","doAdd","initBodyScroll","bodyMouseTouchDownListener","activeElement","focus","pluginTargetElements","optsIsPlainObj","newDefaultOptions","currDefaultOptions","osInstance","extensionName","extNameTypeString","fn","overlayScrollbars","_elements","factory","__assign","assign","prototype","getDefaultStyle","visible","_a","_b","_c","_d","radius","_e","color","_f","ariaLabel","wrapperStyle","wrapperClass","_g","React","viewBox","xmlns","fill","cx","cy","Number","begin","dur","calcMode","repeatCount","NOT_FOUND","defaultEqualityCheck","defaultMemoize","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","createCacheKeyComparator","equals","entry","put","getEntries","clear","createSingletonCache","entries","cacheIndex","findIndex","unshift","createLruCache","memoized","matchingEntry","clearCache","getDependencies","funcs","dependencies","every","dep","dependencyTypes","map","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","params","lastResult","recomputations","resetRecomputations","nanoid","size","crypto","getRandomValues","Uint8Array","reduce","byte"],"sourceRoot":""}